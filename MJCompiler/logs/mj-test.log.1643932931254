INFO  01:01:22,628 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  01:01:22,658 - #2 program
INFO  01:01:22,658 - #16 test302
INFO  01:01:22,658 - #48 const
INFO  01:01:22,659 - #16 int
INFO  01:01:22,659 - #16 jedan
INFO  01:01:22,659 - #13 =
INFO  01:01:22,659 - #15 1
INFO  01:01:22,659 - #5 ;
INFO  01:01:22,660 - #16 int
INFO  01:01:22,660 - #16 i
INFO  01:01:22,660 - #5 ;
INFO  01:01:22,660 - #16 bool
INFO  01:01:22,661 - #16 ibool
INFO  01:01:22,661 - #5 ;
INFO  01:01:22,661 - #16 int
INFO  01:01:22,661 - #16 niz2
INFO  01:01:22,661 - #5 ;
INFO  01:01:22,661 - #49 record
INFO  01:01:22,661 - #16 Test
INFO  01:01:22,661 - #3 {
INFO  01:01:22,661 - #16 int
INFO  01:01:22,661 - #16 niz
INFO  01:01:22,667 - #50 [
INFO  01:01:22,667 - #51 ]
INFO  01:01:22,667 - #5 ;
INFO  01:01:22,667 - #16 int
INFO  01:01:22,667 - #16 a
INFO  01:01:22,667 - #5 ;
INFO  01:01:22,667 - #4 }
INFO  01:01:22,668 - #49 record
INFO  01:01:22,668 - #16 Test2
INFO  01:01:22,668 - #3 {
INFO  01:01:22,668 - #16 int
INFO  01:01:22,668 - #16 niz23
INFO  01:01:22,668 - #50 [
INFO  01:01:22,668 - #51 ]
INFO  01:01:22,668 - #5 ;
INFO  01:01:22,668 - #16 int
INFO  01:01:22,668 - #16 a2
INFO  01:01:22,668 - #5 ;
INFO  01:01:22,668 - #4 }
INFO  01:01:22,668 - #16 Test
INFO  01:01:22,668 - #16 t1
INFO  01:01:22,668 - #8 ,
INFO  01:01:22,668 - #16 t2
INFO  01:01:22,668 - #5 ;
INFO  01:01:22,668 - #3 {
INFO  01:01:22,669 - #16 int
INFO  01:01:22,669 - #16 sum
INFO  01:01:22,669 - #6 (
INFO  01:01:22,669 - #16 int
INFO  01:01:22,670 - #16 z
INFO  01:01:22,670 - #8 ,
INFO  01:01:22,670 - #16 bool
INFO  01:01:22,670 - #50 [
ERROR 01:01:22,670 - 
Sintaksna greska na liniji 28
INFO  01:01:22,670 - #51 ]
INFO  01:01:22,670 - #16 d
INFO  01:01:22,670 - #7 )
INFO  01:01:22,670 - #3 {
INFO  01:01:22,670 - #10 return
INFO  01:01:22,670 - #16 z
ERROR 01:01:22,670 - Izvrsen oporavak do ) u liniji 28
INFO  01:01:22,671 - #11 +
INFO  01:01:22,672 - #16 d
INFO  01:01:22,673 - #5 ;
INFO  01:01:22,673 - #4 }
INFO  01:01:22,674 - #16 int
INFO  01:01:22,677 - #16 inkrement
INFO  01:01:22,677 - #6 (
INFO  01:01:22,677 - #16 char
INFO  01:01:22,677 - #16 a
INFO  01:01:22,677 - #8 ,
INFO  01:01:22,677 - #16 char
INFO  01:01:22,677 - #16 inc
INFO  01:01:22,677 - #7 )
INFO  01:01:22,677 - #16 int
INFO  01:01:22,677 - #16 pom
INFO  01:01:22,678 - #5 ;
INFO  01:01:22,678 - #3 {
INFO  01:01:22,678 - #19 if
INFO  01:01:22,678 - #6 (
INFO  01:01:22,678 - #16 inc
INFO  01:01:22,678 - #22 ==
INFO  01:01:22,678 - #16 jedan
INFO  01:01:22,678 - #7 )
INFO  01:01:22,680 - #16 pom
INFO  01:01:22,680 - #13 =
INFO  01:01:22,680 - #15 1
INFO  01:01:22,680 - #5 ;
INFO  01:01:22,680 - #20 else
INFO  01:01:22,680 - #19 if
INFO  01:01:22,680 - #6 (
INFO  01:01:22,681 - #16 inc
INFO  01:01:22,681 - #22 ==
INFO  01:01:22,681 - #15 2
INFO  01:01:22,681 - #7 )
INFO  01:01:22,681 - #16 pom
INFO  01:01:22,681 - #13 =
INFO  01:01:22,681 - #16 a
INFO  01:01:22,681 - #5 ;
INFO  01:01:22,681 - #10 return
INFO  01:01:22,681 - #16 sum
INFO  01:01:22,681 - #6 (
INFO  01:01:22,681 - #16 a
INFO  01:01:22,681 - #8 ,
INFO  01:01:22,682 - #16 pom
INFO  01:01:22,682 - #7 )
INFO  01:01:22,683 - #5 ;
INFO  01:01:22,683 - #4 }
INFO  01:01:22,683 - #16 bool
INFO  01:01:22,683 - #16 verify
INFO  01:01:22,683 - #6 (
INFO  01:01:22,683 - #7 )
INFO  01:01:22,684 - #3 {
INFO  01:01:22,684 - #16 sum
INFO  01:01:22,684 - #6 (
INFO  01:01:22,684 - #15 1
INFO  01:01:22,684 - #8 ,
INFO  01:01:22,684 - #15 2
INFO  01:01:22,684 - #7 )
INFO  01:01:22,684 - #5 ;
INFO  01:01:22,684 - #9 print
INFO  01:01:22,684 - #6 (
INFO  01:01:22,684 - #17 'v'
INFO  01:01:22,684 - #7 )
INFO  01:01:22,684 - #5 ;
INFO  01:01:22,685 - #10 return
INFO  01:01:22,685 - #18 false
INFO  01:01:22,685 - #5 ;
INFO  01:01:22,685 - #4 }
INFO  01:01:22,685 - #14 void
INFO  01:01:22,685 - #16 main
INFO  01:01:22,685 - #6 (
INFO  01:01:22,685 - #7 )
INFO  01:01:22,685 - #3 {
INFO  01:01:22,685 - #19 if
INFO  01:01:22,686 - #6 (
INFO  01:01:22,686 - #15 1
INFO  01:01:22,686 - #23 !=
INFO  01:01:22,686 - #15 1
INFO  01:01:22,686 - #7 )
INFO  01:01:22,686 - #9 print
INFO  01:01:22,686 - #6 (
INFO  01:01:22,686 - #12 -
INFO  01:01:22,686 - #15 6
INFO  01:01:22,686 - #7 )
INFO  01:01:22,686 - #5 ;
INFO  01:01:22,687 - #20 else
INFO  01:01:22,687 - #9 print
INFO  01:01:22,687 - #6 (
INFO  01:01:22,687 - #15 0
INFO  01:01:22,687 - #7 )
INFO  01:01:22,687 - #5 ;
INFO  01:01:22,687 - #16 ibool
INFO  01:01:22,687 - #13 =
INFO  01:01:22,687 - #18 false
INFO  01:01:22,687 - #5 ;
INFO  01:01:22,687 - #16 i
INFO  01:01:22,687 - #13 =
INFO  01:01:22,687 - #15 0
INFO  01:01:22,687 - #5 ;
INFO  01:01:22,687 - #34 do
INFO  01:01:22,687 - #3 {
INFO  01:01:22,688 - #19 if
INFO  01:01:22,688 - #6 (
INFO  01:01:22,688 - #16 i
INFO  01:01:22,688 - #22 ==
INFO  01:01:22,688 - #15 2
INFO  01:01:22,688 - #7 )
INFO  01:01:22,688 - #16 ibool
INFO  01:01:22,688 - #13 =
INFO  01:01:22,688 - #18 true
INFO  01:01:22,688 - #5 ;
INFO  01:01:22,688 - #16 i
INFO  01:01:22,688 - #46 ++
INFO  01:01:22,688 - #5 ;
INFO  01:01:22,688 - #4 }
INFO  01:01:22,688 - #35 while
INFO  01:01:22,689 - #6 (
INFO  01:01:22,689 - #16 i
INFO  01:01:22,689 - #26 <
INFO  01:01:22,689 - #15 5
INFO  01:01:22,689 - #7 )
INFO  01:01:22,689 - #5 ;
INFO  01:01:22,689 - #19 if
INFO  01:01:22,689 - #6 (
INFO  01:01:22,689 - #16 ibool
INFO  01:01:22,689 - #7 )
INFO  01:01:22,689 - #19 if
INFO  01:01:22,689 - #6 (
INFO  01:01:22,690 - #16 i
INFO  01:01:22,690 - #22 ==
INFO  01:01:22,690 - #15 5
INFO  01:01:22,690 - #7 )
INFO  01:01:22,690 - #9 print
INFO  01:01:22,690 - #6 (
INFO  01:01:22,690 - #15 1
INFO  01:01:22,690 - #7 )
INFO  01:01:22,690 - #5 ;
INFO  01:01:22,690 - #20 else
INFO  01:01:22,690 - #9 print
INFO  01:01:22,690 - #6 (
INFO  01:01:22,690 - #12 -
INFO  01:01:22,690 - #15 1
INFO  01:01:22,690 - #7 )
INFO  01:01:22,690 - #5 ;
INFO  01:01:22,690 - #16 t1
INFO  01:01:22,690 - #13 =
INFO  01:01:22,690 - #36 new
INFO  01:01:22,690 - #16 Test
INFO  01:01:22,690 - #5 ;
INFO  01:01:22,690 - #16 t1
INFO  01:01:22,690 - #43 .
INFO  01:01:22,690 - #16 a
INFO  01:01:22,690 - #13 =
INFO  01:01:22,690 - #15 2
INFO  01:01:22,690 - #5 ;
INFO  01:01:22,691 - #16 t1
INFO  01:01:22,691 - #43 .
INFO  01:01:22,691 - #16 niz
INFO  01:01:22,691 - #13 =
INFO  01:01:22,691 - #36 new
INFO  01:01:22,691 - #16 int
INFO  01:01:22,691 - #50 [
INFO  01:01:22,691 - #15 3
INFO  01:01:22,691 - #51 ]
INFO  01:01:22,691 - #5 ;
INFO  01:01:22,691 - #16 t1
INFO  01:01:22,691 - #43 .
INFO  01:01:22,691 - #16 niz
INFO  01:01:22,691 - #50 [
INFO  01:01:22,691 - #15 0
INFO  01:01:22,691 - #51 ]
INFO  01:01:22,691 - #13 =
INFO  01:01:22,691 - #15 1
INFO  01:01:22,691 - #28 *
INFO  01:01:22,691 - #16 t1
INFO  01:01:22,692 - #43 .
INFO  01:01:22,692 - #16 a
INFO  01:01:22,692 - #5 ;
INFO  01:01:22,692 - #16 t1
INFO  01:01:22,692 - #43 .
INFO  01:01:22,692 - #16 niz
INFO  01:01:22,692 - #50 [
INFO  01:01:22,693 - #15 1
INFO  01:01:22,693 - #51 ]
INFO  01:01:22,693 - #13 =
INFO  01:01:22,693 - #15 2
INFO  01:01:22,693 - #28 *
INFO  01:01:22,693 - #16 t1
INFO  01:01:22,693 - #43 .
INFO  01:01:22,693 - #16 a
INFO  01:01:22,693 - #5 ;
INFO  01:01:22,693 - #16 t1
INFO  01:01:22,693 - #43 .
INFO  01:01:22,693 - #16 niz
INFO  01:01:22,693 - #50 [
INFO  01:01:22,693 - #15 2
INFO  01:01:22,693 - #51 ]
INFO  01:01:22,693 - #13 =
INFO  01:01:22,693 - #16 sum
INFO  01:01:22,693 - #6 (
INFO  01:01:22,693 - #16 t1
INFO  01:01:22,693 - #43 .
INFO  01:01:22,693 - #16 niz
INFO  01:01:22,693 - #50 [
INFO  01:01:22,693 - #15 1
INFO  01:01:22,693 - #51 ]
INFO  01:01:22,693 - #8 ,
INFO  01:01:22,693 - #16 t1
INFO  01:01:22,693 - #43 .
INFO  01:01:22,693 - #16 niz
INFO  01:01:22,693 - #50 [
INFO  01:01:22,693 - #15 0
INFO  01:01:22,693 - #51 ]
INFO  01:01:22,693 - #7 )
INFO  01:01:22,694 - #28 *
INFO  01:01:22,694 - #16 t1
INFO  01:01:22,694 - #43 .
INFO  01:01:22,694 - #16 a
INFO  01:01:22,694 - #11 +
INFO  01:01:22,694 - #15 1
INFO  01:01:22,694 - #5 ;
INFO  01:01:22,694 - #19 if
INFO  01:01:22,694 - #6 (
INFO  01:01:22,694 - #16 verify
INFO  01:01:22,694 - #6 (
INFO  01:01:22,694 - #7 )
INFO  01:01:22,694 - #7 )
INFO  01:01:22,694 - #9 print
INFO  01:01:22,694 - #6 (
INFO  01:01:22,694 - #16 ord
INFO  01:01:22,694 - #6 (
INFO  01:01:22,694 - #17 'A'
INFO  01:01:22,694 - #7 )
INFO  01:01:22,694 - #7 )
INFO  01:01:22,694 - #5 ;
INFO  01:01:22,695 - #20 else
INFO  01:01:22,695 - #9 print
INFO  01:01:22,695 - #6 (
INFO  01:01:22,695 - #16 ord
INFO  01:01:22,695 - #6 (
INFO  01:01:22,695 - #17 'a'
INFO  01:01:22,695 - #7 )
INFO  01:01:22,695 - #7 )
INFO  01:01:22,695 - #5 ;
INFO  01:01:22,695 - #9 print
INFO  01:01:22,695 - #6 (
INFO  01:01:22,695 - #16 eol
INFO  01:01:22,695 - #7 )
INFO  01:01:22,695 - #5 ;
INFO  01:01:22,695 - #16 i
INFO  01:01:22,695 - #13 =
INFO  01:01:22,695 - #15 0
INFO  01:01:22,695 - #5 ;
INFO  01:01:22,695 - #34 do
INFO  01:01:22,695 - #3 {
INFO  01:01:22,695 - #19 if
INFO  01:01:22,695 - #6 (
INFO  01:01:22,695 - #16 i
INFO  01:01:22,695 - #22 ==
INFO  01:01:22,695 - #15 3
INFO  01:01:22,695 - #7 )
INFO  01:01:22,695 - #3 {
INFO  01:01:22,695 - #16 i
INFO  01:01:22,695 - #46 ++
INFO  01:01:22,695 - #5 ;
INFO  01:01:22,695 - #39 continue
INFO  01:01:22,695 - #5 ;
INFO  01:01:22,695 - #4 }
INFO  01:01:22,696 - #19 if
INFO  01:01:22,696 - #6 (
INFO  01:01:22,696 - #16 i
INFO  01:01:22,696 - #22 ==
INFO  01:01:22,696 - #15 4
INFO  01:01:22,696 - #7 )
INFO  01:01:22,696 - #31 break
INFO  01:01:22,696 - #5 ;
INFO  01:01:22,696 - #16 i
INFO  01:01:22,696 - #13 =
INFO  01:01:22,696 - #16 inkrement
INFO  01:01:22,696 - #6 (
INFO  01:01:22,696 - #16 i
INFO  01:01:22,696 - #8 ,
INFO  01:01:22,697 - #15 1
INFO  01:01:22,697 - #7 )
INFO  01:01:22,697 - #5 ;
INFO  01:01:22,697 - #4 }
INFO  01:01:22,697 - #35 while
INFO  01:01:22,697 - #6 (
INFO  01:01:22,697 - #16 i
INFO  01:01:22,697 - #26 <
INFO  01:01:22,697 - #15 10
INFO  01:01:22,697 - #7 )
INFO  01:01:22,697 - #5 ;
INFO  01:01:22,697 - #19 if
INFO  01:01:22,697 - #6 (
INFO  01:01:22,697 - #16 i
INFO  01:01:22,697 - #22 ==
INFO  01:01:22,697 - #15 3
INFO  01:01:22,697 - #44 &&
INFO  01:01:22,697 - #16 verify
INFO  01:01:22,697 - #6 (
INFO  01:01:22,697 - #7 )
INFO  01:01:22,697 - #7 )
INFO  01:01:22,697 - #9 print
INFO  01:01:22,697 - #6 (
INFO  01:01:22,697 - #12 -
INFO  01:01:22,697 - #15 4
INFO  01:01:22,697 - #7 )
INFO  01:01:22,697 - #5 ;
INFO  01:01:22,697 - #20 else
INFO  01:01:22,697 - #9 print
INFO  01:01:22,697 - #6 (
INFO  01:01:22,697 - #15 4
INFO  01:01:22,697 - #7 )
INFO  01:01:22,698 - #5 ;
INFO  01:01:22,698 - #37 read
INFO  01:01:22,698 - #6 (
INFO  01:01:22,698 - #16 t1
INFO  01:01:22,698 - #43 .
INFO  01:01:22,698 - #16 niz
INFO  01:01:22,698 - #50 [
INFO  01:01:22,698 - #15 0
INFO  01:01:22,698 - #51 ]
INFO  01:01:22,698 - #7 )
INFO  01:01:22,698 - #5 ;
INFO  01:01:22,698 - #37 read
INFO  01:01:22,698 - #6 (
INFO  01:01:22,698 - #16 t1
INFO  01:01:22,698 - #43 .
INFO  01:01:22,698 - #16 niz
INFO  01:01:22,698 - #50 [
INFO  01:01:22,698 - #15 1
INFO  01:01:22,698 - #51 ]
INFO  01:01:22,698 - #7 )
INFO  01:01:22,698 - #5 ;
INFO  01:01:22,698 - #37 read
INFO  01:01:22,698 - #6 (
INFO  01:01:22,698 - #16 t1
INFO  01:01:22,698 - #43 .
INFO  01:01:22,698 - #16 niz
INFO  01:01:22,698 - #50 [
INFO  01:01:22,698 - #15 2
INFO  01:01:22,698 - #51 ]
INFO  01:01:22,698 - #7 )
INFO  01:01:22,698 - #5 ;
INFO  01:01:22,698 - #9 print
INFO  01:01:22,698 - #6 (
INFO  01:01:22,698 - #16 eol
INFO  01:01:22,698 - #7 )
INFO  01:01:22,698 - #5 ;
INFO  01:01:22,699 - #16 chr
INFO  01:01:22,699 - #6 (
INFO  01:01:22,699 - #15 3
INFO  01:01:22,699 - #7 )
INFO  01:01:22,699 - #5 ;
INFO  01:01:22,699 - #9 print
INFO  01:01:22,699 - #6 (
INFO  01:01:22,699 - #16 sum
INFO  01:01:22,699 - #6 (
INFO  01:01:22,699 - #16 sum
INFO  01:01:22,699 - #6 (
INFO  01:01:22,699 - #16 t1
INFO  01:01:22,699 - #43 .
INFO  01:01:22,699 - #16 niz
INFO  01:01:22,699 - #50 [
INFO  01:01:22,699 - #15 0
INFO  01:01:22,699 - #51 ]
INFO  01:01:22,699 - #8 ,
INFO  01:01:22,699 - #16 t1
INFO  01:01:22,699 - #43 .
INFO  01:01:22,699 - #16 niz
INFO  01:01:22,699 - #50 [
INFO  01:01:22,699 - #15 1
INFO  01:01:22,699 - #51 ]
INFO  01:01:22,699 - #7 )
INFO  01:01:22,699 - #8 ,
INFO  01:01:22,699 - #16 t1
INFO  01:01:22,699 - #43 .
INFO  01:01:22,699 - #16 niz
INFO  01:01:22,699 - #50 [
INFO  01:01:22,699 - #15 2
INFO  01:01:22,699 - #51 ]
INFO  01:01:22,699 - #7 )
INFO  01:01:22,699 - #7 )
INFO  01:01:22,699 - #5 ;
INFO  01:01:22,699 - #9 print
INFO  01:01:22,699 - #6 (
INFO  01:01:22,699 - #16 eol
INFO  01:01:22,699 - #7 )
INFO  01:01:22,699 - #5 ;
INFO  01:01:22,699 - #9 print
INFO  01:01:22,699 - #6 (
INFO  01:01:22,699 - #16 inkrement
INFO  01:01:22,699 - #6 (
INFO  01:01:22,699 - #16 t1
INFO  01:01:22,699 - #43 .
INFO  01:01:22,699 - #16 niz
INFO  01:01:22,699 - #50 [
INFO  01:01:22,699 - #15 2
INFO  01:01:22,700 - #51 ]
INFO  01:01:22,700 - #8 ,
INFO  01:01:22,700 - #15 2
INFO  01:01:22,700 - #7 )
INFO  01:01:22,700 - #7 )
INFO  01:01:22,700 - #5 ;
INFO  01:01:22,700 - #16 t2
INFO  01:01:22,700 - #13 =
INFO  01:01:22,700 - #36 new
INFO  01:01:22,700 - #16 Test
INFO  01:01:22,700 - #5 ;
INFO  01:01:22,700 - #16 t2
INFO  01:01:22,700 - #43 .
INFO  01:01:22,700 - #16 a
INFO  01:01:22,700 - #13 =
INFO  01:01:22,700 - #15 3
INFO  01:01:22,700 - #5 ;
INFO  01:01:22,700 - #16 t2
INFO  01:01:22,700 - #43 .
INFO  01:01:22,700 - #16 niz
INFO  01:01:22,700 - #13 =
INFO  01:01:22,700 - #36 new
INFO  01:01:22,700 - #16 int
INFO  01:01:22,700 - #50 [
INFO  01:01:22,700 - #15 3
INFO  01:01:22,700 - #51 ]
INFO  01:01:22,700 - #5 ;
INFO  01:01:22,700 - #16 i
INFO  01:01:22,700 - #13 =
INFO  01:01:22,701 - #15 0
INFO  01:01:22,701 - #5 ;
INFO  01:01:22,701 - #34 do
INFO  01:01:22,701 - #3 {
INFO  01:01:22,701 - #16 t2
INFO  01:01:22,701 - #43 .
INFO  01:01:22,701 - #16 niz
INFO  01:01:22,701 - #50 [
INFO  01:01:22,701 - #16 i
INFO  01:01:22,701 - #51 ]
INFO  01:01:22,701 - #13 =
INFO  01:01:22,701 - #16 t1
INFO  01:01:22,701 - #43 .
INFO  01:01:22,701 - #16 niz
INFO  01:01:22,701 - #50 [
INFO  01:01:22,701 - #16 i
INFO  01:01:22,701 - #51 ]
INFO  01:01:22,701 - #28 *
INFO  01:01:22,701 - #15 2
INFO  01:01:22,701 - #28 *
INFO  01:01:22,701 - #16 t2
INFO  01:01:22,702 - #43 .
INFO  01:01:22,702 - #16 a
INFO  01:01:22,702 - #5 ;
INFO  01:01:22,702 - #16 i
INFO  01:01:22,702 - #46 ++
INFO  01:01:22,702 - #5 ;
INFO  01:01:22,702 - #4 }
INFO  01:01:22,702 - #35 while
INFO  01:01:22,702 - #6 (
INFO  01:01:22,702 - #16 i
INFO  01:01:22,702 - #26 <
INFO  01:01:22,702 - #15 3
INFO  01:01:22,702 - #7 )
INFO  01:01:22,702 - #5 ;
INFO  01:01:22,702 - #9 print
INFO  01:01:22,702 - #6 (
INFO  01:01:22,703 - #16 t2
INFO  01:01:22,703 - #43 .
INFO  01:01:22,703 - #16 niz
INFO  01:01:22,703 - #50 [
INFO  01:01:22,703 - #15 0
INFO  01:01:22,703 - #51 ]
INFO  01:01:22,703 - #7 )
INFO  01:01:22,703 - #5 ;
INFO  01:01:22,703 - #9 print
INFO  01:01:22,703 - #6 (
INFO  01:01:22,703 - #16 t2
INFO  01:01:22,703 - #43 .
INFO  01:01:22,703 - #16 niz
INFO  01:01:22,703 - #50 [
INFO  01:01:22,703 - #15 1
INFO  01:01:22,703 - #51 ]
INFO  01:01:22,703 - #7 )
INFO  01:01:22,703 - #5 ;
INFO  01:01:22,703 - #9 print
INFO  01:01:22,703 - #6 (
INFO  01:01:22,703 - #16 t2
INFO  01:01:22,703 - #43 .
INFO  01:01:22,704 - #16 niz
INFO  01:01:22,704 - #50 [
INFO  01:01:22,704 - #15 2
INFO  01:01:22,704 - #51 ]
INFO  01:01:22,704 - #7 )
INFO  01:01:22,704 - #5 ;
INFO  01:01:22,704 - #9 print
INFO  01:01:22,704 - #6 (
INFO  01:01:22,704 - #16 eol
INFO  01:01:22,704 - #7 )
INFO  01:01:22,704 - #5 ;
INFO  01:01:22,704 - #16 i
INFO  01:01:22,704 - #13 =
INFO  01:01:22,704 - #15 0
INFO  01:01:22,704 - #5 ;
INFO  01:01:22,704 - #16 niz2
INFO  01:01:22,704 - #13 =
INFO  01:01:22,704 - #15 0
INFO  01:01:22,704 - #5 ;
INFO  01:01:22,704 - #34 do
INFO  01:01:22,704 - #3 {
INFO  01:01:22,704 - #16 niz2
INFO  01:01:22,704 - #13 =
INFO  01:01:22,704 - #16 niz2
INFO  01:01:22,704 - #11 +
INFO  01:01:22,704 - #16 t1
INFO  01:01:22,704 - #43 .
INFO  01:01:22,704 - #16 niz
INFO  01:01:22,704 - #50 [
INFO  01:01:22,704 - #16 i
INFO  01:01:22,704 - #51 ]
INFO  01:01:22,704 - #11 +
INFO  01:01:22,704 - #16 t2
INFO  01:01:22,704 - #43 .
INFO  01:01:22,704 - #16 niz
INFO  01:01:22,704 - #50 [
INFO  01:01:22,704 - #16 i
INFO  01:01:22,704 - #51 ]
INFO  01:01:22,704 - #5 ;
INFO  01:01:22,704 - #16 i
INFO  01:01:22,704 - #46 ++
INFO  01:01:22,704 - #5 ;
INFO  01:01:22,704 - #4 }
INFO  01:01:22,704 - #35 while
INFO  01:01:22,704 - #6 (
INFO  01:01:22,704 - #16 i
INFO  01:01:22,704 - #26 <
INFO  01:01:22,704 - #15 3
INFO  01:01:22,704 - #7 )
INFO  01:01:22,704 - #5 ;
INFO  01:01:22,704 - #9 print
INFO  01:01:22,704 - #6 (
INFO  01:01:22,704 - #16 niz2
INFO  01:01:22,704 - #7 )
INFO  01:01:22,704 - #5 ;
INFO  01:01:22,704 - #9 print
INFO  01:01:22,704 - #6 (
INFO  01:01:22,704 - #16 eol
INFO  01:01:22,704 - #7 )
INFO  01:01:22,705 - #5 ;
INFO  01:01:22,705 - #4 }
INFO  01:01:22,705 - #4 }
INFO  01:01:22,712 - Trenutan tip konstante je:  int na liniji 5
INFO  01:01:22,712 - Deklarisana promenljiva i na liniji 7
INFO  01:01:22,712 - Deklarisana promenljiva ibool na liniji 10
INFO  01:01:22,712 - Deklarisana promenljiva niz2 na liniji 12
INFO  01:01:22,712 - Deklarisana promenljiva niz na liniji 15
INFO  01:01:22,712 - Deklarisana promenljiva a na liniji 16
INFO  01:01:22,712 - Deklarisana je rekord :  Test na liniji 14
INFO  01:01:22,712 - Deklarisana promenljiva niz23 na liniji 20
INFO  01:01:22,712 - Deklarisana promenljiva a2 na liniji 21
INFO  01:01:22,712 - Deklarisana je rekord :  Test2 na liniji 19
INFO  01:01:22,712 - Deklarisana promenljiva t2 na liniji 24
INFO  01:01:22,712 - Deklarisana promenljiva t1 na liniji 24
INFO  01:01:22,712 - Obradjuje se funkcija sum na liniji 28
ERROR 01:01:22,712 - Greska na liniji 31 : ime z nije deklarisano! 
ERROR 01:01:22,712 - Greska na liniji 31 : ime d nije deklarisano! 
ERROR 01:01:22,712 - Greska na liniji 31 : ime d nije deklarisano! 
ERROR 01:01:22,712 - Semanticka greska na liniji 31  z ne postoji!
ERROR 01:01:22,712 - Semanticka greska na liniji 31: funkcija sum kao povratni tip prihvata: int
INFO  01:01:22,713 - Obradjuje se funkcija inkrement na liniji 34
INFO  01:01:22,713 - Naveden argument inc na liniji 34
INFO  01:01:22,713 - TypeNAME: char
INFO  01:01:22,713 - Naveden argument a na liniji 34
INFO  01:01:22,713 - Deklarisana promenljiva pom na liniji 35
ERROR 01:01:22,713 - Semanticka greska na liniji 38 nekompatibilni tipovi prilikom dodele!
INFO  01:01:22,713 - Obradjuje se funkcija verify na liniji 44
INFO  01:01:22,713 - Pronadjen poziv funkcije sum na liniji 46
ERROR 01:01:22,713 - Greska na liniji 46 pogresan broj argumenata za funkciju: 2sum
INFO  01:01:22,713 - Obradjuje se funkcija main na liniji 53
ERROR 01:01:22,713 - Semanticka greska na liniji 75 print prima samo num, char ili bool!
ERROR 01:01:22,713 - Semanticka greska na liniji 76 print prima samo num, char ili bool!
ERROR 01:01:22,714 - Semanticka greska na liniji 93  t1 mora biti int, char ili bool!
ERROR 01:01:22,714 - Semanticka greska na liniji 94  t1 mora biti int, char ili bool!
ERROR 01:01:22,714 - Semanticka greska na liniji 95  t1 mora biti int, char ili bool!
INFO  01:01:22,714 - Pronadjen poziv funkcije chr na liniji 98
ERROR 01:01:22,714 - Semanticka greska na liniji 100 print prima samo num, char ili bool!
ERROR 01:01:22,714 - Semanticka greska na liniji 103 print prima samo num, char ili bool!
ERROR 01:01:22,714 - Semanticka greska na liniji 113  t2 mora biti int, char ili bool!
ERROR 01:01:22,714 - Semanticka greska na liniji 114  t2 mora biti int, char ili bool!
ERROR 01:01:22,714 - Semanticka greska na liniji 115  t2 mora biti int, char ili bool!
ERROR 01:01:22,714 - Parsiranje NIJE uspesno zavrseno!
