INFO  00:00:20,013 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  00:00:20,042 - #2 program
INFO  00:00:20,043 - #16 test302
INFO  00:00:20,043 - #48 const
INFO  00:00:20,043 - #16 int
INFO  00:00:20,043 - #16 jedan
INFO  00:00:20,043 - #13 =
INFO  00:00:20,044 - #15 1
INFO  00:00:20,044 - #5 ;
INFO  00:00:20,044 - #16 int
INFO  00:00:20,044 - #16 i
INFO  00:00:20,045 - #5 ;
INFO  00:00:20,045 - #16 bool
INFO  00:00:20,045 - #16 ibool
INFO  00:00:20,045 - #5 ;
INFO  00:00:20,045 - #16 int
INFO  00:00:20,045 - #16 niz2
INFO  00:00:20,045 - #5 ;
INFO  00:00:20,045 - #49 record
INFO  00:00:20,045 - #16 Test
INFO  00:00:20,046 - #3 {
INFO  00:00:20,046 - #16 int
INFO  00:00:20,046 - #16 niz
INFO  00:00:20,052 - #50 [
INFO  00:00:20,052 - #51 ]
INFO  00:00:20,052 - #5 ;
INFO  00:00:20,052 - #16 int
INFO  00:00:20,052 - #16 a
INFO  00:00:20,052 - #5 ;
INFO  00:00:20,052 - #4 }
INFO  00:00:20,052 - #49 record
INFO  00:00:20,053 - #16 Test2
INFO  00:00:20,053 - #3 {
INFO  00:00:20,053 - #16 int
INFO  00:00:20,053 - #16 niz23
INFO  00:00:20,053 - #50 [
INFO  00:00:20,053 - #51 ]
INFO  00:00:20,053 - #5 ;
INFO  00:00:20,053 - #16 int
INFO  00:00:20,053 - #16 a2
INFO  00:00:20,053 - #5 ;
INFO  00:00:20,053 - #4 }
INFO  00:00:20,053 - #16 Test
INFO  00:00:20,053 - #16 t1
INFO  00:00:20,053 - #8 ,
INFO  00:00:20,053 - #16 t2
INFO  00:00:20,053 - #5 ;
INFO  00:00:20,054 - #3 {
INFO  00:00:20,054 - #16 int
INFO  00:00:20,054 - #16 sum
INFO  00:00:20,054 - #6 (
INFO  00:00:20,055 - #16 int
INFO  00:00:20,055 - #16 z
INFO  00:00:20,055 - #8 ,
INFO  00:00:20,055 - #16 int
INFO  00:00:20,055 - #16 d
INFO  00:00:20,055 - #7 )
INFO  00:00:20,055 - #3 {
INFO  00:00:20,056 - #10 return
INFO  00:00:20,056 - #16 z
INFO  00:00:20,056 - #11 +
INFO  00:00:20,057 - #16 d
INFO  00:00:20,057 - #5 ;
INFO  00:00:20,058 - #4 }
INFO  00:00:20,058 - #16 int
INFO  00:00:20,059 - #16 inkrement
INFO  00:00:20,059 - #6 (
INFO  00:00:20,059 - #16 int
INFO  00:00:20,059 - #16 a
INFO  00:00:20,061 - #8 ,
INFO  00:00:20,061 - #16 int
INFO  00:00:20,061 - #16 inc
INFO  00:00:20,061 - #7 )
INFO  00:00:20,062 - #16 int
INFO  00:00:20,062 - #16 pom
INFO  00:00:20,062 - #5 ;
INFO  00:00:20,062 - #3 {
INFO  00:00:20,062 - #19 if
INFO  00:00:20,062 - #6 (
INFO  00:00:20,062 - #16 inc
INFO  00:00:20,062 - #22 ==
INFO  00:00:20,062 - #16 jedan
INFO  00:00:20,062 - #7 )
INFO  00:00:20,064 - #16 pom
INFO  00:00:20,064 - #13 =
INFO  00:00:20,064 - #15 1
INFO  00:00:20,064 - #5 ;
INFO  00:00:20,064 - #20 else
INFO  00:00:20,065 - #19 if
INFO  00:00:20,065 - #6 (
INFO  00:00:20,065 - #16 inc
INFO  00:00:20,065 - #22 ==
INFO  00:00:20,065 - #15 2
INFO  00:00:20,065 - #7 )
INFO  00:00:20,065 - #16 pom
INFO  00:00:20,065 - #13 =
INFO  00:00:20,065 - #16 a
INFO  00:00:20,065 - #5 ;
INFO  00:00:20,065 - #10 return
INFO  00:00:20,065 - #16 sum
INFO  00:00:20,065 - #6 (
INFO  00:00:20,066 - #16 a
INFO  00:00:20,066 - #8 ,
INFO  00:00:20,066 - #16 pom
INFO  00:00:20,066 - #7 )
INFO  00:00:20,066 - #5 ;
INFO  00:00:20,067 - #4 }
INFO  00:00:20,067 - #16 bool
INFO  00:00:20,067 - #16 verify
INFO  00:00:20,067 - #6 (
INFO  00:00:20,067 - #7 )
INFO  00:00:20,067 - #3 {
INFO  00:00:20,067 - #9 print
INFO  00:00:20,067 - #6 (
INFO  00:00:20,067 - #17 'v'
INFO  00:00:20,067 - #7 )
INFO  00:00:20,067 - #5 ;
INFO  00:00:20,067 - #10 return
INFO  00:00:20,067 - #18 false
INFO  00:00:20,067 - #5 ;
INFO  00:00:20,067 - #4 }
INFO  00:00:20,067 - #14 void
INFO  00:00:20,068 - #16 main
INFO  00:00:20,068 - #6 (
INFO  00:00:20,068 - #7 )
INFO  00:00:20,068 - #3 {
INFO  00:00:20,068 - #19 if
INFO  00:00:20,068 - #6 (
INFO  00:00:20,068 - #15 1
INFO  00:00:20,068 - #23 !=
INFO  00:00:20,068 - #15 1
INFO  00:00:20,069 - #7 )
INFO  00:00:20,069 - #9 print
INFO  00:00:20,069 - #6 (
INFO  00:00:20,069 - #12 -
INFO  00:00:20,069 - #15 6
INFO  00:00:20,069 - #7 )
INFO  00:00:20,069 - #5 ;
INFO  00:00:20,069 - #20 else
INFO  00:00:20,069 - #9 print
INFO  00:00:20,069 - #6 (
INFO  00:00:20,069 - #15 0
INFO  00:00:20,069 - #7 )
INFO  00:00:20,069 - #5 ;
INFO  00:00:20,069 - #16 ibool
INFO  00:00:20,069 - #13 =
INFO  00:00:20,069 - #18 false
INFO  00:00:20,069 - #5 ;
INFO  00:00:20,069 - #16 i
INFO  00:00:20,069 - #13 =
INFO  00:00:20,070 - #15 0
INFO  00:00:20,070 - #5 ;
INFO  00:00:20,070 - #34 do
INFO  00:00:20,070 - #3 {
INFO  00:00:20,070 - #19 if
INFO  00:00:20,070 - #6 (
INFO  00:00:20,070 - #16 i
INFO  00:00:20,070 - #22 ==
INFO  00:00:20,070 - #15 2
INFO  00:00:20,071 - #7 )
INFO  00:00:20,071 - #16 ibool
INFO  00:00:20,072 - #13 =
INFO  00:00:20,072 - #18 true
INFO  00:00:20,072 - #5 ;
INFO  00:00:20,072 - #16 i
INFO  00:00:20,072 - #46 ++
INFO  00:00:20,072 - #5 ;
INFO  00:00:20,072 - #4 }
INFO  00:00:20,072 - #35 while
INFO  00:00:20,073 - #6 (
INFO  00:00:20,073 - #16 i
INFO  00:00:20,073 - #26 <
INFO  00:00:20,073 - #15 5
INFO  00:00:20,073 - #7 )
INFO  00:00:20,073 - #5 ;
INFO  00:00:20,073 - #19 if
INFO  00:00:20,073 - #6 (
INFO  00:00:20,074 - #16 ibool
INFO  00:00:20,074 - #7 )
INFO  00:00:20,074 - #19 if
INFO  00:00:20,074 - #6 (
INFO  00:00:20,074 - #16 i
INFO  00:00:20,074 - #22 ==
INFO  00:00:20,074 - #15 5
INFO  00:00:20,074 - #7 )
INFO  00:00:20,074 - #9 print
INFO  00:00:20,074 - #6 (
INFO  00:00:20,074 - #15 1
INFO  00:00:20,074 - #7 )
INFO  00:00:20,074 - #5 ;
INFO  00:00:20,074 - #20 else
INFO  00:00:20,075 - #9 print
INFO  00:00:20,075 - #6 (
INFO  00:00:20,075 - #12 -
INFO  00:00:20,075 - #15 1
INFO  00:00:20,075 - #7 )
INFO  00:00:20,075 - #5 ;
INFO  00:00:20,075 - #16 t1
INFO  00:00:20,076 - #13 =
INFO  00:00:20,076 - #36 new
INFO  00:00:20,076 - #16 Test
INFO  00:00:20,076 - #5 ;
INFO  00:00:20,076 - #16 t1
INFO  00:00:20,076 - #43 .
INFO  00:00:20,076 - #16 a
INFO  00:00:20,076 - #13 =
INFO  00:00:20,076 - #15 2
INFO  00:00:20,076 - #5 ;
INFO  00:00:20,076 - #16 t1
INFO  00:00:20,076 - #43 .
INFO  00:00:20,076 - #16 niz
INFO  00:00:20,076 - #13 =
INFO  00:00:20,076 - #36 new
INFO  00:00:20,076 - #16 int
INFO  00:00:20,076 - #50 [
INFO  00:00:20,076 - #15 3
INFO  00:00:20,076 - #51 ]
INFO  00:00:20,076 - #5 ;
INFO  00:00:20,076 - #16 t1
INFO  00:00:20,076 - #43 .
INFO  00:00:20,076 - #16 niz
INFO  00:00:20,076 - #50 [
INFO  00:00:20,076 - #15 0
INFO  00:00:20,076 - #51 ]
INFO  00:00:20,076 - #13 =
INFO  00:00:20,076 - #15 1
INFO  00:00:20,076 - #28 *
INFO  00:00:20,076 - #16 t1
INFO  00:00:20,077 - #43 .
INFO  00:00:20,077 - #16 a
INFO  00:00:20,077 - #5 ;
INFO  00:00:20,077 - #16 t1
INFO  00:00:20,077 - #43 .
INFO  00:00:20,077 - #16 niz
INFO  00:00:20,077 - #50 [
INFO  00:00:20,077 - #15 1
INFO  00:00:20,077 - #51 ]
INFO  00:00:20,077 - #13 =
INFO  00:00:20,077 - #15 2
INFO  00:00:20,077 - #28 *
INFO  00:00:20,077 - #16 t1
INFO  00:00:20,078 - #43 .
INFO  00:00:20,078 - #16 a
INFO  00:00:20,078 - #5 ;
INFO  00:00:20,078 - #16 t1
INFO  00:00:20,078 - #43 .
INFO  00:00:20,078 - #16 niz
INFO  00:00:20,078 - #50 [
INFO  00:00:20,078 - #15 2
INFO  00:00:20,078 - #51 ]
INFO  00:00:20,078 - #13 =
INFO  00:00:20,078 - #16 sum
INFO  00:00:20,078 - #6 (
INFO  00:00:20,078 - #16 t1
INFO  00:00:20,078 - #43 .
INFO  00:00:20,078 - #16 niz
INFO  00:00:20,083 - #50 [
INFO  00:00:20,083 - #15 1
INFO  00:00:20,083 - #51 ]
INFO  00:00:20,083 - #8 ,
INFO  00:00:20,083 - #16 t1
INFO  00:00:20,083 - #43 .
INFO  00:00:20,083 - #16 niz
INFO  00:00:20,083 - #50 [
INFO  00:00:20,083 - #15 0
INFO  00:00:20,083 - #51 ]
INFO  00:00:20,083 - #7 )
INFO  00:00:20,083 - #28 *
INFO  00:00:20,083 - #16 t1
INFO  00:00:20,083 - #43 .
INFO  00:00:20,083 - #16 a
INFO  00:00:20,083 - #11 +
INFO  00:00:20,083 - #15 1
INFO  00:00:20,084 - #5 ;
INFO  00:00:20,084 - #19 if
INFO  00:00:20,084 - #6 (
INFO  00:00:20,084 - #16 verify
INFO  00:00:20,084 - #6 (
INFO  00:00:20,084 - #7 )
INFO  00:00:20,084 - #7 )
INFO  00:00:20,084 - #9 print
INFO  00:00:20,084 - #6 (
INFO  00:00:20,084 - #16 ord
INFO  00:00:20,084 - #6 (
INFO  00:00:20,084 - #17 'A'
INFO  00:00:20,084 - #7 )
INFO  00:00:20,084 - #7 )
INFO  00:00:20,084 - #5 ;
INFO  00:00:20,084 - #20 else
INFO  00:00:20,084 - #9 print
INFO  00:00:20,084 - #6 (
INFO  00:00:20,084 - #16 ord
INFO  00:00:20,084 - #6 (
INFO  00:00:20,084 - #17 'a'
INFO  00:00:20,084 - #7 )
INFO  00:00:20,084 - #7 )
INFO  00:00:20,084 - #5 ;
INFO  00:00:20,085 - #9 print
INFO  00:00:20,085 - #6 (
INFO  00:00:20,085 - #16 eol
INFO  00:00:20,085 - #7 )
INFO  00:00:20,085 - #5 ;
INFO  00:00:20,085 - #16 i
INFO  00:00:20,085 - #13 =
INFO  00:00:20,085 - #15 0
INFO  00:00:20,085 - #5 ;
INFO  00:00:20,085 - #34 do
INFO  00:00:20,085 - #3 {
INFO  00:00:20,085 - #19 if
INFO  00:00:20,085 - #6 (
INFO  00:00:20,085 - #16 i
INFO  00:00:20,085 - #22 ==
INFO  00:00:20,085 - #15 3
INFO  00:00:20,085 - #7 )
INFO  00:00:20,085 - #3 {
INFO  00:00:20,085 - #16 i
INFO  00:00:20,085 - #46 ++
INFO  00:00:20,104 - #5 ;
INFO  00:00:20,104 - #39 continue
INFO  00:00:20,104 - #5 ;
INFO  00:00:20,105 - #4 }
INFO  00:00:20,105 - #19 if
INFO  00:00:20,105 - #6 (
INFO  00:00:20,105 - #16 i
INFO  00:00:20,105 - #22 ==
INFO  00:00:20,105 - #15 4
INFO  00:00:20,105 - #7 )
INFO  00:00:20,105 - #31 break
INFO  00:00:20,105 - #5 ;
INFO  00:00:20,105 - #16 i
INFO  00:00:20,106 - #13 =
INFO  00:00:20,106 - #16 inkrement
INFO  00:00:20,106 - #6 (
INFO  00:00:20,106 - #16 i
INFO  00:00:20,106 - #8 ,
INFO  00:00:20,106 - #15 1
INFO  00:00:20,106 - #7 )
INFO  00:00:20,106 - #5 ;
INFO  00:00:20,106 - #4 }
INFO  00:00:20,106 - #35 while
INFO  00:00:20,106 - #6 (
INFO  00:00:20,106 - #16 i
INFO  00:00:20,106 - #26 <
INFO  00:00:20,106 - #15 10
INFO  00:00:20,106 - #7 )
INFO  00:00:20,106 - #5 ;
INFO  00:00:20,106 - #19 if
INFO  00:00:20,106 - #6 (
INFO  00:00:20,106 - #16 i
INFO  00:00:20,106 - #22 ==
INFO  00:00:20,106 - #15 3
INFO  00:00:20,106 - #44 &&
INFO  00:00:20,106 - #16 verify
INFO  00:00:20,106 - #6 (
INFO  00:00:20,106 - #7 )
INFO  00:00:20,106 - #7 )
INFO  00:00:20,106 - #9 print
INFO  00:00:20,106 - #6 (
INFO  00:00:20,106 - #12 -
INFO  00:00:20,106 - #15 4
INFO  00:00:20,106 - #7 )
INFO  00:00:20,106 - #5 ;
INFO  00:00:20,106 - #20 else
INFO  00:00:20,106 - #9 print
INFO  00:00:20,106 - #6 (
INFO  00:00:20,106 - #15 4
INFO  00:00:20,106 - #7 )
INFO  00:00:20,106 - #5 ;
INFO  00:00:20,106 - #37 read
INFO  00:00:20,106 - #6 (
INFO  00:00:20,106 - #16 t1
INFO  00:00:20,106 - #43 .
INFO  00:00:20,106 - #16 niz
INFO  00:00:20,106 - #50 [
INFO  00:00:20,107 - #15 0
INFO  00:00:20,107 - #51 ]
INFO  00:00:20,107 - #7 )
INFO  00:00:20,107 - #5 ;
INFO  00:00:20,107 - #37 read
INFO  00:00:20,107 - #6 (
INFO  00:00:20,107 - #16 t1
INFO  00:00:20,107 - #43 .
INFO  00:00:20,107 - #16 niz
INFO  00:00:20,107 - #50 [
INFO  00:00:20,107 - #15 1
INFO  00:00:20,107 - #51 ]
INFO  00:00:20,107 - #7 )
INFO  00:00:20,107 - #5 ;
INFO  00:00:20,107 - #37 read
INFO  00:00:20,107 - #6 (
INFO  00:00:20,107 - #16 t1
INFO  00:00:20,107 - #43 .
INFO  00:00:20,107 - #16 niz
INFO  00:00:20,107 - #50 [
INFO  00:00:20,107 - #15 2
INFO  00:00:20,107 - #51 ]
INFO  00:00:20,107 - #7 )
INFO  00:00:20,107 - #5 ;
INFO  00:00:20,107 - #9 print
INFO  00:00:20,107 - #6 (
INFO  00:00:20,107 - #16 eol
INFO  00:00:20,107 - #7 )
INFO  00:00:20,107 - #5 ;
INFO  00:00:20,107 - #16 chr
INFO  00:00:20,107 - #6 (
INFO  00:00:20,107 - #15 3
INFO  00:00:20,107 - #7 )
INFO  00:00:20,107 - #5 ;
INFO  00:00:20,107 - #9 print
INFO  00:00:20,107 - #6 (
INFO  00:00:20,107 - #16 sum
INFO  00:00:20,107 - #6 (
INFO  00:00:20,107 - #16 sum
INFO  00:00:20,107 - #6 (
INFO  00:00:20,107 - #16 t1
INFO  00:00:20,107 - #43 .
INFO  00:00:20,107 - #16 niz
INFO  00:00:20,107 - #50 [
INFO  00:00:20,107 - #15 0
INFO  00:00:20,107 - #51 ]
INFO  00:00:20,107 - #8 ,
INFO  00:00:20,107 - #16 t1
INFO  00:00:20,107 - #43 .
INFO  00:00:20,107 - #16 niz
INFO  00:00:20,107 - #50 [
INFO  00:00:20,107 - #15 1
INFO  00:00:20,107 - #51 ]
INFO  00:00:20,107 - #7 )
INFO  00:00:20,107 - #8 ,
INFO  00:00:20,107 - #16 t1
INFO  00:00:20,107 - #43 .
INFO  00:00:20,107 - #16 niz
INFO  00:00:20,108 - #50 [
INFO  00:00:20,108 - #15 2
INFO  00:00:20,108 - #51 ]
INFO  00:00:20,108 - #7 )
INFO  00:00:20,108 - #7 )
INFO  00:00:20,108 - #5 ;
INFO  00:00:20,108 - #9 print
INFO  00:00:20,108 - #6 (
INFO  00:00:20,108 - #16 eol
INFO  00:00:20,108 - #7 )
INFO  00:00:20,108 - #5 ;
INFO  00:00:20,108 - #9 print
INFO  00:00:20,108 - #6 (
INFO  00:00:20,108 - #16 inkrement
INFO  00:00:20,108 - #6 (
INFO  00:00:20,108 - #16 t1
INFO  00:00:20,108 - #43 .
INFO  00:00:20,108 - #16 niz
INFO  00:00:20,108 - #50 [
INFO  00:00:20,108 - #15 2
INFO  00:00:20,108 - #51 ]
INFO  00:00:20,108 - #8 ,
INFO  00:00:20,108 - #15 2
INFO  00:00:20,108 - #7 )
INFO  00:00:20,108 - #7 )
INFO  00:00:20,108 - #5 ;
INFO  00:00:20,108 - #16 t2
INFO  00:00:20,108 - #13 =
INFO  00:00:20,108 - #36 new
INFO  00:00:20,108 - #16 Test
INFO  00:00:20,108 - #5 ;
INFO  00:00:20,108 - #16 t2
INFO  00:00:20,108 - #43 .
INFO  00:00:20,108 - #16 a
INFO  00:00:20,108 - #13 =
INFO  00:00:20,108 - #15 3
INFO  00:00:20,108 - #5 ;
INFO  00:00:20,108 - #16 t2
INFO  00:00:20,108 - #43 .
INFO  00:00:20,108 - #16 niz
INFO  00:00:20,108 - #13 =
INFO  00:00:20,108 - #36 new
INFO  00:00:20,108 - #16 int
INFO  00:00:20,108 - #50 [
INFO  00:00:20,108 - #15 3
INFO  00:00:20,108 - #51 ]
INFO  00:00:20,108 - #5 ;
INFO  00:00:20,108 - #16 i
INFO  00:00:20,108 - #13 =
INFO  00:00:20,108 - #15 0
INFO  00:00:20,108 - #5 ;
INFO  00:00:20,108 - #34 do
INFO  00:00:20,108 - #3 {
INFO  00:00:20,108 - #16 t2
INFO  00:00:20,108 - #43 .
INFO  00:00:20,108 - #16 niz
INFO  00:00:20,108 - #50 [
INFO  00:00:20,108 - #16 i
INFO  00:00:20,108 - #51 ]
INFO  00:00:20,108 - #13 =
INFO  00:00:20,108 - #16 t1
INFO  00:00:20,108 - #43 .
INFO  00:00:20,108 - #16 niz
INFO  00:00:20,108 - #50 [
INFO  00:00:20,109 - #16 i
INFO  00:00:20,109 - #51 ]
INFO  00:00:20,109 - #28 *
INFO  00:00:20,109 - #15 2
INFO  00:00:20,109 - #28 *
INFO  00:00:20,109 - #16 t2
INFO  00:00:20,109 - #43 .
INFO  00:00:20,109 - #16 a
INFO  00:00:20,109 - #5 ;
INFO  00:00:20,109 - #16 i
INFO  00:00:20,109 - #46 ++
INFO  00:00:20,109 - #5 ;
INFO  00:00:20,109 - #4 }
INFO  00:00:20,109 - #35 while
INFO  00:00:20,109 - #6 (
INFO  00:00:20,109 - #16 i
INFO  00:00:20,109 - #26 <
INFO  00:00:20,110 - #15 3
INFO  00:00:20,110 - #7 )
INFO  00:00:20,110 - #5 ;
INFO  00:00:20,110 - #9 print
INFO  00:00:20,110 - #6 (
INFO  00:00:20,110 - #16 t2
INFO  00:00:20,110 - #43 .
INFO  00:00:20,110 - #16 niz
INFO  00:00:20,110 - #50 [
INFO  00:00:20,110 - #15 0
INFO  00:00:20,110 - #51 ]
INFO  00:00:20,110 - #7 )
INFO  00:00:20,110 - #5 ;
INFO  00:00:20,110 - #9 print
INFO  00:00:20,110 - #6 (
INFO  00:00:20,110 - #16 t2
INFO  00:00:20,110 - #43 .
INFO  00:00:20,110 - #16 niz
INFO  00:00:20,110 - #50 [
INFO  00:00:20,110 - #15 1
INFO  00:00:20,110 - #51 ]
INFO  00:00:20,110 - #7 )
INFO  00:00:20,110 - #5 ;
INFO  00:00:20,110 - #9 print
INFO  00:00:20,110 - #6 (
INFO  00:00:20,110 - #16 t2
INFO  00:00:20,110 - #43 .
INFO  00:00:20,111 - #16 niz
INFO  00:00:20,111 - #50 [
INFO  00:00:20,111 - #15 2
INFO  00:00:20,111 - #51 ]
INFO  00:00:20,111 - #7 )
INFO  00:00:20,111 - #5 ;
INFO  00:00:20,111 - #9 print
INFO  00:00:20,111 - #6 (
INFO  00:00:20,111 - #16 eol
INFO  00:00:20,111 - #7 )
INFO  00:00:20,111 - #5 ;
INFO  00:00:20,111 - #16 i
INFO  00:00:20,111 - #13 =
INFO  00:00:20,111 - #15 0
INFO  00:00:20,111 - #5 ;
INFO  00:00:20,111 - #16 niz2
INFO  00:00:20,111 - #13 =
INFO  00:00:20,111 - #15 0
INFO  00:00:20,111 - #5 ;
INFO  00:00:20,111 - #34 do
INFO  00:00:20,111 - #3 {
INFO  00:00:20,111 - #16 niz2
INFO  00:00:20,111 - #13 =
INFO  00:00:20,112 - #16 niz2
INFO  00:00:20,112 - #11 +
INFO  00:00:20,112 - #16 t1
INFO  00:00:20,112 - #43 .
INFO  00:00:20,112 - #16 niz
INFO  00:00:20,112 - #50 [
INFO  00:00:20,112 - #16 i
INFO  00:00:20,112 - #51 ]
INFO  00:00:20,112 - #11 +
INFO  00:00:20,112 - #16 t2
INFO  00:00:20,112 - #43 .
INFO  00:00:20,112 - #16 niz
INFO  00:00:20,112 - #50 [
INFO  00:00:20,112 - #16 i
INFO  00:00:20,112 - #51 ]
INFO  00:00:20,112 - #5 ;
INFO  00:00:20,112 - #16 i
INFO  00:00:20,112 - #46 ++
INFO  00:00:20,112 - #5 ;
INFO  00:00:20,112 - #4 }
INFO  00:00:20,112 - #35 while
INFO  00:00:20,112 - #6 (
INFO  00:00:20,112 - #16 i
INFO  00:00:20,112 - #26 <
INFO  00:00:20,112 - #15 3
INFO  00:00:20,112 - #7 )
INFO  00:00:20,112 - #5 ;
INFO  00:00:20,112 - #9 print
INFO  00:00:20,112 - #6 (
INFO  00:00:20,112 - #16 niz2
INFO  00:00:20,112 - #7 )
INFO  00:00:20,112 - #5 ;
INFO  00:00:20,112 - #9 print
INFO  00:00:20,112 - #6 (
INFO  00:00:20,112 - #16 eol
INFO  00:00:20,112 - #7 )
INFO  00:00:20,112 - #5 ;
INFO  00:00:20,112 - #4 }
INFO  00:00:20,112 - #4 }
INFO  00:00:20,124 - Trenutan tip konstante je:  int na liniji 5
INFO  00:00:20,124 - Deklarisana promenljiva i na liniji 7
INFO  00:00:20,124 - Deklarisana promenljiva ibool na liniji 10
INFO  00:00:20,125 - Deklarisana promenljiva niz2 na liniji 12
INFO  00:00:20,125 - Deklarisana promenljiva niz na liniji 15
INFO  00:00:20,125 - Deklarisana promenljiva a na liniji 16
INFO  00:00:20,125 - Deklarisana je rekord :  Test na liniji 14
INFO  00:00:20,125 - Deklarisana promenljiva niz23 na liniji 20
INFO  00:00:20,125 - Deklarisana promenljiva a2 na liniji 21
INFO  00:00:20,125 - Deklarisana je rekord :  Test2 na liniji 19
INFO  00:00:20,125 - Deklarisana promenljiva t2 na liniji 24
INFO  00:00:20,125 - Deklarisana promenljiva t1 na liniji 24
INFO  00:00:20,125 - Obradjuje se funkcija sum na liniji 28
INFO  00:00:20,125 - Naveden argument d na liniji 28
INFO  00:00:20,125 - Naveden argument z na liniji 28
INFO  00:00:20,125 - Obradjuje se funkcija inkrement na liniji 34
INFO  00:00:20,125 - Naveden argument inc na liniji 34
INFO  00:00:20,125 - Naveden argument a na liniji 34
INFO  00:00:20,126 - Deklarisana promenljiva pom na liniji 35
INFO  00:00:20,126 - Obradjuje se funkcija verify na liniji 43
INFO  00:00:20,126 - Obradjuje se funkcija main na liniji 48
ERROR 00:00:20,126 - Semanticka greska na liniji 70 print prima samo num, char ili bool!
ERROR 00:00:20,126 - Semanticka greska na liniji 71 print prima samo num, char ili bool!
ERROR 00:00:20,126 - Semanticka greska na liniji 88  t1 mora biti int, char ili bool!
ERROR 00:00:20,126 - Semanticka greska na liniji 89  t1 mora biti int, char ili bool!
ERROR 00:00:20,126 - Semanticka greska na liniji 90  t1 mora biti int, char ili bool!
INFO  00:00:20,127 - Pronadjen poziv funkcije chr na liniji 93
ERROR 00:00:20,127 - Semanticka greska na liniji 95 print prima samo num, char ili bool!
ERROR 00:00:20,127 - Semanticka greska na liniji 98 print prima samo num, char ili bool!
ERROR 00:00:20,127 - Semanticka greska na liniji 108  t2 mora biti int, char ili bool!
ERROR 00:00:20,127 - Semanticka greska na liniji 109  t2 mora biti int, char ili bool!
ERROR 00:00:20,127 - Semanticka greska na liniji 110  t2 mora biti int, char ili bool!
ERROR 00:00:20,128 - Parsiranje NIJE uspesno zavrseno!
