INFO  16:55:08,403 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  16:55:08,437 - #2 program
INFO  16:55:08,437 - #16 test302
INFO  16:55:08,437 - #48 const
INFO  16:55:08,437 - #16 int
INFO  16:55:08,437 - #16 jedan
INFO  16:55:08,438 - #13 =
INFO  16:55:08,438 - #15 1
INFO  16:55:08,438 - #5 ;
INFO  16:55:08,438 - #16 int
INFO  16:55:08,439 - #16 i
INFO  16:55:08,439 - #5 ;
INFO  16:55:08,440 - #16 bool
INFO  16:55:08,440 - #16 ibool
INFO  16:55:08,440 - #5 ;
INFO  16:55:08,440 - #16 int
INFO  16:55:08,440 - #16 niz2
INFO  16:55:08,440 - #5 ;
INFO  16:55:08,440 - #49 record
INFO  16:55:08,440 - #16 Test
INFO  16:55:08,440 - #3 {
INFO  16:55:08,440 - #16 int
INFO  16:55:08,440 - #16 niz
INFO  16:55:08,446 - #50 [
INFO  16:55:08,446 - #51 ]
INFO  16:55:08,446 - #5 ;
INFO  16:55:08,446 - #16 int
INFO  16:55:08,446 - #16 a
INFO  16:55:08,446 - #5 ;
INFO  16:55:08,446 - #4 }
INFO  16:55:08,447 - #16 Test
INFO  16:55:08,447 - #16 t1
INFO  16:55:08,447 - #8 ,
INFO  16:55:08,447 - #16 t2
INFO  16:55:08,447 - #5 ;
INFO  16:55:08,447 - #3 {
INFO  16:55:08,448 - #16 int
INFO  16:55:08,448 - #16 sum
INFO  16:55:08,448 - #6 (
INFO  16:55:08,449 - #16 int
INFO  16:55:08,449 - #16 z
INFO  16:55:08,449 - #8 ,
INFO  16:55:08,449 - #16 int
INFO  16:55:08,449 - #16 d
INFO  16:55:08,449 - #7 )
INFO  16:55:08,449 - #3 {
INFO  16:55:08,450 - #10 return
INFO  16:55:08,450 - #16 z
INFO  16:55:08,450 - #11 +
INFO  16:55:08,451 - #16 d
INFO  16:55:08,451 - #5 ;
INFO  16:55:08,452 - #4 }
INFO  16:55:08,453 - #16 int
INFO  16:55:08,453 - #16 inkrement
INFO  16:55:08,453 - #6 (
INFO  16:55:08,453 - #16 int
INFO  16:55:08,453 - #16 a
INFO  16:55:08,453 - #8 ,
INFO  16:55:08,453 - #16 int
INFO  16:55:08,453 - #16 inc
INFO  16:55:08,453 - #7 )
INFO  16:55:08,453 - #16 int
INFO  16:55:08,453 - #16 pom
INFO  16:55:08,453 - #5 ;
INFO  16:55:08,453 - #3 {
INFO  16:55:08,453 - #19 if
INFO  16:55:08,453 - #6 (
INFO  16:55:08,454 - #16 inc
INFO  16:55:08,454 - #22 ==
INFO  16:55:08,459 - #16 jedan
INFO  16:55:08,459 - #7 )
INFO  16:55:08,461 - #16 pom
INFO  16:55:08,461 - #13 =
INFO  16:55:08,461 - #15 1
INFO  16:55:08,461 - #5 ;
INFO  16:55:08,461 - #20 else
INFO  16:55:08,461 - #19 if
INFO  16:55:08,462 - #6 (
INFO  16:55:08,462 - #16 inc
INFO  16:55:08,462 - #22 ==
INFO  16:55:08,462 - #15 2
INFO  16:55:08,462 - #7 )
INFO  16:55:08,462 - #16 pom
INFO  16:55:08,462 - #13 =
INFO  16:55:08,462 - #16 a
INFO  16:55:08,462 - #5 ;
INFO  16:55:08,462 - #10 return
INFO  16:55:08,462 - #16 sum
INFO  16:55:08,463 - #6 (
INFO  16:55:08,463 - #16 a
INFO  16:55:08,463 - #8 ,
INFO  16:55:08,463 - #16 pom
INFO  16:55:08,463 - #7 )
INFO  16:55:08,463 - #5 ;
INFO  16:55:08,464 - #4 }
INFO  16:55:08,464 - #16 bool
INFO  16:55:08,464 - #16 verify
INFO  16:55:08,464 - #6 (
INFO  16:55:08,464 - #7 )
INFO  16:55:08,464 - #3 {
INFO  16:55:08,464 - #9 print
INFO  16:55:08,464 - #6 (
INFO  16:55:08,465 - #17 'v'
INFO  16:55:08,465 - #7 )
INFO  16:55:08,465 - #5 ;
INFO  16:55:08,465 - #10 return
INFO  16:55:08,465 - #18 false
INFO  16:55:08,465 - #5 ;
INFO  16:55:08,465 - #4 }
INFO  16:55:08,465 - #14 void
INFO  16:55:08,465 - #16 main
INFO  16:55:08,466 - #6 (
INFO  16:55:08,466 - #7 )
INFO  16:55:08,466 - #3 {
INFO  16:55:08,466 - #19 if
INFO  16:55:08,466 - #6 (
INFO  16:55:08,466 - #15 1
INFO  16:55:08,466 - #23 !=
INFO  16:55:08,466 - #15 1
INFO  16:55:08,466 - #7 )
INFO  16:55:08,466 - #9 print
INFO  16:55:08,467 - #6 (
INFO  16:55:08,467 - #12 -
INFO  16:55:08,467 - #15 6
INFO  16:55:08,467 - #7 )
INFO  16:55:08,467 - #5 ;
INFO  16:55:08,467 - #20 else
INFO  16:55:08,467 - #9 print
INFO  16:55:08,467 - #6 (
INFO  16:55:08,467 - #15 0
INFO  16:55:08,467 - #7 )
INFO  16:55:08,467 - #5 ;
INFO  16:55:08,467 - #16 ibool
INFO  16:55:08,467 - #13 =
INFO  16:55:08,467 - #18 false
INFO  16:55:08,467 - #5 ;
INFO  16:55:08,467 - #16 i
INFO  16:55:08,467 - #13 =
INFO  16:55:08,467 - #15 0
INFO  16:55:08,467 - #5 ;
INFO  16:55:08,468 - #34 do
INFO  16:55:08,468 - #3 {
INFO  16:55:08,468 - #19 if
INFO  16:55:08,468 - #6 (
INFO  16:55:08,468 - #16 i
INFO  16:55:08,468 - #22 ==
INFO  16:55:08,468 - #15 2
INFO  16:55:08,468 - #7 )
INFO  16:55:08,468 - #16 ibool
INFO  16:55:08,468 - #13 =
INFO  16:55:08,468 - #18 true
INFO  16:55:08,468 - #5 ;
INFO  16:55:08,468 - #16 i
INFO  16:55:08,468 - #46 ++
INFO  16:55:08,468 - #5 ;
INFO  16:55:08,468 - #4 }
INFO  16:55:08,469 - #35 while
INFO  16:55:08,469 - #6 (
INFO  16:55:08,469 - #16 i
INFO  16:55:08,469 - #26 <
INFO  16:55:08,469 - #15 5
INFO  16:55:08,469 - #7 )
INFO  16:55:08,469 - #5 ;
INFO  16:55:08,469 - #19 if
INFO  16:55:08,470 - #6 (
INFO  16:55:08,470 - #16 ibool
INFO  16:55:08,470 - #7 )
INFO  16:55:08,470 - #19 if
INFO  16:55:08,470 - #6 (
INFO  16:55:08,470 - #16 i
INFO  16:55:08,470 - #22 ==
INFO  16:55:08,470 - #15 5
INFO  16:55:08,470 - #7 )
INFO  16:55:08,470 - #9 print
INFO  16:55:08,470 - #6 (
INFO  16:55:08,470 - #15 1
INFO  16:55:08,470 - #7 )
INFO  16:55:08,470 - #5 ;
INFO  16:55:08,470 - #20 else
INFO  16:55:08,470 - #9 print
INFO  16:55:08,470 - #6 (
INFO  16:55:08,470 - #12 -
INFO  16:55:08,470 - #15 1
INFO  16:55:08,470 - #7 )
INFO  16:55:08,470 - #5 ;
INFO  16:55:08,470 - #16 t1
INFO  16:55:08,471 - #13 =
INFO  16:55:08,471 - #36 new
INFO  16:55:08,471 - #16 Test
INFO  16:55:08,471 - #5 ;
INFO  16:55:08,471 - #16 t1
INFO  16:55:08,471 - #43 .
INFO  16:55:08,471 - #16 a
INFO  16:55:08,471 - #13 =
INFO  16:55:08,471 - #15 2
INFO  16:55:08,471 - #5 ;
INFO  16:55:08,471 - #16 t1
INFO  16:55:08,471 - #43 .
INFO  16:55:08,471 - #16 niz
INFO  16:55:08,471 - #13 =
INFO  16:55:08,471 - #36 new
INFO  16:55:08,471 - #16 int
INFO  16:55:08,471 - #50 [
INFO  16:55:08,471 - #15 3
INFO  16:55:08,471 - #51 ]
INFO  16:55:08,471 - #5 ;
INFO  16:55:08,471 - #16 t1
INFO  16:55:08,471 - #43 .
INFO  16:55:08,472 - #16 niz
INFO  16:55:08,472 - #50 [
INFO  16:55:08,472 - #15 0
INFO  16:55:08,472 - #51 ]
INFO  16:55:08,472 - #13 =
INFO  16:55:08,472 - #15 1
INFO  16:55:08,472 - #28 *
INFO  16:55:08,472 - #16 t1
INFO  16:55:08,472 - #43 .
INFO  16:55:08,473 - #16 a
INFO  16:55:08,473 - #5 ;
INFO  16:55:08,473 - #16 t1
INFO  16:55:08,473 - #43 .
INFO  16:55:08,473 - #16 niz
INFO  16:55:08,473 - #50 [
INFO  16:55:08,473 - #15 1
INFO  16:55:08,473 - #51 ]
INFO  16:55:08,473 - #13 =
INFO  16:55:08,473 - #15 2
INFO  16:55:08,473 - #28 *
INFO  16:55:08,473 - #16 t1
INFO  16:55:08,474 - #43 .
INFO  16:55:08,474 - #16 a
INFO  16:55:08,474 - #5 ;
INFO  16:55:08,474 - #16 t1
INFO  16:55:08,474 - #43 .
INFO  16:55:08,474 - #16 niz
INFO  16:55:08,474 - #50 [
INFO  16:55:08,474 - #15 2
INFO  16:55:08,474 - #51 ]
INFO  16:55:08,474 - #13 =
INFO  16:55:08,474 - #16 sum
INFO  16:55:08,474 - #6 (
INFO  16:55:08,474 - #16 t1
INFO  16:55:08,474 - #43 .
INFO  16:55:08,475 - #16 niz
INFO  16:55:08,475 - #50 [
INFO  16:55:08,475 - #15 1
INFO  16:55:08,475 - #51 ]
INFO  16:55:08,475 - #8 ,
INFO  16:55:08,475 - #16 t1
INFO  16:55:08,475 - #43 .
INFO  16:55:08,475 - #16 niz
INFO  16:55:08,475 - #50 [
INFO  16:55:08,475 - #15 0
INFO  16:55:08,475 - #51 ]
INFO  16:55:08,475 - #7 )
INFO  16:55:08,475 - #28 *
INFO  16:55:08,476 - #16 t1
INFO  16:55:08,476 - #43 .
INFO  16:55:08,476 - #16 a
INFO  16:55:08,476 - #11 +
INFO  16:55:08,476 - #15 1
INFO  16:55:08,476 - #5 ;
INFO  16:55:08,476 - #19 if
INFO  16:55:08,476 - #6 (
INFO  16:55:08,476 - #16 verify
INFO  16:55:08,476 - #6 (
INFO  16:55:08,476 - #7 )
ERROR 16:55:08,476 - 
Sintaksna greska na liniji 61
INFO  16:55:08,476 - #45 ||
INFO  16:55:08,476 - #16 t1
INFO  16:55:08,476 - #43 .
INFO  16:55:08,477 - #16 niz
INFO  16:55:08,477 - #50 [
INFO  16:55:08,477 - #15 2
INFO  16:55:08,477 - #51 ]
INFO  16:55:08,477 - #22 ==
INFO  16:55:08,477 - #15 4
INFO  16:55:08,477 - #7 )
INFO  16:55:08,477 - #9 print
INFO  16:55:08,477 - #6 (
INFO  16:55:08,477 - #16 ord
ERROR 16:55:08,477 - Izvrsen oporavak do ) u liniji 61
INFO  16:55:08,477 - #6 (
INFO  16:55:08,478 - #17 'A'
INFO  16:55:08,478 - #7 )
INFO  16:55:08,478 - #7 )
INFO  16:55:08,478 - #5 ;
INFO  16:55:08,478 - #20 else
INFO  16:55:08,478 - #9 print
INFO  16:55:08,478 - #6 (
INFO  16:55:08,478 - #16 ord
INFO  16:55:08,478 - #6 (
INFO  16:55:08,478 - #17 'a'
INFO  16:55:08,478 - #7 )
INFO  16:55:08,478 - #7 )
INFO  16:55:08,478 - #5 ;
INFO  16:55:08,478 - #9 print
INFO  16:55:08,478 - #6 (
INFO  16:55:08,478 - #16 eol
INFO  16:55:08,478 - #7 )
INFO  16:55:08,478 - #5 ;
INFO  16:55:08,478 - #16 i
INFO  16:55:08,478 - #13 =
INFO  16:55:08,478 - #15 0
INFO  16:55:08,478 - #5 ;
INFO  16:55:08,478 - #34 do
INFO  16:55:08,478 - #3 {
INFO  16:55:08,478 - #19 if
INFO  16:55:08,478 - #6 (
INFO  16:55:08,478 - #16 i
INFO  16:55:08,478 - #22 ==
INFO  16:55:08,478 - #15 3
INFO  16:55:08,478 - #7 )
INFO  16:55:08,478 - #3 {
INFO  16:55:08,478 - #16 i
INFO  16:55:08,478 - #46 ++
INFO  16:55:08,478 - #5 ;
INFO  16:55:08,478 - #39 continue
INFO  16:55:08,478 - #5 ;
INFO  16:55:08,478 - #4 }
INFO  16:55:08,479 - #19 if
INFO  16:55:08,479 - #6 (
INFO  16:55:08,479 - #16 i
INFO  16:55:08,479 - #22 ==
INFO  16:55:08,479 - #15 4
INFO  16:55:08,479 - #7 )
INFO  16:55:08,479 - #31 break
INFO  16:55:08,479 - #5 ;
INFO  16:55:08,479 - #16 i
INFO  16:55:08,480 - #13 =
INFO  16:55:08,480 - #16 inkrement
INFO  16:55:08,480 - #6 (
INFO  16:55:08,480 - #16 i
INFO  16:55:08,480 - #8 ,
INFO  16:55:08,480 - #15 1
INFO  16:55:08,480 - #7 )
INFO  16:55:08,480 - #5 ;
INFO  16:55:08,480 - #4 }
INFO  16:55:08,480 - #35 while
INFO  16:55:08,480 - #6 (
INFO  16:55:08,480 - #16 i
INFO  16:55:08,480 - #26 <
INFO  16:55:08,480 - #15 10
INFO  16:55:08,480 - #7 )
INFO  16:55:08,480 - #5 ;
INFO  16:55:08,480 - #19 if
INFO  16:55:08,480 - #6 (
INFO  16:55:08,480 - #16 i
INFO  16:55:08,480 - #22 ==
INFO  16:55:08,480 - #15 3
INFO  16:55:08,480 - #44 &&
INFO  16:55:08,480 - #16 verify
INFO  16:55:08,481 - #6 (
INFO  16:55:08,481 - #7 )
ERROR 16:55:08,481 - 
Sintaksna greska na liniji 76
INFO  16:55:08,481 - #7 )
INFO  16:55:08,481 - #9 print
INFO  16:55:08,481 - #6 (
INFO  16:55:08,481 - #12 -
ERROR 16:55:08,481 - Izvrsen oporavak do ) u liniji 76
INFO  16:55:08,481 - #15 4
INFO  16:55:08,481 - #7 )
INFO  16:55:08,481 - #5 ;
INFO  16:55:08,481 - #20 else
INFO  16:55:08,481 - #9 print
INFO  16:55:08,481 - #6 (
INFO  16:55:08,481 - #15 4
INFO  16:55:08,481 - #7 )
INFO  16:55:08,481 - #5 ;
INFO  16:55:08,481 - #37 read
INFO  16:55:08,481 - #6 (
INFO  16:55:08,481 - #16 t1
INFO  16:55:08,481 - #43 .
INFO  16:55:08,481 - #16 niz
INFO  16:55:08,481 - #50 [
INFO  16:55:08,481 - #15 0
INFO  16:55:08,481 - #51 ]
INFO  16:55:08,481 - #7 )
INFO  16:55:08,481 - #5 ;
INFO  16:55:08,481 - #37 read
INFO  16:55:08,481 - #6 (
INFO  16:55:08,481 - #16 t1
INFO  16:55:08,481 - #43 .
INFO  16:55:08,481 - #16 niz
INFO  16:55:08,481 - #50 [
INFO  16:55:08,481 - #15 1
INFO  16:55:08,481 - #51 ]
INFO  16:55:08,481 - #7 )
INFO  16:55:08,481 - #5 ;
INFO  16:55:08,481 - #37 read
INFO  16:55:08,481 - #6 (
INFO  16:55:08,481 - #16 t1
INFO  16:55:08,482 - #43 .
INFO  16:55:08,482 - #16 niz
INFO  16:55:08,482 - #50 [
INFO  16:55:08,482 - #15 2
INFO  16:55:08,482 - #51 ]
INFO  16:55:08,482 - #7 )
INFO  16:55:08,482 - #5 ;
INFO  16:55:08,482 - #9 print
INFO  16:55:08,482 - #6 (
INFO  16:55:08,482 - #16 eol
INFO  16:55:08,482 - #7 )
INFO  16:55:08,482 - #5 ;
INFO  16:55:08,482 - #9 print
INFO  16:55:08,482 - #6 (
INFO  16:55:08,482 - #16 sum
INFO  16:55:08,482 - #6 (
INFO  16:55:08,482 - #16 sum
INFO  16:55:08,482 - #6 (
INFO  16:55:08,482 - #16 t1
INFO  16:55:08,482 - #43 .
INFO  16:55:08,482 - #16 niz
INFO  16:55:08,482 - #50 [
INFO  16:55:08,482 - #15 0
INFO  16:55:08,482 - #51 ]
INFO  16:55:08,482 - #8 ,
INFO  16:55:08,482 - #16 t1
INFO  16:55:08,482 - #43 .
INFO  16:55:08,482 - #16 niz
INFO  16:55:08,482 - #50 [
INFO  16:55:08,482 - #15 1
INFO  16:55:08,482 - #51 ]
INFO  16:55:08,482 - #7 )
INFO  16:55:08,482 - #8 ,
INFO  16:55:08,482 - #16 t1
INFO  16:55:08,482 - #43 .
INFO  16:55:08,482 - #16 niz
INFO  16:55:08,482 - #50 [
INFO  16:55:08,482 - #15 2
INFO  16:55:08,482 - #51 ]
INFO  16:55:08,482 - #7 )
INFO  16:55:08,482 - #7 )
INFO  16:55:08,482 - #5 ;
INFO  16:55:08,482 - #9 print
INFO  16:55:08,482 - #6 (
INFO  16:55:08,482 - #16 eol
INFO  16:55:08,482 - #7 )
INFO  16:55:08,482 - #5 ;
INFO  16:55:08,482 - #9 print
INFO  16:55:08,482 - #6 (
INFO  16:55:08,482 - #16 inkrement
INFO  16:55:08,482 - #6 (
INFO  16:55:08,482 - #16 t1
INFO  16:55:08,483 - #43 .
INFO  16:55:08,483 - #16 niz
INFO  16:55:08,483 - #50 [
INFO  16:55:08,483 - #15 2
INFO  16:55:08,483 - #51 ]
INFO  16:55:08,483 - #8 ,
INFO  16:55:08,483 - #15 2
INFO  16:55:08,483 - #7 )
INFO  16:55:08,483 - #7 )
INFO  16:55:08,483 - #5 ;
INFO  16:55:08,483 - #16 t2
INFO  16:55:08,483 - #13 =
INFO  16:55:08,483 - #36 new
INFO  16:55:08,483 - #16 Test
INFO  16:55:08,483 - #5 ;
INFO  16:55:08,483 - #16 t2
INFO  16:55:08,483 - #43 .
INFO  16:55:08,483 - #16 a
INFO  16:55:08,483 - #13 =
INFO  16:55:08,483 - #15 3
INFO  16:55:08,483 - #5 ;
INFO  16:55:08,483 - #16 t2
INFO  16:55:08,483 - #43 .
INFO  16:55:08,483 - #16 niz
INFO  16:55:08,483 - #13 =
INFO  16:55:08,483 - #36 new
INFO  16:55:08,483 - #16 int
INFO  16:55:08,483 - #50 [
INFO  16:55:08,483 - #15 3
INFO  16:55:08,483 - #51 ]
INFO  16:55:08,483 - #5 ;
INFO  16:55:08,483 - #16 i
INFO  16:55:08,483 - #13 =
INFO  16:55:08,483 - #15 0
INFO  16:55:08,483 - #5 ;
INFO  16:55:08,483 - #34 do
INFO  16:55:08,483 - #3 {
INFO  16:55:08,483 - #16 t2
INFO  16:55:08,483 - #43 .
INFO  16:55:08,483 - #16 niz
INFO  16:55:08,483 - #50 [
INFO  16:55:08,483 - #16 i
INFO  16:55:08,483 - #51 ]
INFO  16:55:08,483 - #13 =
INFO  16:55:08,483 - #16 t1
INFO  16:55:08,483 - #43 .
INFO  16:55:08,484 - #16 niz
INFO  16:55:08,484 - #50 [
INFO  16:55:08,484 - #16 i
INFO  16:55:08,484 - #51 ]
INFO  16:55:08,484 - #28 *
INFO  16:55:08,484 - #15 2
INFO  16:55:08,484 - #28 *
INFO  16:55:08,484 - #16 t2
INFO  16:55:08,484 - #43 .
INFO  16:55:08,484 - #16 a
INFO  16:55:08,484 - #5 ;
INFO  16:55:08,484 - #16 i
INFO  16:55:08,484 - #46 ++
INFO  16:55:08,484 - #5 ;
INFO  16:55:08,484 - #4 }
INFO  16:55:08,484 - #35 while
INFO  16:55:08,484 - #6 (
INFO  16:55:08,484 - #16 i
INFO  16:55:08,484 - #26 <
INFO  16:55:08,484 - #15 3
INFO  16:55:08,484 - #7 )
INFO  16:55:08,484 - #5 ;
INFO  16:55:08,486 - #9 print
INFO  16:55:08,487 - #6 (
INFO  16:55:08,487 - #16 t2
INFO  16:55:08,487 - #43 .
INFO  16:55:08,487 - #16 niz
INFO  16:55:08,487 - #50 [
INFO  16:55:08,487 - #15 0
INFO  16:55:08,487 - #51 ]
INFO  16:55:08,487 - #7 )
INFO  16:55:08,487 - #5 ;
INFO  16:55:08,487 - #9 print
INFO  16:55:08,487 - #6 (
INFO  16:55:08,487 - #16 t2
INFO  16:55:08,487 - #43 .
INFO  16:55:08,487 - #16 niz
INFO  16:55:08,487 - #50 [
INFO  16:55:08,487 - #15 1
INFO  16:55:08,487 - #51 ]
INFO  16:55:08,487 - #7 )
INFO  16:55:08,487 - #5 ;
INFO  16:55:08,487 - #9 print
INFO  16:55:08,487 - #6 (
INFO  16:55:08,487 - #16 t2
INFO  16:55:08,487 - #43 .
INFO  16:55:08,487 - #16 niz
INFO  16:55:08,488 - #50 [
INFO  16:55:08,488 - #15 2
INFO  16:55:08,488 - #51 ]
INFO  16:55:08,488 - #7 )
INFO  16:55:08,488 - #5 ;
INFO  16:55:08,488 - #9 print
INFO  16:55:08,488 - #6 (
INFO  16:55:08,488 - #16 eol
INFO  16:55:08,488 - #7 )
INFO  16:55:08,488 - #5 ;
INFO  16:55:08,488 - #16 i
INFO  16:55:08,488 - #13 =
INFO  16:55:08,488 - #15 0
INFO  16:55:08,488 - #5 ;
INFO  16:55:08,488 - #16 niz2
INFO  16:55:08,488 - #13 =
INFO  16:55:08,488 - #15 0
INFO  16:55:08,488 - #5 ;
INFO  16:55:08,488 - #34 do
INFO  16:55:08,488 - #3 {
INFO  16:55:08,488 - #16 niz2
INFO  16:55:08,488 - #13 =
INFO  16:55:08,488 - #16 niz2
INFO  16:55:08,488 - #11 +
INFO  16:55:08,488 - #16 t1
INFO  16:55:08,488 - #43 .
INFO  16:55:08,488 - #16 niz
INFO  16:55:08,488 - #50 [
INFO  16:55:08,488 - #16 i
INFO  16:55:08,488 - #51 ]
INFO  16:55:08,488 - #28 *
INFO  16:55:08,488 - #16 t2
INFO  16:55:08,488 - #43 .
INFO  16:55:08,488 - #16 niz
INFO  16:55:08,488 - #50 [
INFO  16:55:08,488 - #16 i
INFO  16:55:08,488 - #51 ]
INFO  16:55:08,488 - #5 ;
INFO  16:55:08,488 - #16 i
INFO  16:55:08,488 - #46 ++
INFO  16:55:08,488 - #5 ;
INFO  16:55:08,488 - #4 }
INFO  16:55:08,488 - #35 while
INFO  16:55:08,488 - #6 (
INFO  16:55:08,488 - #16 i
INFO  16:55:08,488 - #26 <
INFO  16:55:08,488 - #15 3
INFO  16:55:08,488 - #7 )
INFO  16:55:08,488 - #5 ;
INFO  16:55:08,488 - #9 print
INFO  16:55:08,488 - #6 (
INFO  16:55:08,488 - #16 niz2
INFO  16:55:08,488 - #7 )
INFO  16:55:08,489 - #5 ;
INFO  16:55:08,489 - #9 print
INFO  16:55:08,489 - #6 (
INFO  16:55:08,489 - #16 eol
INFO  16:55:08,489 - #7 )
INFO  16:55:08,489 - #5 ;
INFO  16:55:08,489 - #4 }
INFO  16:55:08,489 - #4 }
INFO  16:55:08,497 - Trenutan tip konstante je:  int na liniji 5
INFO  16:55:08,497 - Deklarisana promenljiva i na liniji 7
INFO  16:55:08,497 - Deklarisana promenljiva ibool na liniji 8
INFO  16:55:08,497 - Deklarisana promenljiva niz2 na liniji 10
INFO  16:55:08,497 - Deklarisana promenljiva niz na liniji 13
INFO  16:55:08,497 - Deklarisana promenljiva a na liniji 14
INFO  16:55:08,497 - Deklarisana je rekord :  Test na liniji 12
INFO  16:55:08,498 - Deklarisana promenljiva t2 na liniji 17
INFO  16:55:08,498 - Deklarisana promenljiva t1 na liniji 17
INFO  16:55:08,498 - Obradjuje se funkcija sum na liniji 21
INFO  16:55:08,498 - Naveden argument d na liniji 21
INFO  16:55:08,498 - Naveden argument z na liniji 21
INFO  16:55:08,498 - Obradjuje se funkcija inkrement na liniji 26
INFO  16:55:08,498 - Naveden argument inc na liniji 26
ERROR 16:55:08,498 - Greska! Vec postoji argument sa imenom: a
INFO  16:55:08,498 - Deklarisana promenljiva pom na liniji 27
ERROR 16:55:08,498 - Greska na liniji 29 : ime inc nije deklarisano! 
ERROR 16:55:08,498 - Greska na liniji 30 : ime inc nije deklarisano! 
INFO  16:55:08,498 - Obradjuje se funkcija verify na liniji 35
INFO  16:55:08,498 - Obradjuje se funkcija main na liniji 40
ERROR 16:55:08,498 - Semanticka greska na liniji 56 nekompatibilni tipovi prilikom dodele!
ERROR 16:55:08,498 - Semanticka greska na liniji 57 nekompatibilni tipovi prilikom dodele!
ERROR 16:55:08,498 - Semanticka greska na liniji 58 nekompatibilni tipovi prilikom dodele!
ERROR 16:55:08,498 - Semanticka greska na liniji 59 nekompatibilni tipovi prilikom dodele!
ERROR 16:55:08,498 - Semanticka greska na liniji 60 nekompatibilni tipovi prilikom dodele!
ERROR 16:55:08,498 - Semanticka greska na liniji 61 print prima samo num, char ili bool!
ERROR 16:55:08,498 - Semanticka greska na liniji 62 print prima samo num, char ili bool!
ERROR 16:55:08,499 - Semanticka greska na liniji 79  t1 mora biti int, char ili bool!
ERROR 16:55:08,499 - Semanticka greska na liniji 80  t1 mora biti int, char ili bool!
ERROR 16:55:08,499 - Semanticka greska na liniji 81  t1 mora biti int, char ili bool!
ERROR 16:55:08,499 - Semanticka greska na liniji 84 print prima samo num, char ili bool!
ERROR 16:55:08,499 - Semanticka greska na liniji 87 print prima samo num, char ili bool!
ERROR 16:55:08,499 - Semanticka greska na liniji 90 nekompatibilni tipovi prilikom dodele!
ERROR 16:55:08,499 - Semanticka greska na liniji 91 nekompatibilni tipovi prilikom dodele!
ERROR 16:55:08,499 - Semanticka greska na liniji 97  t2 mora biti int, char ili bool!
ERROR 16:55:08,499 - Semanticka greska na liniji 98  t2 mora biti int, char ili bool!
ERROR 16:55:08,499 - Semanticka greska na liniji 99  t2 mora biti int, char ili bool!
ERROR 16:55:08,499 - Semanticka greska na liniji 105 nekompatibilni tipovi za aritmeticku operaciju!
ERROR 16:55:08,499 - Semanticka greska na liniji 105 nekompatibilni tipovi prilikom dodele!
ERROR 16:55:08,499 - Parsiranje NIJE uspesno zavrseno!
