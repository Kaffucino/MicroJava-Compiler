INFO  17:07:13,445 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  17:07:13,473 - #2 program
INFO  17:07:13,473 - #16 Ime
INFO  17:07:13,473 - #48 const
INFO  17:07:13,473 - #16 tip
INFO  17:07:13,473 - #16 x
INFO  17:07:13,474 - #13 =
INFO  17:07:13,474 - #15 8
INFO  17:07:13,474 - #8 ,
INFO  17:07:13,474 - #16 y
INFO  17:07:13,474 - #13 =
INFO  17:07:13,474 - #17 'i'
INFO  17:07:13,474 - #8 ,
INFO  17:07:13,474 - #16 z
INFO  17:07:13,474 - #13 =
INFO  17:07:13,474 - #18 true
INFO  17:07:13,474 - #5 ;
INFO  17:07:13,475 - #16 int
INFO  17:07:13,476 - #16 x
INFO  17:07:13,476 - #50 [
INFO  17:07:13,476 - #51 ]
INFO  17:07:13,476 - #8 ,
INFO  17:07:13,476 - #16 y
INFO  17:07:13,476 - #8 ,
INFO  17:07:13,481 - #16 a
INFO  17:07:13,481 - #50 [
INFO  17:07:13,481 - #51 ]
INFO  17:07:13,481 - #8 ,
INFO  17:07:13,481 - #16 f
INFO  17:07:13,481 - #5 ;
INFO  17:07:13,482 - #32 class
INFO  17:07:13,482 - #16 Board
INFO  17:07:13,482 - #38 extends
INFO  17:07:13,482 - #16 Polje
INFO  17:07:13,482 - #3 {
INFO  17:07:13,482 - #16 int
INFO  17:07:13,482 - #16 a
INFO  17:07:13,482 - #5 ;
INFO  17:07:13,482 - #3 {
INFO  17:07:13,483 - #14 void
INFO  17:07:13,483 - #16 funckija
INFO  17:07:13,484 - #6 (
INFO  17:07:13,484 - #16 bool
INFO  17:07:13,484 - #16 a
INFO  17:07:13,484 - #50 [
INFO  17:07:13,484 - #51 ]
INFO  17:07:13,484 - #8 ,
INFO  17:07:13,484 - #16 int
INFO  17:07:13,484 - #16 aa
INFO  17:07:13,484 - #8 ,
INFO  17:07:13,484 - #16 char
INFO  17:07:13,484 - #16 c
INFO  17:07:13,484 - #7 )
INFO  17:07:13,485 - #16 int
INFO  17:07:13,485 - #16 y
INFO  17:07:13,485 - #5 ;
INFO  17:07:13,485 - #3 {
INFO  17:07:13,485 - #3 {
INFO  17:07:13,485 - #39 continue
INFO  17:07:13,485 - #5 ;
INFO  17:07:13,485 - #10 return
INFO  17:07:13,486 - #12 -
INFO  17:07:13,486 - #15 5
INFO  17:07:13,486 - #11 +
INFO  17:07:13,487 - #15 7
INFO  17:07:13,487 - #28 *
INFO  17:07:13,487 - #15 2
INFO  17:07:13,488 - #12 -
INFO  17:07:13,488 - #6 (
INFO  17:07:13,491 - #15 13
INFO  17:07:13,491 - #28 *
INFO  17:07:13,491 - #15 7
INFO  17:07:13,491 - #7 )
INFO  17:07:13,492 - #11 +
INFO  17:07:13,492 - #36 new
INFO  17:07:13,492 - #16 int
INFO  17:07:13,492 - #50 [
INFO  17:07:13,492 - #15 5
INFO  17:07:13,492 - #51 ]
INFO  17:07:13,492 - #5 ;
INFO  17:07:13,492 - #16 a
INFO  17:07:13,492 - #43 .
INFO  17:07:13,492 - #16 b
INFO  17:07:13,492 - #50 [
INFO  17:07:13,493 - #15 3
INFO  17:07:13,493 - #51 ]
INFO  17:07:13,493 - #43 .
INFO  17:07:13,493 - #16 c
INFO  17:07:13,493 - #6 (
INFO  17:07:13,493 - #15 5
INFO  17:07:13,494 - #8 ,
INFO  17:07:13,494 - #15 17
INFO  17:07:13,494 - #7 )
INFO  17:07:13,494 - #5 ;
INFO  17:07:13,494 - #34 do
INFO  17:07:13,495 - #3 {
INFO  17:07:13,495 - #10 return
INFO  17:07:13,495 - #5 ;
INFO  17:07:13,495 - #4 }
INFO  17:07:13,495 - #35 while
INFO  17:07:13,496 - #6 (
INFO  17:07:13,496 - #15 5
INFO  17:07:13,497 - #22 ==
INFO  17:07:13,497 - #15 7
INFO  17:07:13,498 - #45 ||
INFO  17:07:13,499 - #15 5
INFO  17:07:13,499 - #27 <=
INFO  17:07:13,499 - #15 3
INFO  17:07:13,499 - #44 &&
INFO  17:07:13,500 - #15 7
INFO  17:07:13,500 - #23 !=
INFO  17:07:13,500 - #15 2
INFO  17:07:13,500 - #7 )
INFO  17:07:13,501 - #5 ;
INFO  17:07:13,501 - #19 if
INFO  17:07:13,501 - #6 (
INFO  17:07:13,501 - #15 5
INFO  17:07:13,501 - #22 ==
INFO  17:07:13,501 - #15 6
INFO  17:07:13,501 - #7 )
INFO  17:07:13,501 - #3 {
INFO  17:07:13,501 - #16 x
INFO  17:07:13,501 - #13 =
INFO  17:07:13,501 - #15 3
INFO  17:07:13,502 - #5 ;
INFO  17:07:13,502 - #4 }
INFO  17:07:13,502 - #4 }
INFO  17:07:13,502 - #4 }
INFO  17:07:13,503 - #4 }
INFO  17:07:13,503 - #4 }
INFO  17:07:13,503 - #49 record
INFO  17:07:13,503 - #16 rekord
INFO  17:07:13,503 - #3 {
INFO  17:07:13,503 - #16 int
INFO  17:07:13,503 - #16 a
INFO  17:07:13,504 - #5 ;
INFO  17:07:13,504 - #16 char
INFO  17:07:13,504 - #16 b
INFO  17:07:13,504 - #5 ;
INFO  17:07:13,504 - #4 }
INFO  17:07:13,504 - #3 {
INFO  17:07:13,505 - #4 }
