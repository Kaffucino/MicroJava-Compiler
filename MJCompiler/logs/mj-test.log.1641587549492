INFO  21:30:32,042 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  21:30:32,070 - #2 program
INFO  21:30:32,071 - #16 Ime
INFO  21:30:32,071 - #48 const
INFO  21:30:32,071 - #16 tip
INFO  21:30:32,071 - #16 x
INFO  21:30:32,072 - #13 =
INFO  21:30:32,072 - #15 8
INFO  21:30:32,072 - #8 ,
INFO  21:30:32,072 - #16 y
INFO  21:30:32,072 - #13 =
INFO  21:30:32,072 - #17 'i'
INFO  21:30:32,072 - #8 ,
INFO  21:30:32,072 - #16 z
INFO  21:30:32,072 - #13 =
INFO  21:30:32,072 - #18 true
INFO  21:30:32,072 - #5 ;
INFO  21:30:32,073 - #16 int
INFO  21:30:32,073 - #16 x
INFO  21:30:32,074 - #50 [
INFO  21:30:32,074 - #51 ]
INFO  21:30:32,074 - #8 ,
INFO  21:30:32,074 - #16 y
INFO  21:30:32,074 - #8 ,
INFO  21:30:32,079 - #16 a
INFO  21:30:32,079 - #50 [
INFO  21:30:32,079 - #51 ]
INFO  21:30:32,079 - #8 ,
INFO  21:30:32,079 - #16 f
INFO  21:30:32,079 - #5 ;
INFO  21:30:32,080 - #32 class
INFO  21:30:32,080 - #16 Board
INFO  21:30:32,080 - #38 extends
INFO  21:30:32,080 - #16 Polje
INFO  21:30:32,080 - #3 {
INFO  21:30:32,080 - #16 int
INFO  21:30:32,080 - #16 a
INFO  21:30:32,080 - #5 ;
INFO  21:30:32,080 - #3 {
INFO  21:30:32,081 - #14 void
INFO  21:30:32,081 - #16 funckija
INFO  21:30:32,082 - #6 (
INFO  21:30:32,082 - #16 int
INFO  21:30:32,082 - #16 x
INFO  21:30:32,082 - #8 ,
INFO  21:30:32,082 - #16 int
INFO  21:30:32,082 - #16 zz
INFO  21:30:32,082 - #7 )
INFO  21:30:32,083 - #16 int
INFO  21:30:32,083 - #16 y
INFO  21:30:32,083 - #5 ;
INFO  21:30:32,083 - #3 {
INFO  21:30:32,083 - #3 {
INFO  21:30:32,083 - #39 continue
INFO  21:30:32,083 - #5 ;
INFO  21:30:32,083 - #10 return
INFO  21:30:32,083 - #12 -
INFO  21:30:32,084 - #15 5
INFO  21:30:32,084 - #11 +
INFO  21:30:32,084 - #15 7
INFO  21:30:32,084 - #28 *
INFO  21:30:32,086 - #15 2
INFO  21:30:32,086 - #12 -
INFO  21:30:32,086 - #6 (
INFO  21:30:32,087 - #15 13
INFO  21:30:32,087 - #28 *
INFO  21:30:32,087 - #15 7
INFO  21:30:32,087 - #7 )
INFO  21:30:32,087 - #11 +
INFO  21:30:32,090 - #36 new
INFO  21:30:32,090 - #16 int
INFO  21:30:32,090 - #50 [
INFO  21:30:32,090 - #15 5
INFO  21:30:32,090 - #51 ]
INFO  21:30:32,090 - #5 ;
INFO  21:30:32,091 - #16 a
INFO  21:30:32,091 - #43 .
INFO  21:30:32,091 - #16 b
INFO  21:30:32,091 - #50 [
INFO  21:30:32,091 - #15 3
INFO  21:30:32,091 - #51 ]
INFO  21:30:32,091 - #43 .
INFO  21:30:32,091 - #16 c
INFO  21:30:32,091 - #6 (
INFO  21:30:32,092 - #15 5
INFO  21:30:32,092 - #8 ,
INFO  21:30:32,092 - #15 17
INFO  21:30:32,092 - #7 )
INFO  21:30:32,093 - #5 ;
INFO  21:30:32,093 - #34 do
INFO  21:30:32,093 - #3 {
INFO  21:30:32,093 - #10 return
INFO  21:30:32,093 - #5 ;
INFO  21:30:32,093 - #4 }
INFO  21:30:32,094 - #35 while
INFO  21:30:32,094 - #6 (
INFO  21:30:32,094 - #15 5
INFO  21:30:32,094 - #22 ==
INFO  21:30:32,094 - #15 7
INFO  21:30:32,095 - #45 ||
INFO  21:30:32,096 - #15 5
INFO  21:30:32,096 - #27 <=
INFO  21:30:32,096 - #15 3
INFO  21:30:32,097 - #44 &&
INFO  21:30:32,097 - #15 7
INFO  21:30:32,097 - #23 !=
INFO  21:30:32,097 - #15 2
INFO  21:30:32,097 - #7 )
INFO  21:30:32,098 - #5 ;
INFO  21:30:32,099 - #19 if
INFO  21:30:32,099 - #6 (
INFO  21:30:32,099 - #15 5
INFO  21:30:32,099 - #22 ==
INFO  21:30:32,099 - #15 6
INFO  21:30:32,099 - #7 )
INFO  21:30:32,099 - #3 {
INFO  21:30:32,099 - #16 x
INFO  21:30:32,099 - #13 =
INFO  21:30:32,099 - #15 3
INFO  21:30:32,100 - #5 ;
INFO  21:30:32,100 - #4 }
INFO  21:30:32,100 - #4 }
INFO  21:30:32,100 - #4 }
INFO  21:30:32,100 - #4 }
INFO  21:30:32,100 - #4 }
INFO  21:30:32,101 - #49 record
INFO  21:30:32,101 - #16 rekord
INFO  21:30:32,101 - #3 {
INFO  21:30:32,101 - #16 int
INFO  21:30:32,101 - #16 a
INFO  21:30:32,101 - #5 ;
INFO  21:30:32,101 - #16 char
INFO  21:30:32,101 - #16 b
INFO  21:30:32,101 - #5 ;
INFO  21:30:32,101 - #4 }
INFO  21:30:32,101 - #3 {
INFO  21:30:32,102 - #4 }
