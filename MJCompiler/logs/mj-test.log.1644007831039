INFO  21:48:09,996 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  21:48:10,026 - #2 program
INFO  21:48:10,027 - #16 test302
INFO  21:48:10,027 - #48 const
INFO  21:48:10,027 - #16 int
INFO  21:48:10,027 - #16 jedan
INFO  21:48:10,027 - #13 =
INFO  21:48:10,027 - #15 1
INFO  21:48:10,028 - #5 ;
INFO  21:48:10,028 - #48 const
INFO  21:48:10,028 - #16 char
INFO  21:48:10,029 - #16 Cofa
INFO  21:48:10,029 - #13 =
INFO  21:48:10,029 - #17 'a'
INFO  21:48:10,029 - #5 ;
INFO  21:48:10,029 - #16 int
INFO  21:48:10,029 - #16 i
INFO  21:48:10,029 - #5 ;
INFO  21:48:10,029 - #16 bool
INFO  21:48:10,029 - #16 ibool
INFO  21:48:10,029 - #5 ;
INFO  21:48:10,030 - #16 char
INFO  21:48:10,030 - #16 niz2
INFO  21:48:10,030 - #5 ;
INFO  21:48:10,030 - #49 record
INFO  21:48:10,030 - #16 Test
INFO  21:48:10,030 - #3 {
INFO  21:48:10,030 - #16 int
INFO  21:48:10,030 - #16 niz
INFO  21:48:10,031 - #50 [
INFO  21:48:10,031 - #51 ]
INFO  21:48:10,031 - #5 ;
INFO  21:48:10,031 - #16 int
INFO  21:48:10,031 - #16 a
INFO  21:48:10,031 - #5 ;
INFO  21:48:10,031 - #4 }
INFO  21:48:10,031 - #49 record
INFO  21:48:10,031 - #16 Test2
INFO  21:48:10,032 - #3 {
INFO  21:48:10,032 - #16 int
INFO  21:48:10,032 - #16 niz23
INFO  21:48:10,032 - #50 [
INFO  21:48:10,032 - #51 ]
INFO  21:48:10,032 - #5 ;
INFO  21:48:10,032 - #16 int
INFO  21:48:10,032 - #16 a2
INFO  21:48:10,032 - #5 ;
INFO  21:48:10,032 - #4 }
INFO  21:48:10,032 - #16 Test
INFO  21:48:10,032 - #16 t1
INFO  21:48:10,032 - #8 ,
INFO  21:48:10,032 - #16 t2
INFO  21:48:10,032 - #5 ;
INFO  21:48:10,032 - #3 {
INFO  21:48:10,033 - #16 char
INFO  21:48:10,033 - #16 sum
INFO  21:48:10,033 - #6 (
INFO  21:48:10,033 - #16 int
INFO  21:48:10,033 - #16 z
INFO  21:48:10,033 - #8 ,
INFO  21:48:10,033 - #16 int
INFO  21:48:10,033 - #16 d
INFO  21:48:10,034 - #7 )
INFO  21:48:10,034 - #3 {
INFO  21:48:10,034 - #10 return
INFO  21:48:10,034 - #17 'a'
INFO  21:48:10,035 - #5 ;
INFO  21:48:10,036 - #4 }
INFO  21:48:10,036 - #16 int
INFO  21:48:10,039 - #16 inkrement
INFO  21:48:10,039 - #6 (
INFO  21:48:10,039 - #16 int
INFO  21:48:10,039 - #16 a
INFO  21:48:10,039 - #8 ,
INFO  21:48:10,039 - #16 int
INFO  21:48:10,039 - #16 inc
INFO  21:48:10,039 - #7 )
INFO  21:48:10,039 - #16 int
INFO  21:48:10,039 - #16 pom
INFO  21:48:10,039 - #5 ;
INFO  21:48:10,039 - #3 {
INFO  21:48:10,040 - #19 if
INFO  21:48:10,040 - #6 (
INFO  21:48:10,040 - #16 inc
INFO  21:48:10,040 - #22 ==
INFO  21:48:10,040 - #16 jedan
INFO  21:48:10,041 - #7 )
INFO  21:48:10,042 - #16 pom
INFO  21:48:10,042 - #13 =
INFO  21:48:10,042 - #15 1
INFO  21:48:10,042 - #5 ;
INFO  21:48:10,043 - #20 else
INFO  21:48:10,043 - #19 if
INFO  21:48:10,043 - #6 (
INFO  21:48:10,043 - #16 inc
INFO  21:48:10,043 - #22 ==
INFO  21:48:10,043 - #15 2
INFO  21:48:10,043 - #7 )
INFO  21:48:10,043 - #16 pom
INFO  21:48:10,043 - #13 =
INFO  21:48:10,043 - #16 a
INFO  21:48:10,043 - #5 ;
INFO  21:48:10,043 - #10 return
INFO  21:48:10,044 - #16 sum
INFO  21:48:10,044 - #6 (
INFO  21:48:10,044 - #16 Cofa
INFO  21:48:10,044 - #8 ,
INFO  21:48:10,044 - #16 pom
INFO  21:48:10,044 - #7 )
INFO  21:48:10,045 - #5 ;
INFO  21:48:10,045 - #4 }
INFO  21:48:10,045 - #16 bool
INFO  21:48:10,045 - #16 verify
INFO  21:48:10,045 - #6 (
INFO  21:48:10,045 - #7 )
INFO  21:48:10,046 - #3 {
INFO  21:48:10,046 - #16 inkrement
INFO  21:48:10,046 - #6 (
INFO  21:48:10,046 - #16 sum
INFO  21:48:10,046 - #6 (
INFO  21:48:10,046 - #16 sum
INFO  21:48:10,046 - #6 (
INFO  21:48:10,046 - #15 1
INFO  21:48:10,046 - #8 ,
INFO  21:48:10,046 - #15 2
INFO  21:48:10,046 - #7 )
INFO  21:48:10,046 - #8 ,
INFO  21:48:10,046 - #15 2
INFO  21:48:10,046 - #7 )
INFO  21:48:10,046 - #8 ,
INFO  21:48:10,046 - #15 2
INFO  21:48:10,046 - #7 )
INFO  21:48:10,046 - #5 ;
INFO  21:48:10,046 - #16 inkrement
INFO  21:48:10,046 - #6 (
INFO  21:48:10,047 - #15 2
INFO  21:48:10,047 - #8 ,
INFO  21:48:10,047 - #15 2
INFO  21:48:10,047 - #7 )
INFO  21:48:10,047 - #5 ;
INFO  21:48:10,047 - #9 print
INFO  21:48:10,047 - #6 (
INFO  21:48:10,047 - #17 'v'
INFO  21:48:10,047 - #7 )
INFO  21:48:10,047 - #5 ;
INFO  21:48:10,047 - #10 return
INFO  21:48:10,047 - #18 false
INFO  21:48:10,047 - #5 ;
INFO  21:48:10,048 - #4 }
INFO  21:48:10,048 - #14 void
INFO  21:48:10,048 - #16 main
INFO  21:48:10,048 - #6 (
INFO  21:48:10,048 - #7 )
INFO  21:48:10,048 - #3 {
INFO  21:48:10,048 - #19 if
INFO  21:48:10,048 - #6 (
INFO  21:48:10,048 - #15 1
INFO  21:48:10,049 - #23 !=
INFO  21:48:10,049 - #15 1
INFO  21:48:10,049 - #7 )
INFO  21:48:10,049 - #9 print
INFO  21:48:10,049 - #6 (
INFO  21:48:10,049 - #12 -
INFO  21:48:10,049 - #15 6
INFO  21:48:10,050 - #7 )
INFO  21:48:10,050 - #5 ;
INFO  21:48:10,050 - #20 else
INFO  21:48:10,050 - #9 print
INFO  21:48:10,050 - #6 (
INFO  21:48:10,050 - #15 0
INFO  21:48:10,050 - #7 )
INFO  21:48:10,050 - #5 ;
INFO  21:48:10,050 - #16 ibool
INFO  21:48:10,050 - #13 =
INFO  21:48:10,050 - #18 false
INFO  21:48:10,050 - #5 ;
INFO  21:48:10,050 - #16 i
INFO  21:48:10,050 - #13 =
INFO  21:48:10,050 - #15 0
INFO  21:48:10,050 - #5 ;
INFO  21:48:10,050 - #34 do
INFO  21:48:10,051 - #3 {
INFO  21:48:10,051 - #19 if
INFO  21:48:10,051 - #6 (
INFO  21:48:10,051 - #16 i
INFO  21:48:10,051 - #22 ==
INFO  21:48:10,051 - #15 2
INFO  21:48:10,051 - #7 )
INFO  21:48:10,051 - #16 ibool
INFO  21:48:10,051 - #13 =
INFO  21:48:10,051 - #18 true
INFO  21:48:10,051 - #5 ;
INFO  21:48:10,052 - #16 i
INFO  21:48:10,052 - #46 ++
INFO  21:48:10,052 - #5 ;
INFO  21:48:10,052 - #4 }
INFO  21:48:10,052 - #35 while
INFO  21:48:10,052 - #6 (
INFO  21:48:10,052 - #16 i
INFO  21:48:10,053 - #26 <
INFO  21:48:10,053 - #15 5
INFO  21:48:10,053 - #7 )
INFO  21:48:10,053 - #5 ;
INFO  21:48:10,053 - #19 if
INFO  21:48:10,053 - #6 (
INFO  21:48:10,053 - #16 ibool
INFO  21:48:10,053 - #7 )
INFO  21:48:10,053 - #19 if
INFO  21:48:10,053 - #6 (
INFO  21:48:10,053 - #16 i
INFO  21:48:10,053 - #22 ==
INFO  21:48:10,053 - #15 5
INFO  21:48:10,053 - #7 )
INFO  21:48:10,053 - #9 print
INFO  21:48:10,053 - #6 (
INFO  21:48:10,053 - #15 1
INFO  21:48:10,053 - #7 )
INFO  21:48:10,053 - #5 ;
INFO  21:48:10,053 - #20 else
INFO  21:48:10,053 - #9 print
INFO  21:48:10,053 - #6 (
INFO  21:48:10,053 - #12 -
INFO  21:48:10,054 - #15 1
INFO  21:48:10,054 - #7 )
INFO  21:48:10,054 - #5 ;
INFO  21:48:10,054 - #16 t1
INFO  21:48:10,054 - #13 =
INFO  21:48:10,054 - #36 new
INFO  21:48:10,054 - #16 Test
INFO  21:48:10,054 - #5 ;
INFO  21:48:10,054 - #16 t1
INFO  21:48:10,054 - #43 .
INFO  21:48:10,054 - #16 a
INFO  21:48:10,054 - #13 =
INFO  21:48:10,054 - #15 2
INFO  21:48:10,054 - #5 ;
INFO  21:48:10,054 - #16 t1
INFO  21:48:10,054 - #43 .
INFO  21:48:10,054 - #16 niz
INFO  21:48:10,054 - #13 =
INFO  21:48:10,054 - #36 new
INFO  21:48:10,054 - #16 int
INFO  21:48:10,054 - #50 [
INFO  21:48:10,054 - #15 3
INFO  21:48:10,054 - #51 ]
INFO  21:48:10,054 - #5 ;
INFO  21:48:10,054 - #16 t1
INFO  21:48:10,054 - #43 .
INFO  21:48:10,054 - #16 niz
INFO  21:48:10,055 - #50 [
INFO  21:48:10,055 - #15 0
INFO  21:48:10,055 - #51 ]
INFO  21:48:10,055 - #13 =
INFO  21:48:10,056 - #15 1
INFO  21:48:10,056 - #28 *
INFO  21:48:10,056 - #16 t1
INFO  21:48:10,057 - #43 .
INFO  21:48:10,057 - #16 a
INFO  21:48:10,057 - #5 ;
INFO  21:48:10,057 - #16 t1
INFO  21:48:10,057 - #43 .
INFO  21:48:10,057 - #16 niz
INFO  21:48:10,057 - #50 [
INFO  21:48:10,057 - #15 1
INFO  21:48:10,057 - #51 ]
INFO  21:48:10,057 - #13 =
INFO  21:48:10,057 - #15 2
INFO  21:48:10,057 - #28 *
INFO  21:48:10,057 - #16 t1
INFO  21:48:10,057 - #43 .
INFO  21:48:10,057 - #16 a
INFO  21:48:10,057 - #5 ;
INFO  21:48:10,057 - #16 t1
INFO  21:48:10,057 - #43 .
INFO  21:48:10,057 - #16 niz
INFO  21:48:10,057 - #50 [
INFO  21:48:10,057 - #15 2
INFO  21:48:10,057 - #51 ]
INFO  21:48:10,058 - #13 =
INFO  21:48:10,058 - #16 sum
INFO  21:48:10,058 - #6 (
INFO  21:48:10,058 - #16 t1
INFO  21:48:10,058 - #43 .
INFO  21:48:10,058 - #16 niz
INFO  21:48:10,058 - #50 [
INFO  21:48:10,058 - #15 1
INFO  21:48:10,058 - #51 ]
INFO  21:48:10,058 - #8 ,
INFO  21:48:10,058 - #16 t1
INFO  21:48:10,058 - #43 .
INFO  21:48:10,058 - #16 niz
INFO  21:48:10,058 - #50 [
INFO  21:48:10,058 - #15 0
INFO  21:48:10,058 - #51 ]
INFO  21:48:10,058 - #7 )
INFO  21:48:10,058 - #28 *
INFO  21:48:10,058 - #16 t1
INFO  21:48:10,058 - #43 .
INFO  21:48:10,058 - #16 a
INFO  21:48:10,058 - #11 +
INFO  21:48:10,058 - #15 1
INFO  21:48:10,059 - #5 ;
INFO  21:48:10,059 - #19 if
INFO  21:48:10,059 - #6 (
INFO  21:48:10,059 - #16 verify
INFO  21:48:10,059 - #6 (
INFO  21:48:10,059 - #7 )
INFO  21:48:10,059 - #7 )
INFO  21:48:10,059 - #9 print
INFO  21:48:10,059 - #6 (
INFO  21:48:10,059 - #16 ord
INFO  21:48:10,059 - #6 (
INFO  21:48:10,059 - #17 'A'
INFO  21:48:10,059 - #7 )
INFO  21:48:10,059 - #7 )
INFO  21:48:10,059 - #5 ;
INFO  21:48:10,059 - #20 else
INFO  21:48:10,059 - #9 print
INFO  21:48:10,059 - #6 (
INFO  21:48:10,059 - #16 ord
INFO  21:48:10,059 - #6 (
INFO  21:48:10,059 - #17 'a'
INFO  21:48:10,059 - #7 )
INFO  21:48:10,059 - #7 )
INFO  21:48:10,059 - #5 ;
INFO  21:48:10,059 - #9 print
INFO  21:48:10,059 - #6 (
INFO  21:48:10,059 - #16 eol
INFO  21:48:10,059 - #7 )
INFO  21:48:10,059 - #5 ;
INFO  21:48:10,059 - #16 i
INFO  21:48:10,059 - #13 =
INFO  21:48:10,059 - #15 0
INFO  21:48:10,059 - #5 ;
INFO  21:48:10,060 - #34 do
INFO  21:48:10,060 - #3 {
INFO  21:48:10,060 - #19 if
INFO  21:48:10,060 - #6 (
INFO  21:48:10,060 - #16 i
INFO  21:48:10,060 - #22 ==
INFO  21:48:10,060 - #15 3
INFO  21:48:10,060 - #7 )
INFO  21:48:10,060 - #3 {
INFO  21:48:10,060 - #16 i
INFO  21:48:10,060 - #46 ++
INFO  21:48:10,060 - #5 ;
INFO  21:48:10,060 - #39 continue
INFO  21:48:10,060 - #5 ;
INFO  21:48:10,060 - #4 }
INFO  21:48:10,060 - #19 if
INFO  21:48:10,060 - #6 (
INFO  21:48:10,060 - #16 i
INFO  21:48:10,060 - #22 ==
INFO  21:48:10,060 - #15 4
INFO  21:48:10,060 - #7 )
INFO  21:48:10,061 - #31 break
INFO  21:48:10,061 - #5 ;
INFO  21:48:10,061 - #16 i
INFO  21:48:10,061 - #13 =
INFO  21:48:10,061 - #16 inkrement
INFO  21:48:10,061 - #6 (
INFO  21:48:10,061 - #16 i
INFO  21:48:10,061 - #8 ,
INFO  21:48:10,061 - #15 1
INFO  21:48:10,061 - #7 )
INFO  21:48:10,061 - #5 ;
INFO  21:48:10,061 - #4 }
INFO  21:48:10,061 - #35 while
INFO  21:48:10,061 - #6 (
INFO  21:48:10,061 - #16 i
INFO  21:48:10,061 - #26 <
INFO  21:48:10,061 - #15 10
INFO  21:48:10,061 - #7 )
INFO  21:48:10,061 - #5 ;
INFO  21:48:10,061 - #19 if
INFO  21:48:10,061 - #6 (
INFO  21:48:10,061 - #16 i
INFO  21:48:10,061 - #22 ==
INFO  21:48:10,061 - #15 3
INFO  21:48:10,061 - #44 &&
INFO  21:48:10,061 - #16 verify
INFO  21:48:10,061 - #6 (
INFO  21:48:10,061 - #7 )
INFO  21:48:10,062 - #7 )
INFO  21:48:10,062 - #9 print
INFO  21:48:10,062 - #6 (
INFO  21:48:10,062 - #12 -
INFO  21:48:10,062 - #15 4
INFO  21:48:10,062 - #7 )
INFO  21:48:10,062 - #5 ;
INFO  21:48:10,062 - #20 else
INFO  21:48:10,062 - #9 print
INFO  21:48:10,062 - #6 (
INFO  21:48:10,062 - #15 4
INFO  21:48:10,062 - #7 )
INFO  21:48:10,062 - #5 ;
INFO  21:48:10,062 - #37 read
INFO  21:48:10,062 - #6 (
INFO  21:48:10,062 - #16 t1
INFO  21:48:10,062 - #43 .
INFO  21:48:10,062 - #16 niz
INFO  21:48:10,062 - #50 [
INFO  21:48:10,062 - #15 0
INFO  21:48:10,062 - #51 ]
INFO  21:48:10,062 - #7 )
INFO  21:48:10,062 - #5 ;
INFO  21:48:10,062 - #37 read
INFO  21:48:10,062 - #6 (
INFO  21:48:10,062 - #16 t1
INFO  21:48:10,062 - #43 .
INFO  21:48:10,062 - #16 niz
INFO  21:48:10,062 - #50 [
INFO  21:48:10,062 - #15 1
INFO  21:48:10,062 - #51 ]
INFO  21:48:10,062 - #7 )
INFO  21:48:10,062 - #5 ;
INFO  21:48:10,062 - #37 read
INFO  21:48:10,062 - #6 (
INFO  21:48:10,062 - #16 t1
INFO  21:48:10,062 - #43 .
INFO  21:48:10,062 - #16 niz
INFO  21:48:10,062 - #50 [
INFO  21:48:10,062 - #15 2
INFO  21:48:10,062 - #51 ]
INFO  21:48:10,062 - #7 )
INFO  21:48:10,062 - #5 ;
INFO  21:48:10,062 - #9 print
INFO  21:48:10,062 - #6 (
INFO  21:48:10,062 - #16 eol
INFO  21:48:10,063 - #7 )
INFO  21:48:10,063 - #5 ;
INFO  21:48:10,063 - #16 chr
INFO  21:48:10,063 - #6 (
INFO  21:48:10,063 - #15 3
INFO  21:48:10,063 - #7 )
INFO  21:48:10,063 - #5 ;
INFO  21:48:10,063 - #9 print
INFO  21:48:10,063 - #6 (
INFO  21:48:10,063 - #16 sum
INFO  21:48:10,063 - #6 (
INFO  21:48:10,063 - #16 sum
INFO  21:48:10,063 - #6 (
INFO  21:48:10,063 - #16 t1
INFO  21:48:10,063 - #43 .
INFO  21:48:10,063 - #16 niz
INFO  21:48:10,063 - #50 [
INFO  21:48:10,063 - #15 0
INFO  21:48:10,063 - #51 ]
INFO  21:48:10,063 - #8 ,
INFO  21:48:10,063 - #16 t1
INFO  21:48:10,063 - #43 .
INFO  21:48:10,063 - #16 niz
INFO  21:48:10,063 - #50 [
INFO  21:48:10,063 - #15 1
INFO  21:48:10,063 - #51 ]
INFO  21:48:10,063 - #7 )
INFO  21:48:10,063 - #8 ,
INFO  21:48:10,063 - #16 t1
INFO  21:48:10,063 - #43 .
INFO  21:48:10,063 - #16 niz
INFO  21:48:10,063 - #50 [
INFO  21:48:10,063 - #15 2
INFO  21:48:10,063 - #51 ]
INFO  21:48:10,063 - #7 )
INFO  21:48:10,063 - #7 )
INFO  21:48:10,063 - #5 ;
INFO  21:48:10,063 - #9 print
INFO  21:48:10,063 - #6 (
INFO  21:48:10,063 - #16 eol
INFO  21:48:10,063 - #7 )
INFO  21:48:10,063 - #5 ;
INFO  21:48:10,063 - #9 print
INFO  21:48:10,063 - #6 (
INFO  21:48:10,063 - #16 inkrement
INFO  21:48:10,063 - #6 (
INFO  21:48:10,063 - #16 t1
INFO  21:48:10,063 - #43 .
INFO  21:48:10,063 - #16 niz
INFO  21:48:10,063 - #50 [
INFO  21:48:10,063 - #15 2
INFO  21:48:10,063 - #51 ]
INFO  21:48:10,063 - #8 ,
INFO  21:48:10,063 - #15 2
INFO  21:48:10,063 - #7 )
INFO  21:48:10,064 - #7 )
INFO  21:48:10,064 - #5 ;
INFO  21:48:10,064 - #16 t2
INFO  21:48:10,064 - #13 =
INFO  21:48:10,064 - #36 new
INFO  21:48:10,064 - #16 Test
INFO  21:48:10,064 - #5 ;
INFO  21:48:10,064 - #16 t2
INFO  21:48:10,064 - #43 .
INFO  21:48:10,064 - #16 a
INFO  21:48:10,064 - #13 =
INFO  21:48:10,064 - #15 3
INFO  21:48:10,064 - #5 ;
INFO  21:48:10,064 - #16 t2
INFO  21:48:10,064 - #43 .
INFO  21:48:10,064 - #16 niz
INFO  21:48:10,064 - #13 =
INFO  21:48:10,064 - #36 new
INFO  21:48:10,064 - #16 int
INFO  21:48:10,064 - #50 [
INFO  21:48:10,064 - #15 3
INFO  21:48:10,064 - #51 ]
INFO  21:48:10,064 - #5 ;
INFO  21:48:10,064 - #16 i
INFO  21:48:10,064 - #13 =
INFO  21:48:10,064 - #15 0
INFO  21:48:10,064 - #5 ;
INFO  21:48:10,064 - #34 do
INFO  21:48:10,065 - #3 {
INFO  21:48:10,065 - #16 t2
INFO  21:48:10,065 - #43 .
INFO  21:48:10,065 - #16 niz
INFO  21:48:10,065 - #50 [
INFO  21:48:10,065 - #16 i
INFO  21:48:10,065 - #51 ]
INFO  21:48:10,065 - #13 =
INFO  21:48:10,065 - #16 t1
INFO  21:48:10,065 - #43 .
INFO  21:48:10,065 - #16 niz
INFO  21:48:10,065 - #50 [
INFO  21:48:10,065 - #16 i
INFO  21:48:10,065 - #51 ]
INFO  21:48:10,065 - #28 *
INFO  21:48:10,065 - #15 2
INFO  21:48:10,065 - #28 *
INFO  21:48:10,065 - #16 t2
INFO  21:48:10,065 - #43 .
INFO  21:48:10,065 - #16 a
INFO  21:48:10,065 - #5 ;
INFO  21:48:10,065 - #16 i
INFO  21:48:10,065 - #46 ++
INFO  21:48:10,066 - #5 ;
INFO  21:48:10,066 - #4 }
INFO  21:48:10,066 - #35 while
INFO  21:48:10,066 - #6 (
INFO  21:48:10,066 - #16 i
INFO  21:48:10,066 - #26 <
INFO  21:48:10,066 - #15 3
INFO  21:48:10,066 - #7 )
INFO  21:48:10,066 - #5 ;
INFO  21:48:10,066 - #9 print
INFO  21:48:10,066 - #6 (
INFO  21:48:10,066 - #16 t2
INFO  21:48:10,066 - #43 .
INFO  21:48:10,066 - #16 niz
INFO  21:48:10,066 - #50 [
INFO  21:48:10,066 - #15 0
INFO  21:48:10,066 - #51 ]
INFO  21:48:10,066 - #7 )
INFO  21:48:10,066 - #5 ;
INFO  21:48:10,066 - #9 print
INFO  21:48:10,066 - #6 (
INFO  21:48:10,066 - #16 t2
INFO  21:48:10,066 - #43 .
INFO  21:48:10,066 - #16 niz
INFO  21:48:10,066 - #50 [
INFO  21:48:10,066 - #15 1
INFO  21:48:10,066 - #51 ]
INFO  21:48:10,066 - #7 )
INFO  21:48:10,067 - #5 ;
INFO  21:48:10,067 - #9 print
INFO  21:48:10,067 - #6 (
INFO  21:48:10,067 - #16 t2
INFO  21:48:10,067 - #43 .
INFO  21:48:10,067 - #16 niz
INFO  21:48:10,067 - #50 [
INFO  21:48:10,067 - #15 2
INFO  21:48:10,067 - #51 ]
INFO  21:48:10,067 - #7 )
INFO  21:48:10,067 - #5 ;
INFO  21:48:10,067 - #9 print
INFO  21:48:10,067 - #6 (
INFO  21:48:10,067 - #16 eol
INFO  21:48:10,067 - #7 )
INFO  21:48:10,067 - #5 ;
INFO  21:48:10,067 - #16 i
INFO  21:48:10,067 - #13 =
INFO  21:48:10,067 - #15 0
INFO  21:48:10,067 - #5 ;
INFO  21:48:10,067 - #16 niz2
INFO  21:48:10,067 - #13 =
INFO  21:48:10,067 - #15 0
INFO  21:48:10,067 - #5 ;
INFO  21:48:10,067 - #34 do
INFO  21:48:10,067 - #3 {
INFO  21:48:10,067 - #16 niz2
INFO  21:48:10,067 - #13 =
INFO  21:48:10,067 - #16 niz2
INFO  21:48:10,067 - #11 +
INFO  21:48:10,067 - #16 t1
INFO  21:48:10,067 - #43 .
INFO  21:48:10,067 - #16 niz
INFO  21:48:10,067 - #50 [
INFO  21:48:10,067 - #16 i
INFO  21:48:10,067 - #51 ]
INFO  21:48:10,067 - #11 +
INFO  21:48:10,067 - #16 t2
INFO  21:48:10,067 - #43 .
INFO  21:48:10,067 - #16 niz
INFO  21:48:10,067 - #50 [
INFO  21:48:10,067 - #16 i
INFO  21:48:10,067 - #51 ]
INFO  21:48:10,067 - #5 ;
INFO  21:48:10,067 - #16 i
INFO  21:48:10,067 - #46 ++
INFO  21:48:10,067 - #5 ;
INFO  21:48:10,067 - #4 }
INFO  21:48:10,067 - #35 while
INFO  21:48:10,067 - #6 (
INFO  21:48:10,067 - #16 i
INFO  21:48:10,067 - #26 <
INFO  21:48:10,068 - #15 3
INFO  21:48:10,068 - #7 )
INFO  21:48:10,068 - #5 ;
INFO  21:48:10,068 - #9 print
INFO  21:48:10,068 - #6 (
INFO  21:48:10,068 - #16 niz2
INFO  21:48:10,068 - #7 )
INFO  21:48:10,068 - #5 ;
INFO  21:48:10,068 - #9 print
INFO  21:48:10,068 - #6 (
INFO  21:48:10,068 - #16 eol
INFO  21:48:10,068 - #7 )
INFO  21:48:10,068 - #5 ;
INFO  21:48:10,068 - #4 }
INFO  21:48:10,068 - #4 }
INFO  21:48:10,075 - Trenutan tip konstante je:  int na liniji 5
INFO  21:48:10,075 - Trenutan tip konstante je:  char na liniji 7
INFO  21:48:10,075 - Deklarisana promenljiva i na liniji 9
INFO  21:48:10,075 - Deklarisana promenljiva ibool na liniji 12
INFO  21:48:10,075 - Deklarisana promenljiva niz2 na liniji 14
INFO  21:48:10,075 - Deklarisana je rekord :  Test na liniji 16
INFO  21:48:10,075 - Deklarisana promenljiva niz na liniji 17
INFO  21:48:10,075 - Deklarisana promenljiva a na liniji 18
INFO  21:48:10,076 - Deklarisana je rekord :  Test2 na liniji 21
INFO  21:48:10,076 - Deklarisana promenljiva niz23 na liniji 22
INFO  21:48:10,076 - Deklarisana promenljiva a2 na liniji 23
INFO  21:48:10,076 - Deklarisana promenljiva t2 na liniji 26
INFO  21:48:10,076 - Deklarisana promenljiva t1 na liniji 26
INFO  21:48:10,076 - Obradjuje se funkcija sum na liniji 30
INFO  21:48:10,076 - Naveden argument d na liniji 30
INFO  21:48:10,076 - TypeNAME: int
INFO  21:48:10,076 - Naveden argument z na liniji 30
INFO  21:48:10,076 - TypeNAME: int
INFO  21:48:10,076 - Obradjuje se funkcija inkrement na liniji 36
INFO  21:48:10,076 - Naveden argument inc na liniji 36
INFO  21:48:10,076 - TypeNAME: int
INFO  21:48:10,076 - Naveden argument a na liniji 36
INFO  21:48:10,076 - TypeNAME: int
INFO  21:48:10,076 - Deklarisana promenljiva pom na liniji 37
INFO  21:48:10,077 - Usao u ACTPARSLIST broj: 1 na liniji 45
INFO  21:48:10,077 - Usao u ACTPARS broj: 1 na liniji 45
INFO  21:48:10,077 - Obradjuje se funkcija verify na liniji 48
INFO  21:48:10,077 - Usao u ACTPARSLIST broj: 1 na liniji 50
INFO  21:48:10,077 - Usao u ACTPARS broj: 1 na liniji 50
INFO  21:48:10,077 - Usao u ACTPARSLIST broj: 3 na liniji 50
INFO  21:48:10,077 - Usao u ACTPARS broj: 3 na liniji 50
INFO  21:48:10,077 - DESAVA SE POZIV FUNCKIJE:sum na liniji 50
INFO  21:48:10,077 - Usao u ACTPARSLIST broj: 3 na liniji 50
INFO  21:48:10,077 - Usao u ACTPARS broj: 3 na liniji 50
INFO  21:48:10,077 - DESAVA SE POZIV FUNCKIJE:sum na liniji 50
INFO  21:48:10,077 - Pronadjen poziv funkcije inkrement na liniji 50
INFO  21:48:10,077 - Usao u PROCCALL broj: 2 na liniji 50
INFO  21:48:10,077 - Usao u ACTPARSLIST broj: 1 na liniji 52
INFO  21:48:10,077 - Usao u ACTPARS broj: 1 na liniji 52
INFO  21:48:10,078 - Pronadjen poziv funkcije inkrement na liniji 52
INFO  21:48:10,078 - Usao u PROCCALL broj: 2 na liniji 52
INFO  21:48:10,078 - Obradjuje se funkcija main na liniji 58
INFO  21:48:10,078 - Usao u ACTPARSLIST broj: 1 na liniji 79
INFO  21:48:10,078 - Usao u ACTPARS broj: 1 na liniji 79
INFO  21:48:10,078 - Usao u ACTPARS broj: 2 na liniji 80
ERROR 21:48:10,078 - Semanticka greska na liniji 80 print prima samo num, char ili bool!
INFO  21:48:10,078 - Usao u ACTPARS broj: 3 na liniji 81
ERROR 21:48:10,078 - Semanticka greska na liniji 81 print prima samo num, char ili bool!
INFO  21:48:10,078 - Usao u ACTPARSLIST broj: 5 na liniji 92
INFO  21:48:10,078 - Usao u ACTPARS broj: 5 na liniji 92
ERROR 21:48:10,078 - Semanticka greska na liniji 98  t1 mora biti int, char ili bool!
ERROR 21:48:10,078 - Semanticka greska na liniji 99  t1 mora biti int, char ili bool!
ERROR 21:48:10,078 - Semanticka greska na liniji 100  t1 mora biti int, char ili bool!
INFO  21:48:10,078 - Usao u ACTPARS broj: 6 na liniji 103
INFO  21:48:10,078 - Pronadjen poziv funkcije chr na liniji 103
INFO  21:48:10,078 - Usao u PROCCALL broj: 7 na liniji 103
INFO  21:48:10,078 - Usao u ACTPARSLIST broj: 1 na liniji 105
INFO  21:48:10,078 - Usao u ACTPARS broj: 1 na liniji 105
INFO  21:48:10,078 - Usao u ACTPARSLIST broj: 3 na liniji 105
INFO  21:48:10,078 - Usao u ACTPARS broj: 3 na liniji 105
INFO  21:48:10,078 - DESAVA SE POZIV FUNCKIJE:sum na liniji 105
ERROR 21:48:10,078 - Semanticka greska na liniji 105 print prima samo num, char ili bool!
INFO  21:48:10,078 - Usao u ACTPARSLIST broj: 3 na liniji 108
INFO  21:48:10,078 - Usao u ACTPARS broj: 3 na liniji 108
ERROR 21:48:10,078 - Semanticka greska na liniji 108 print prima samo num, char ili bool!
ERROR 21:48:10,078 - Semanticka greska na liniji 118  t2 mora biti int, char ili bool!
ERROR 21:48:10,078 - Semanticka greska na liniji 119  t2 mora biti int, char ili bool!
ERROR 21:48:10,078 - Semanticka greska na liniji 120  t2 mora biti int, char ili bool!
ERROR 21:48:10,078 - Semanticka greska na liniji 124 nekompatibilni tipovi prilikom dodele!
ERROR 21:48:10,079 - Semanticka greska na liniji 126 nekompatibilni tipovi prilikom dodele!
ERROR 21:48:10,079 - Parsiranje NIJE uspesno zavrseno!
