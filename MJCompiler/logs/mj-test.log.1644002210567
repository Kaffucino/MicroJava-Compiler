INFO  20:02:22,022 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  20:02:22,056 - #2 program
INFO  20:02:22,056 - #16 test302
INFO  20:02:22,056 - #48 const
INFO  20:02:22,057 - #16 int
INFO  20:02:22,057 - #16 jedan
INFO  20:02:22,057 - #13 =
INFO  20:02:22,058 - #15 1
INFO  20:02:22,058 - #5 ;
INFO  20:02:22,058 - #48 const
INFO  20:02:22,059 - #16 char
INFO  20:02:22,059 - #16 Cofa
INFO  20:02:22,059 - #13 =
INFO  20:02:22,059 - #17 'a'
INFO  20:02:22,059 - #5 ;
INFO  20:02:22,059 - #16 int
INFO  20:02:22,059 - #16 i
INFO  20:02:22,059 - #5 ;
INFO  20:02:22,059 - #16 bool
INFO  20:02:22,060 - #16 ibool
INFO  20:02:22,060 - #5 ;
INFO  20:02:22,060 - #16 char
INFO  20:02:22,060 - #16 niz2
INFO  20:02:22,061 - #5 ;
INFO  20:02:22,061 - #49 record
INFO  20:02:22,061 - #16 Test
INFO  20:02:22,062 - #3 {
INFO  20:02:22,062 - #16 int
INFO  20:02:22,062 - #16 niz
INFO  20:02:22,062 - #50 [
INFO  20:02:22,062 - #51 ]
INFO  20:02:22,062 - #5 ;
INFO  20:02:22,062 - #16 int
INFO  20:02:22,063 - #16 a
INFO  20:02:22,063 - #5 ;
INFO  20:02:22,063 - #4 }
INFO  20:02:22,063 - #49 record
INFO  20:02:22,064 - #16 Test2
INFO  20:02:22,064 - #3 {
INFO  20:02:22,064 - #16 int
INFO  20:02:22,064 - #16 niz23
INFO  20:02:22,064 - #50 [
INFO  20:02:22,064 - #51 ]
INFO  20:02:22,064 - #5 ;
INFO  20:02:22,064 - #16 int
INFO  20:02:22,064 - #16 a2
INFO  20:02:22,064 - #5 ;
INFO  20:02:22,064 - #4 }
INFO  20:02:22,064 - #16 Test
INFO  20:02:22,064 - #16 t1
INFO  20:02:22,064 - #8 ,
INFO  20:02:22,064 - #16 t2
INFO  20:02:22,064 - #5 ;
INFO  20:02:22,064 - #3 {
INFO  20:02:22,065 - #16 char
INFO  20:02:22,065 - #16 sum
INFO  20:02:22,065 - #6 (
INFO  20:02:22,066 - #16 int
INFO  20:02:22,066 - #16 z
INFO  20:02:22,066 - #8 ,
INFO  20:02:22,066 - #16 int
INFO  20:02:22,066 - #16 d
INFO  20:02:22,066 - #7 )
INFO  20:02:22,066 - #3 {
INFO  20:02:22,067 - #10 return
INFO  20:02:22,067 - #17 'a'
INFO  20:02:22,067 - #5 ;
INFO  20:02:22,068 - #4 }
INFO  20:02:22,069 - #16 int
INFO  20:02:22,072 - #16 inkrement
INFO  20:02:22,072 - #6 (
INFO  20:02:22,072 - #16 int
INFO  20:02:22,072 - #16 a
INFO  20:02:22,072 - #8 ,
INFO  20:02:22,072 - #16 int
INFO  20:02:22,072 - #16 inc
INFO  20:02:22,072 - #7 )
INFO  20:02:22,072 - #16 int
INFO  20:02:22,072 - #16 pom
INFO  20:02:22,073 - #5 ;
INFO  20:02:22,073 - #3 {
INFO  20:02:22,073 - #19 if
INFO  20:02:22,073 - #6 (
INFO  20:02:22,073 - #16 inc
INFO  20:02:22,073 - #22 ==
INFO  20:02:22,074 - #16 jedan
INFO  20:02:22,074 - #7 )
INFO  20:02:22,076 - #16 pom
INFO  20:02:22,076 - #13 =
INFO  20:02:22,076 - #15 1
INFO  20:02:22,076 - #5 ;
INFO  20:02:22,076 - #20 else
INFO  20:02:22,076 - #19 if
INFO  20:02:22,076 - #6 (
INFO  20:02:22,076 - #16 inc
INFO  20:02:22,077 - #22 ==
INFO  20:02:22,077 - #15 2
INFO  20:02:22,077 - #7 )
INFO  20:02:22,077 - #16 pom
INFO  20:02:22,077 - #13 =
INFO  20:02:22,077 - #16 a
INFO  20:02:22,077 - #5 ;
INFO  20:02:22,077 - #10 return
INFO  20:02:22,078 - #16 sum
INFO  20:02:22,078 - #6 (
INFO  20:02:22,078 - #16 Cofa
INFO  20:02:22,078 - #8 ,
INFO  20:02:22,078 - #16 pom
INFO  20:02:22,078 - #7 )
INFO  20:02:22,079 - #5 ;
INFO  20:02:22,079 - #4 }
INFO  20:02:22,079 - #16 bool
INFO  20:02:22,079 - #16 verify
INFO  20:02:22,079 - #6 (
INFO  20:02:22,079 - #7 )
INFO  20:02:22,079 - #3 {
INFO  20:02:22,079 - #16 inkrement
INFO  20:02:22,079 - #6 (
INFO  20:02:22,079 - #15 2
INFO  20:02:22,079 - #8 ,
INFO  20:02:22,080 - #16 sum
INFO  20:02:22,080 - #6 (
INFO  20:02:22,080 - #15 1
INFO  20:02:22,080 - #8 ,
INFO  20:02:22,080 - #15 3
INFO  20:02:22,080 - #7 )
INFO  20:02:22,080 - #7 )
INFO  20:02:22,080 - #5 ;
INFO  20:02:22,080 - #16 inkrement
INFO  20:02:22,080 - #6 (
INFO  20:02:22,080 - #15 2
INFO  20:02:22,080 - #8 ,
INFO  20:02:22,080 - #15 2
INFO  20:02:22,080 - #7 )
INFO  20:02:22,080 - #5 ;
INFO  20:02:22,080 - #9 print
INFO  20:02:22,080 - #6 (
INFO  20:02:22,080 - #17 'v'
INFO  20:02:22,080 - #7 )
INFO  20:02:22,080 - #5 ;
INFO  20:02:22,080 - #10 return
INFO  20:02:22,081 - #18 false
INFO  20:02:22,081 - #5 ;
INFO  20:02:22,081 - #4 }
INFO  20:02:22,081 - #14 void
INFO  20:02:22,081 - #16 main
INFO  20:02:22,081 - #6 (
INFO  20:02:22,081 - #7 )
INFO  20:02:22,081 - #3 {
INFO  20:02:22,081 - #19 if
INFO  20:02:22,081 - #6 (
INFO  20:02:22,081 - #15 1
INFO  20:02:22,081 - #23 !=
INFO  20:02:22,081 - #15 1
INFO  20:02:22,082 - #7 )
INFO  20:02:22,082 - #9 print
INFO  20:02:22,082 - #6 (
INFO  20:02:22,082 - #12 -
INFO  20:02:22,082 - #15 6
INFO  20:02:22,082 - #7 )
INFO  20:02:22,082 - #5 ;
INFO  20:02:22,082 - #20 else
INFO  20:02:22,082 - #9 print
INFO  20:02:22,082 - #6 (
INFO  20:02:22,082 - #15 0
INFO  20:02:22,083 - #7 )
INFO  20:02:22,083 - #5 ;
INFO  20:02:22,083 - #16 ibool
INFO  20:02:22,083 - #13 =
INFO  20:02:22,083 - #18 false
INFO  20:02:22,083 - #5 ;
INFO  20:02:22,083 - #16 i
INFO  20:02:22,083 - #13 =
INFO  20:02:22,083 - #15 0
INFO  20:02:22,083 - #5 ;
INFO  20:02:22,083 - #34 do
INFO  20:02:22,083 - #3 {
INFO  20:02:22,084 - #19 if
INFO  20:02:22,084 - #6 (
INFO  20:02:22,084 - #16 i
INFO  20:02:22,084 - #22 ==
INFO  20:02:22,084 - #15 2
INFO  20:02:22,084 - #7 )
INFO  20:02:22,084 - #16 ibool
INFO  20:02:22,084 - #13 =
INFO  20:02:22,084 - #18 true
INFO  20:02:22,084 - #5 ;
INFO  20:02:22,084 - #16 i
INFO  20:02:22,084 - #46 ++
INFO  20:02:22,084 - #5 ;
INFO  20:02:22,084 - #4 }
INFO  20:02:22,084 - #35 while
INFO  20:02:22,085 - #6 (
INFO  20:02:22,085 - #16 i
INFO  20:02:22,085 - #26 <
INFO  20:02:22,085 - #15 5
INFO  20:02:22,085 - #7 )
INFO  20:02:22,085 - #5 ;
INFO  20:02:22,085 - #19 if
INFO  20:02:22,085 - #6 (
INFO  20:02:22,086 - #16 ibool
INFO  20:02:22,086 - #7 )
INFO  20:02:22,086 - #19 if
INFO  20:02:22,086 - #6 (
INFO  20:02:22,086 - #16 i
INFO  20:02:22,086 - #22 ==
INFO  20:02:22,086 - #15 5
INFO  20:02:22,086 - #7 )
INFO  20:02:22,086 - #9 print
INFO  20:02:22,086 - #6 (
INFO  20:02:22,086 - #15 1
INFO  20:02:22,086 - #7 )
INFO  20:02:22,086 - #5 ;
INFO  20:02:22,086 - #20 else
INFO  20:02:22,086 - #9 print
INFO  20:02:22,086 - #6 (
INFO  20:02:22,086 - #12 -
INFO  20:02:22,086 - #15 1
INFO  20:02:22,086 - #7 )
INFO  20:02:22,086 - #5 ;
INFO  20:02:22,086 - #16 t1
INFO  20:02:22,086 - #13 =
INFO  20:02:22,086 - #36 new
INFO  20:02:22,086 - #16 Test
INFO  20:02:22,086 - #5 ;
INFO  20:02:22,086 - #16 t1
INFO  20:02:22,086 - #43 .
INFO  20:02:22,087 - #16 a
INFO  20:02:22,087 - #13 =
INFO  20:02:22,087 - #15 2
INFO  20:02:22,087 - #5 ;
INFO  20:02:22,087 - #16 t1
INFO  20:02:22,087 - #43 .
INFO  20:02:22,087 - #16 niz
INFO  20:02:22,087 - #13 =
INFO  20:02:22,087 - #36 new
INFO  20:02:22,087 - #16 int
INFO  20:02:22,087 - #50 [
INFO  20:02:22,087 - #15 3
INFO  20:02:22,087 - #51 ]
INFO  20:02:22,087 - #5 ;
INFO  20:02:22,087 - #16 t1
INFO  20:02:22,087 - #43 .
INFO  20:02:22,087 - #16 niz
INFO  20:02:22,087 - #50 [
INFO  20:02:22,087 - #15 0
INFO  20:02:22,087 - #51 ]
INFO  20:02:22,087 - #13 =
INFO  20:02:22,088 - #15 1
INFO  20:02:22,088 - #28 *
INFO  20:02:22,088 - #16 t1
INFO  20:02:22,088 - #43 .
INFO  20:02:22,088 - #16 a
INFO  20:02:22,088 - #5 ;
INFO  20:02:22,091 - #16 t1
INFO  20:02:22,091 - #43 .
INFO  20:02:22,091 - #16 niz
INFO  20:02:22,091 - #50 [
INFO  20:02:22,091 - #15 1
INFO  20:02:22,091 - #51 ]
INFO  20:02:22,091 - #13 =
INFO  20:02:22,091 - #15 2
INFO  20:02:22,091 - #28 *
INFO  20:02:22,091 - #16 t1
INFO  20:02:22,091 - #43 .
INFO  20:02:22,091 - #16 a
INFO  20:02:22,091 - #5 ;
INFO  20:02:22,091 - #16 t1
INFO  20:02:22,091 - #43 .
INFO  20:02:22,091 - #16 niz
INFO  20:02:22,091 - #50 [
INFO  20:02:22,091 - #15 2
INFO  20:02:22,092 - #51 ]
INFO  20:02:22,092 - #13 =
INFO  20:02:22,092 - #16 sum
INFO  20:02:22,092 - #6 (
INFO  20:02:22,092 - #16 t1
INFO  20:02:22,092 - #43 .
INFO  20:02:22,092 - #16 niz
INFO  20:02:22,092 - #50 [
INFO  20:02:22,092 - #15 1
INFO  20:02:22,092 - #51 ]
INFO  20:02:22,092 - #8 ,
INFO  20:02:22,092 - #16 t1
INFO  20:02:22,092 - #43 .
INFO  20:02:22,092 - #16 niz
INFO  20:02:22,092 - #50 [
INFO  20:02:22,092 - #15 0
INFO  20:02:22,092 - #51 ]
INFO  20:02:22,092 - #7 )
INFO  20:02:22,092 - #28 *
INFO  20:02:22,092 - #16 t1
INFO  20:02:22,092 - #43 .
INFO  20:02:22,092 - #16 a
INFO  20:02:22,092 - #11 +
INFO  20:02:22,092 - #15 1
INFO  20:02:22,093 - #5 ;
INFO  20:02:22,093 - #19 if
INFO  20:02:22,093 - #6 (
INFO  20:02:22,093 - #16 verify
INFO  20:02:22,093 - #6 (
INFO  20:02:22,093 - #7 )
INFO  20:02:22,094 - #7 )
INFO  20:02:22,094 - #9 print
INFO  20:02:22,094 - #6 (
INFO  20:02:22,094 - #16 ord
INFO  20:02:22,094 - #6 (
INFO  20:02:22,094 - #17 'A'
INFO  20:02:22,094 - #7 )
INFO  20:02:22,094 - #7 )
INFO  20:02:22,094 - #5 ;
INFO  20:02:22,094 - #20 else
INFO  20:02:22,094 - #9 print
INFO  20:02:22,094 - #6 (
INFO  20:02:22,094 - #16 ord
INFO  20:02:22,094 - #6 (
INFO  20:02:22,094 - #17 'a'
INFO  20:02:22,094 - #7 )
INFO  20:02:22,094 - #7 )
INFO  20:02:22,094 - #5 ;
INFO  20:02:22,094 - #9 print
INFO  20:02:22,094 - #6 (
INFO  20:02:22,094 - #16 eol
INFO  20:02:22,094 - #7 )
INFO  20:02:22,094 - #5 ;
INFO  20:02:22,094 - #16 i
INFO  20:02:22,094 - #13 =
INFO  20:02:22,094 - #15 0
INFO  20:02:22,094 - #5 ;
INFO  20:02:22,094 - #34 do
INFO  20:02:22,094 - #3 {
INFO  20:02:22,094 - #19 if
INFO  20:02:22,095 - #6 (
INFO  20:02:22,095 - #16 i
INFO  20:02:22,095 - #22 ==
INFO  20:02:22,095 - #15 3
INFO  20:02:22,095 - #7 )
INFO  20:02:22,095 - #3 {
INFO  20:02:22,095 - #16 i
INFO  20:02:22,095 - #46 ++
INFO  20:02:22,095 - #5 ;
INFO  20:02:22,095 - #39 continue
INFO  20:02:22,095 - #5 ;
INFO  20:02:22,095 - #4 }
INFO  20:02:22,095 - #19 if
INFO  20:02:22,095 - #6 (
INFO  20:02:22,095 - #16 i
INFO  20:02:22,095 - #22 ==
INFO  20:02:22,095 - #15 4
INFO  20:02:22,095 - #7 )
INFO  20:02:22,096 - #31 break
INFO  20:02:22,096 - #5 ;
INFO  20:02:22,096 - #16 i
INFO  20:02:22,096 - #13 =
INFO  20:02:22,096 - #16 inkrement
INFO  20:02:22,096 - #6 (
INFO  20:02:22,096 - #16 i
INFO  20:02:22,096 - #8 ,
INFO  20:02:22,096 - #15 1
INFO  20:02:22,096 - #7 )
INFO  20:02:22,096 - #5 ;
INFO  20:02:22,096 - #4 }
INFO  20:02:22,096 - #35 while
INFO  20:02:22,096 - #6 (
INFO  20:02:22,096 - #16 i
INFO  20:02:22,096 - #26 <
INFO  20:02:22,096 - #15 10
INFO  20:02:22,096 - #7 )
INFO  20:02:22,096 - #5 ;
INFO  20:02:22,096 - #19 if
INFO  20:02:22,096 - #6 (
INFO  20:02:22,097 - #16 i
INFO  20:02:22,097 - #22 ==
INFO  20:02:22,097 - #15 3
INFO  20:02:22,097 - #44 &&
INFO  20:02:22,097 - #16 verify
INFO  20:02:22,097 - #6 (
INFO  20:02:22,097 - #7 )
INFO  20:02:22,097 - #7 )
INFO  20:02:22,097 - #9 print
INFO  20:02:22,097 - #6 (
INFO  20:02:22,097 - #12 -
INFO  20:02:22,097 - #15 4
INFO  20:02:22,097 - #7 )
INFO  20:02:22,097 - #5 ;
INFO  20:02:22,097 - #20 else
INFO  20:02:22,097 - #9 print
INFO  20:02:22,097 - #6 (
INFO  20:02:22,097 - #15 4
INFO  20:02:22,097 - #7 )
INFO  20:02:22,097 - #5 ;
INFO  20:02:22,097 - #37 read
INFO  20:02:22,097 - #6 (
INFO  20:02:22,097 - #16 t1
INFO  20:02:22,097 - #43 .
INFO  20:02:22,097 - #16 niz
INFO  20:02:22,097 - #50 [
INFO  20:02:22,097 - #15 0
INFO  20:02:22,097 - #51 ]
INFO  20:02:22,097 - #7 )
INFO  20:02:22,097 - #5 ;
INFO  20:02:22,097 - #37 read
INFO  20:02:22,097 - #6 (
INFO  20:02:22,097 - #16 t1
INFO  20:02:22,098 - #43 .
INFO  20:02:22,098 - #16 niz
INFO  20:02:22,098 - #50 [
INFO  20:02:22,098 - #15 1
INFO  20:02:22,098 - #51 ]
INFO  20:02:22,098 - #7 )
INFO  20:02:22,098 - #5 ;
INFO  20:02:22,098 - #37 read
INFO  20:02:22,098 - #6 (
INFO  20:02:22,098 - #16 t1
INFO  20:02:22,098 - #43 .
INFO  20:02:22,098 - #16 niz
INFO  20:02:22,098 - #50 [
INFO  20:02:22,098 - #15 2
INFO  20:02:22,098 - #51 ]
INFO  20:02:22,098 - #7 )
INFO  20:02:22,098 - #5 ;
INFO  20:02:22,098 - #9 print
INFO  20:02:22,098 - #6 (
INFO  20:02:22,098 - #16 eol
INFO  20:02:22,098 - #7 )
INFO  20:02:22,098 - #5 ;
INFO  20:02:22,098 - #16 chr
INFO  20:02:22,098 - #6 (
INFO  20:02:22,098 - #15 3
INFO  20:02:22,098 - #7 )
INFO  20:02:22,098 - #5 ;
INFO  20:02:22,098 - #9 print
INFO  20:02:22,098 - #6 (
INFO  20:02:22,098 - #16 sum
INFO  20:02:22,098 - #6 (
INFO  20:02:22,098 - #16 sum
INFO  20:02:22,098 - #6 (
INFO  20:02:22,098 - #16 t1
INFO  20:02:22,098 - #43 .
INFO  20:02:22,098 - #16 niz
INFO  20:02:22,098 - #50 [
INFO  20:02:22,098 - #15 0
INFO  20:02:22,098 - #51 ]
INFO  20:02:22,098 - #8 ,
INFO  20:02:22,099 - #16 t1
INFO  20:02:22,099 - #43 .
INFO  20:02:22,099 - #16 niz
INFO  20:02:22,099 - #50 [
INFO  20:02:22,099 - #15 1
INFO  20:02:22,099 - #51 ]
INFO  20:02:22,099 - #7 )
INFO  20:02:22,099 - #8 ,
INFO  20:02:22,099 - #16 t1
INFO  20:02:22,099 - #43 .
INFO  20:02:22,099 - #16 niz
INFO  20:02:22,099 - #50 [
INFO  20:02:22,099 - #15 2
INFO  20:02:22,099 - #51 ]
INFO  20:02:22,099 - #7 )
INFO  20:02:22,099 - #7 )
INFO  20:02:22,099 - #5 ;
INFO  20:02:22,099 - #9 print
INFO  20:02:22,099 - #6 (
INFO  20:02:22,099 - #16 eol
INFO  20:02:22,099 - #7 )
INFO  20:02:22,099 - #5 ;
INFO  20:02:22,099 - #9 print
INFO  20:02:22,099 - #6 (
INFO  20:02:22,099 - #16 inkrement
INFO  20:02:22,099 - #6 (
INFO  20:02:22,099 - #16 t1
INFO  20:02:22,099 - #43 .
INFO  20:02:22,099 - #16 niz
INFO  20:02:22,099 - #50 [
INFO  20:02:22,099 - #15 2
INFO  20:02:22,099 - #51 ]
INFO  20:02:22,099 - #8 ,
INFO  20:02:22,099 - #15 2
INFO  20:02:22,099 - #7 )
INFO  20:02:22,099 - #7 )
INFO  20:02:22,099 - #5 ;
INFO  20:02:22,099 - #16 t2
INFO  20:02:22,099 - #13 =
INFO  20:02:22,099 - #36 new
INFO  20:02:22,099 - #16 Test
INFO  20:02:22,099 - #5 ;
INFO  20:02:22,099 - #16 t2
INFO  20:02:22,099 - #43 .
INFO  20:02:22,099 - #16 a
INFO  20:02:22,099 - #13 =
INFO  20:02:22,099 - #15 3
INFO  20:02:22,099 - #5 ;
INFO  20:02:22,099 - #16 t2
INFO  20:02:22,099 - #43 .
INFO  20:02:22,099 - #16 niz
INFO  20:02:22,099 - #13 =
INFO  20:02:22,099 - #36 new
INFO  20:02:22,099 - #16 int
INFO  20:02:22,099 - #50 [
INFO  20:02:22,099 - #15 3
INFO  20:02:22,099 - #51 ]
INFO  20:02:22,100 - #5 ;
INFO  20:02:22,100 - #16 i
INFO  20:02:22,100 - #13 =
INFO  20:02:22,100 - #15 0
INFO  20:02:22,100 - #5 ;
INFO  20:02:22,100 - #34 do
INFO  20:02:22,100 - #3 {
INFO  20:02:22,100 - #16 t2
INFO  20:02:22,100 - #43 .
INFO  20:02:22,100 - #16 niz
INFO  20:02:22,100 - #50 [
INFO  20:02:22,100 - #16 i
INFO  20:02:22,100 - #51 ]
INFO  20:02:22,100 - #13 =
INFO  20:02:22,100 - #16 t1
INFO  20:02:22,100 - #43 .
INFO  20:02:22,100 - #16 niz
INFO  20:02:22,100 - #50 [
INFO  20:02:22,100 - #16 i
INFO  20:02:22,101 - #51 ]
INFO  20:02:22,101 - #28 *
INFO  20:02:22,101 - #15 2
INFO  20:02:22,101 - #28 *
INFO  20:02:22,101 - #16 t2
INFO  20:02:22,101 - #43 .
INFO  20:02:22,101 - #16 a
INFO  20:02:22,101 - #5 ;
INFO  20:02:22,101 - #16 i
INFO  20:02:22,101 - #46 ++
INFO  20:02:22,101 - #5 ;
INFO  20:02:22,101 - #4 }
INFO  20:02:22,101 - #35 while
INFO  20:02:22,101 - #6 (
INFO  20:02:22,101 - #16 i
INFO  20:02:22,101 - #26 <
INFO  20:02:22,101 - #15 3
INFO  20:02:22,101 - #7 )
INFO  20:02:22,102 - #5 ;
INFO  20:02:22,102 - #9 print
INFO  20:02:22,102 - #6 (
INFO  20:02:22,102 - #16 t2
INFO  20:02:22,102 - #43 .
INFO  20:02:22,102 - #16 niz
INFO  20:02:22,102 - #50 [
INFO  20:02:22,102 - #15 0
INFO  20:02:22,102 - #51 ]
INFO  20:02:22,102 - #7 )
INFO  20:02:22,102 - #5 ;
INFO  20:02:22,102 - #9 print
INFO  20:02:22,102 - #6 (
INFO  20:02:22,102 - #16 t2
INFO  20:02:22,102 - #43 .
INFO  20:02:22,102 - #16 niz
INFO  20:02:22,102 - #50 [
INFO  20:02:22,103 - #15 1
INFO  20:02:22,103 - #51 ]
INFO  20:02:22,103 - #7 )
INFO  20:02:22,103 - #5 ;
INFO  20:02:22,103 - #9 print
INFO  20:02:22,103 - #6 (
INFO  20:02:22,103 - #16 t2
INFO  20:02:22,103 - #43 .
INFO  20:02:22,103 - #16 niz
INFO  20:02:22,103 - #50 [
INFO  20:02:22,103 - #15 2
INFO  20:02:22,103 - #51 ]
INFO  20:02:22,103 - #7 )
INFO  20:02:22,103 - #5 ;
INFO  20:02:22,103 - #9 print
INFO  20:02:22,103 - #6 (
INFO  20:02:22,103 - #16 eol
INFO  20:02:22,103 - #7 )
INFO  20:02:22,103 - #5 ;
INFO  20:02:22,103 - #16 i
INFO  20:02:22,103 - #13 =
INFO  20:02:22,103 - #15 0
INFO  20:02:22,103 - #5 ;
INFO  20:02:22,103 - #16 niz2
INFO  20:02:22,103 - #13 =
INFO  20:02:22,103 - #15 0
INFO  20:02:22,103 - #5 ;
INFO  20:02:22,103 - #34 do
INFO  20:02:22,103 - #3 {
INFO  20:02:22,103 - #16 niz2
INFO  20:02:22,103 - #13 =
INFO  20:02:22,103 - #16 niz2
INFO  20:02:22,103 - #11 +
INFO  20:02:22,104 - #16 t1
INFO  20:02:22,104 - #43 .
INFO  20:02:22,104 - #16 niz
INFO  20:02:22,104 - #50 [
INFO  20:02:22,104 - #16 i
INFO  20:02:22,104 - #51 ]
INFO  20:02:22,104 - #11 +
INFO  20:02:22,105 - #16 t2
INFO  20:02:22,105 - #43 .
INFO  20:02:22,105 - #16 niz
INFO  20:02:22,105 - #50 [
INFO  20:02:22,105 - #16 i
INFO  20:02:22,105 - #51 ]
INFO  20:02:22,105 - #5 ;
INFO  20:02:22,105 - #16 i
INFO  20:02:22,105 - #46 ++
INFO  20:02:22,105 - #5 ;
INFO  20:02:22,105 - #4 }
INFO  20:02:22,105 - #35 while
INFO  20:02:22,105 - #6 (
INFO  20:02:22,105 - #16 i
INFO  20:02:22,105 - #26 <
INFO  20:02:22,105 - #15 3
INFO  20:02:22,105 - #7 )
INFO  20:02:22,105 - #5 ;
INFO  20:02:22,105 - #9 print
INFO  20:02:22,105 - #6 (
INFO  20:02:22,105 - #16 niz2
INFO  20:02:22,105 - #7 )
INFO  20:02:22,105 - #5 ;
INFO  20:02:22,105 - #9 print
INFO  20:02:22,105 - #6 (
INFO  20:02:22,105 - #16 eol
INFO  20:02:22,105 - #7 )
INFO  20:02:22,105 - #5 ;
INFO  20:02:22,105 - #4 }
INFO  20:02:22,105 - #4 }
INFO  20:02:22,113 - Trenutan tip konstante je:  int na liniji 5
INFO  20:02:22,113 - Trenutan tip konstante je:  char na liniji 7
INFO  20:02:22,113 - Deklarisana promenljiva i na liniji 9
INFO  20:02:22,113 - Deklarisana promenljiva ibool na liniji 12
INFO  20:02:22,113 - Deklarisana promenljiva niz2 na liniji 14
INFO  20:02:22,113 - Deklarisana je rekord :  Test na liniji 16
INFO  20:02:22,113 - Deklarisana promenljiva niz na liniji 17
INFO  20:02:22,114 - Deklarisana promenljiva a na liniji 18
INFO  20:02:22,114 - Deklarisana je rekord :  Test2 na liniji 21
INFO  20:02:22,114 - Deklarisana promenljiva niz23 na liniji 22
INFO  20:02:22,114 - Deklarisana promenljiva a2 na liniji 23
INFO  20:02:22,114 - Deklarisana promenljiva t2 na liniji 26
INFO  20:02:22,114 - Deklarisana promenljiva t1 na liniji 26
INFO  20:02:22,114 - Obradjuje se funkcija sum na liniji 30
INFO  20:02:22,114 - Naveden argument d na liniji 30
INFO  20:02:22,114 - TypeNAME: int
INFO  20:02:22,114 - Naveden argument z na liniji 30
INFO  20:02:22,114 - TypeNAME: int
INFO  20:02:22,115 - Obradjuje se funkcija inkrement na liniji 36
INFO  20:02:22,115 - Naveden argument inc na liniji 36
INFO  20:02:22,115 - TypeNAME: int
INFO  20:02:22,115 - Naveden argument a na liniji 36
INFO  20:02:22,115 - TypeNAME: int
INFO  20:02:22,115 - Deklarisana promenljiva pom na liniji 37
INFO  20:02:22,115 - Obradjuje se funkcija verify na liniji 48
INFO  20:02:22,115 - Pronadjen poziv funkcije inkrement na liniji 50
ERROR 20:02:22,115 - Greska na liniji 50 pogresan broj argumenata za funkciju: 1inkrement
INFO  20:02:22,115 - Pronadjen poziv funkcije inkrement na liniji 52
ERROR 20:02:22,115 - Greska na liniji 52 pogresan broj argumenata za funkciju: 6inkrement
INFO  20:02:22,115 - Obradjuje se funkcija main na liniji 58
ERROR 20:02:22,116 - Semanticka greska na liniji 80 print prima samo num, char ili bool!
ERROR 20:02:22,116 - Semanticka greska na liniji 81 print prima samo num, char ili bool!
ERROR 20:02:22,116 - Semanticka greska na liniji 98  t1 mora biti int, char ili bool!
ERROR 20:02:22,116 - Semanticka greska na liniji 99  t1 mora biti int, char ili bool!
ERROR 20:02:22,116 - Semanticka greska na liniji 100  t1 mora biti int, char ili bool!
INFO  20:02:22,116 - Pronadjen poziv funkcije chr na liniji 103
ERROR 20:02:22,116 - Semanticka greska na liniji 105 print prima samo num, char ili bool!
ERROR 20:02:22,116 - Semanticka greska na liniji 108 print prima samo num, char ili bool!
ERROR 20:02:22,116 - Semanticka greska na liniji 118  t2 mora biti int, char ili bool!
ERROR 20:02:22,116 - Semanticka greska na liniji 119  t2 mora biti int, char ili bool!
ERROR 20:02:22,116 - Semanticka greska na liniji 120  t2 mora biti int, char ili bool!
ERROR 20:02:22,116 - Semanticka greska na liniji 124 nekompatibilni tipovi prilikom dodele!
ERROR 20:02:22,116 - Semanticka greska na liniji 126 nekompatibilni tipovi prilikom dodele!
ERROR 20:02:22,116 - Parsiranje NIJE uspesno zavrseno!
