INFO  20:03:34,935 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  20:03:34,966 - #2 program
INFO  20:03:34,966 - #16 test302
INFO  20:03:34,966 - #48 const
INFO  20:03:34,967 - #16 int
INFO  20:03:34,967 - #16 jedan
INFO  20:03:34,967 - #13 =
INFO  20:03:34,967 - #15 1
INFO  20:03:34,967 - #5 ;
INFO  20:03:34,968 - #16 int
INFO  20:03:34,968 - #16 i
INFO  20:03:34,968 - #5 ;
INFO  20:03:34,969 - #16 bool
INFO  20:03:34,969 - #16 ibool
INFO  20:03:34,969 - #5 ;
INFO  20:03:34,969 - #16 int
INFO  20:03:34,969 - #16 niz2
INFO  20:03:34,969 - #5 ;
INFO  20:03:34,969 - #49 record
INFO  20:03:34,969 - #16 Test
INFO  20:03:34,969 - #3 {
INFO  20:03:34,970 - #16 int
INFO  20:03:34,970 - #16 niz
INFO  20:03:34,972 - #50 [
INFO  20:03:34,972 - #51 ]
INFO  20:03:34,972 - #5 ;
INFO  20:03:34,972 - #16 int
INFO  20:03:34,972 - #16 a
INFO  20:03:34,972 - #5 ;
INFO  20:03:34,973 - #4 }
INFO  20:03:34,973 - #16 Test
INFO  20:03:34,973 - #16 t1
INFO  20:03:34,973 - #8 ,
INFO  20:03:34,973 - #16 t2
INFO  20:03:34,973 - #5 ;
INFO  20:03:34,974 - #3 {
INFO  20:03:34,974 - #16 int
INFO  20:03:34,974 - #16 sum
INFO  20:03:34,974 - #6 (
INFO  20:03:34,975 - #16 int
INFO  20:03:34,975 - #16 z
INFO  20:03:34,975 - #8 ,
INFO  20:03:34,975 - #16 int
INFO  20:03:34,975 - #16 d
INFO  20:03:34,975 - #7 )
INFO  20:03:34,975 - #3 {
INFO  20:03:34,976 - #10 return
INFO  20:03:34,976 - #16 z
INFO  20:03:34,976 - #11 +
INFO  20:03:34,977 - #16 d
INFO  20:03:34,977 - #5 ;
INFO  20:03:34,978 - #4 }
INFO  20:03:34,978 - #16 int
INFO  20:03:34,978 - #16 inkrement
INFO  20:03:34,978 - #6 (
INFO  20:03:34,979 - #16 int
INFO  20:03:34,979 - #16 a
INFO  20:03:34,979 - #8 ,
INFO  20:03:34,979 - #16 int
INFO  20:03:34,979 - #16 inc
INFO  20:03:34,979 - #7 )
INFO  20:03:34,979 - #16 int
INFO  20:03:34,979 - #16 pom
INFO  20:03:34,979 - #5 ;
INFO  20:03:34,979 - #3 {
INFO  20:03:34,979 - #19 if
INFO  20:03:34,979 - #6 (
INFO  20:03:34,979 - #16 inc
INFO  20:03:34,979 - #22 ==
INFO  20:03:34,982 - #16 jedan
INFO  20:03:34,983 - #7 )
INFO  20:03:34,984 - #16 pom
INFO  20:03:34,984 - #13 =
INFO  20:03:34,984 - #15 1
INFO  20:03:34,984 - #5 ;
INFO  20:03:34,985 - #20 else
INFO  20:03:34,985 - #19 if
INFO  20:03:34,985 - #6 (
INFO  20:03:34,985 - #16 inc
INFO  20:03:34,985 - #22 ==
INFO  20:03:34,985 - #15 2
INFO  20:03:34,985 - #7 )
INFO  20:03:34,985 - #16 pom
INFO  20:03:34,985 - #13 =
INFO  20:03:34,985 - #16 a
INFO  20:03:34,985 - #5 ;
INFO  20:03:34,985 - #10 return
INFO  20:03:34,986 - #16 sum
INFO  20:03:34,986 - #6 (
INFO  20:03:34,986 - #16 a
INFO  20:03:34,986 - #8 ,
INFO  20:03:34,986 - #16 pom
INFO  20:03:34,986 - #7 )
INFO  20:03:34,987 - #5 ;
INFO  20:03:34,987 - #4 }
INFO  20:03:34,987 - #16 bool
INFO  20:03:34,988 - #16 verify
INFO  20:03:34,988 - #6 (
INFO  20:03:34,988 - #7 )
INFO  20:03:34,988 - #3 {
INFO  20:03:34,988 - #9 print
INFO  20:03:34,988 - #6 (
INFO  20:03:34,988 - #17 'v'
INFO  20:03:34,988 - #7 )
INFO  20:03:34,988 - #5 ;
INFO  20:03:34,988 - #10 return
INFO  20:03:34,988 - #18 false
INFO  20:03:34,988 - #5 ;
INFO  20:03:34,988 - #4 }
INFO  20:03:34,989 - #14 void
INFO  20:03:34,989 - #16 main
INFO  20:03:34,989 - #6 (
INFO  20:03:34,989 - #7 )
INFO  20:03:34,989 - #3 {
INFO  20:03:34,989 - #19 if
INFO  20:03:34,989 - #6 (
INFO  20:03:34,989 - #15 1
INFO  20:03:34,989 - #23 !=
INFO  20:03:34,989 - #15 1
INFO  20:03:34,989 - #7 )
INFO  20:03:34,989 - #9 print
INFO  20:03:34,989 - #6 (
INFO  20:03:34,990 - #12 -
INFO  20:03:34,990 - #15 6
INFO  20:03:34,990 - #7 )
INFO  20:03:34,990 - #5 ;
INFO  20:03:34,990 - #20 else
INFO  20:03:34,990 - #9 print
INFO  20:03:34,990 - #6 (
INFO  20:03:34,990 - #15 0
INFO  20:03:34,990 - #7 )
INFO  20:03:34,990 - #5 ;
INFO  20:03:34,990 - #16 ibool
INFO  20:03:34,990 - #13 =
INFO  20:03:34,990 - #18 false
INFO  20:03:34,990 - #5 ;
INFO  20:03:34,990 - #16 i
INFO  20:03:34,990 - #13 =
INFO  20:03:34,990 - #15 0
INFO  20:03:34,990 - #5 ;
INFO  20:03:34,990 - #34 do
INFO  20:03:34,990 - #3 {
INFO  20:03:34,991 - #19 if
INFO  20:03:34,991 - #6 (
INFO  20:03:34,991 - #16 i
INFO  20:03:34,991 - #22 ==
INFO  20:03:34,991 - #15 2
INFO  20:03:34,991 - #7 )
INFO  20:03:34,991 - #16 ibool
INFO  20:03:34,991 - #13 =
INFO  20:03:34,991 - #18 true
INFO  20:03:34,991 - #5 ;
INFO  20:03:34,991 - #16 i
INFO  20:03:34,991 - #46 ++
INFO  20:03:34,991 - #5 ;
INFO  20:03:34,991 - #4 }
INFO  20:03:34,991 - #35 while
INFO  20:03:34,992 - #6 (
INFO  20:03:34,992 - #16 i
INFO  20:03:34,992 - #26 <
INFO  20:03:34,992 - #15 5
INFO  20:03:34,992 - #7 )
INFO  20:03:34,992 - #5 ;
INFO  20:03:34,992 - #19 if
INFO  20:03:34,992 - #6 (
INFO  20:03:34,992 - #16 ibool
INFO  20:03:34,992 - #7 )
INFO  20:03:34,993 - #19 if
INFO  20:03:34,993 - #6 (
INFO  20:03:34,993 - #16 i
INFO  20:03:34,993 - #22 ==
INFO  20:03:34,993 - #15 5
INFO  20:03:34,993 - #7 )
INFO  20:03:34,993 - #9 print
INFO  20:03:34,993 - #6 (
INFO  20:03:34,993 - #15 1
INFO  20:03:34,993 - #7 )
INFO  20:03:34,993 - #5 ;
INFO  20:03:34,993 - #20 else
INFO  20:03:34,993 - #9 print
INFO  20:03:34,993 - #6 (
INFO  20:03:34,993 - #12 -
INFO  20:03:34,993 - #15 1
INFO  20:03:34,993 - #7 )
INFO  20:03:34,993 - #5 ;
INFO  20:03:34,993 - #16 t1
INFO  20:03:34,993 - #13 =
INFO  20:03:34,993 - #36 new
INFO  20:03:34,993 - #16 Test
INFO  20:03:34,993 - #5 ;
INFO  20:03:34,993 - #16 t1
INFO  20:03:34,993 - #43 .
INFO  20:03:34,993 - #16 a
INFO  20:03:34,993 - #13 =
INFO  20:03:34,994 - #15 2
INFO  20:03:34,994 - #5 ;
INFO  20:03:34,994 - #16 t1
INFO  20:03:34,994 - #43 .
INFO  20:03:34,994 - #16 niz
INFO  20:03:34,994 - #13 =
INFO  20:03:34,994 - #36 new
INFO  20:03:34,994 - #16 int
INFO  20:03:34,994 - #50 [
INFO  20:03:34,994 - #15 3
INFO  20:03:34,994 - #51 ]
INFO  20:03:34,994 - #5 ;
INFO  20:03:34,994 - #16 t1
INFO  20:03:34,994 - #43 .
INFO  20:03:34,994 - #16 niz
INFO  20:03:34,994 - #50 [
INFO  20:03:34,994 - #15 0
INFO  20:03:34,994 - #51 ]
INFO  20:03:34,994 - #13 =
INFO  20:03:34,994 - #15 1
INFO  20:03:34,994 - #28 *
INFO  20:03:34,994 - #16 t1
INFO  20:03:34,995 - #43 .
INFO  20:03:34,995 - #16 a
INFO  20:03:34,995 - #5 ;
INFO  20:03:34,995 - #16 t1
INFO  20:03:34,995 - #43 .
INFO  20:03:34,995 - #16 niz
INFO  20:03:34,995 - #50 [
INFO  20:03:34,995 - #15 1
INFO  20:03:34,995 - #51 ]
INFO  20:03:34,995 - #13 =
INFO  20:03:34,995 - #15 2
INFO  20:03:34,995 - #28 *
INFO  20:03:34,995 - #16 t1
INFO  20:03:34,995 - #43 .
INFO  20:03:34,996 - #16 a
INFO  20:03:34,996 - #5 ;
INFO  20:03:34,996 - #16 t1
INFO  20:03:34,996 - #43 .
INFO  20:03:34,996 - #16 niz
INFO  20:03:34,996 - #50 [
INFO  20:03:34,996 - #15 2
INFO  20:03:34,996 - #51 ]
INFO  20:03:34,996 - #13 =
INFO  20:03:34,996 - #16 sum
INFO  20:03:34,996 - #6 (
INFO  20:03:34,996 - #16 t1
INFO  20:03:34,996 - #43 .
INFO  20:03:34,996 - #16 niz
INFO  20:03:34,996 - #50 [
INFO  20:03:34,996 - #15 1
INFO  20:03:34,996 - #51 ]
INFO  20:03:34,996 - #8 ,
INFO  20:03:34,996 - #16 t1
INFO  20:03:34,996 - #43 .
INFO  20:03:34,996 - #16 niz
INFO  20:03:34,996 - #50 [
INFO  20:03:34,996 - #15 0
INFO  20:03:34,996 - #51 ]
INFO  20:03:34,996 - #7 )
INFO  20:03:34,997 - #28 *
INFO  20:03:34,997 - #16 t1
INFO  20:03:34,997 - #43 .
INFO  20:03:34,997 - #16 a
INFO  20:03:34,997 - #11 +
INFO  20:03:34,997 - #15 1
INFO  20:03:34,997 - #5 ;
INFO  20:03:34,997 - #19 if
INFO  20:03:34,997 - #6 (
INFO  20:03:34,997 - #16 verify
INFO  20:03:34,997 - #6 (
INFO  20:03:34,997 - #7 )
ERROR 20:03:34,997 - 
Sintaksna greska na liniji 61
INFO  20:03:34,997 - #45 ||
INFO  20:03:34,997 - #16 t1
INFO  20:03:34,997 - #43 .
INFO  20:03:34,998 - #16 niz
INFO  20:03:34,998 - #50 [
INFO  20:03:34,998 - #15 2
INFO  20:03:34,998 - #51 ]
INFO  20:03:34,998 - #22 ==
INFO  20:03:34,998 - #15 4
INFO  20:03:34,998 - #7 )
INFO  20:03:34,998 - #9 print
INFO  20:03:34,998 - #6 (
INFO  20:03:34,998 - #16 ord
ERROR 20:03:34,998 - Izvrsen oporavak do ) u liniji 61
INFO  20:03:34,998 - #6 (
INFO  20:03:34,998 - #17 'A'
INFO  20:03:34,998 - #7 )
INFO  20:03:34,998 - #7 )
INFO  20:03:34,998 - #5 ;
INFO  20:03:34,998 - #20 else
INFO  20:03:34,998 - #9 print
INFO  20:03:34,998 - #6 (
INFO  20:03:34,999 - #16 ord
INFO  20:03:34,999 - #6 (
INFO  20:03:34,999 - #17 'a'
INFO  20:03:34,999 - #7 )
INFO  20:03:34,999 - #7 )
INFO  20:03:34,999 - #5 ;
INFO  20:03:34,999 - #9 print
INFO  20:03:34,999 - #6 (
INFO  20:03:34,999 - #16 eol
INFO  20:03:34,999 - #7 )
INFO  20:03:34,999 - #5 ;
INFO  20:03:34,999 - #16 i
INFO  20:03:34,999 - #13 =
INFO  20:03:34,999 - #15 0
INFO  20:03:34,999 - #5 ;
INFO  20:03:34,999 - #34 do
INFO  20:03:34,999 - #3 {
INFO  20:03:34,999 - #19 if
INFO  20:03:34,999 - #6 (
INFO  20:03:34,999 - #16 i
INFO  20:03:34,999 - #22 ==
INFO  20:03:34,999 - #15 3
INFO  20:03:34,999 - #7 )
INFO  20:03:34,999 - #3 {
INFO  20:03:34,999 - #16 i
INFO  20:03:34,999 - #46 ++
INFO  20:03:34,999 - #5 ;
INFO  20:03:34,999 - #39 continue
INFO  20:03:34,999 - #5 ;
INFO  20:03:34,999 - #4 }
INFO  20:03:35,000 - #19 if
INFO  20:03:35,000 - #6 (
INFO  20:03:35,000 - #16 i
INFO  20:03:35,000 - #22 ==
INFO  20:03:35,000 - #15 4
INFO  20:03:35,000 - #7 )
INFO  20:03:35,000 - #31 break
INFO  20:03:35,000 - #5 ;
INFO  20:03:35,000 - #16 i
INFO  20:03:35,000 - #13 =
INFO  20:03:35,000 - #16 inkrement
INFO  20:03:35,000 - #6 (
INFO  20:03:35,000 - #16 i
INFO  20:03:35,000 - #8 ,
INFO  20:03:35,000 - #15 1
INFO  20:03:35,001 - #7 )
INFO  20:03:35,001 - #5 ;
INFO  20:03:35,001 - #4 }
INFO  20:03:35,001 - #35 while
INFO  20:03:35,001 - #6 (
INFO  20:03:35,001 - #16 i
INFO  20:03:35,001 - #26 <
INFO  20:03:35,001 - #15 10
INFO  20:03:35,001 - #7 )
INFO  20:03:35,001 - #5 ;
INFO  20:03:35,001 - #19 if
INFO  20:03:35,001 - #6 (
INFO  20:03:35,001 - #16 i
INFO  20:03:35,001 - #22 ==
INFO  20:03:35,001 - #15 3
INFO  20:03:35,001 - #44 &&
INFO  20:03:35,001 - #16 verify
INFO  20:03:35,001 - #6 (
INFO  20:03:35,001 - #7 )
ERROR 20:03:35,001 - 
Sintaksna greska na liniji 76
INFO  20:03:35,001 - #7 )
INFO  20:03:35,001 - #9 print
INFO  20:03:35,001 - #6 (
INFO  20:03:35,001 - #12 -
ERROR 20:03:35,001 - Izvrsen oporavak do ) u liniji 76
INFO  20:03:35,001 - #15 4
INFO  20:03:35,001 - #7 )
INFO  20:03:35,001 - #5 ;
INFO  20:03:35,001 - #20 else
INFO  20:03:35,001 - #9 print
INFO  20:03:35,001 - #6 (
INFO  20:03:35,001 - #15 4
INFO  20:03:35,001 - #7 )
INFO  20:03:35,001 - #5 ;
INFO  20:03:35,001 - #37 read
INFO  20:03:35,001 - #6 (
INFO  20:03:35,001 - #16 t1
INFO  20:03:35,001 - #43 .
INFO  20:03:35,001 - #16 niz
INFO  20:03:35,001 - #50 [
INFO  20:03:35,001 - #15 0
INFO  20:03:35,001 - #51 ]
INFO  20:03:35,002 - #7 )
INFO  20:03:35,002 - #5 ;
INFO  20:03:35,002 - #37 read
INFO  20:03:35,002 - #6 (
INFO  20:03:35,002 - #16 t1
INFO  20:03:35,002 - #43 .
INFO  20:03:35,002 - #16 niz
INFO  20:03:35,002 - #50 [
INFO  20:03:35,002 - #15 1
INFO  20:03:35,002 - #51 ]
INFO  20:03:35,002 - #7 )
INFO  20:03:35,002 - #5 ;
INFO  20:03:35,002 - #37 read
INFO  20:03:35,002 - #6 (
INFO  20:03:35,002 - #16 t1
INFO  20:03:35,002 - #43 .
INFO  20:03:35,002 - #16 niz
INFO  20:03:35,002 - #50 [
INFO  20:03:35,002 - #15 2
INFO  20:03:35,002 - #51 ]
INFO  20:03:35,002 - #7 )
INFO  20:03:35,002 - #5 ;
INFO  20:03:35,002 - #9 print
INFO  20:03:35,002 - #6 (
INFO  20:03:35,002 - #16 eol
INFO  20:03:35,003 - #7 )
INFO  20:03:35,003 - #5 ;
INFO  20:03:35,003 - #9 print
INFO  20:03:35,003 - #6 (
INFO  20:03:35,003 - #16 sum
INFO  20:03:35,003 - #6 (
INFO  20:03:35,003 - #16 sum
INFO  20:03:35,003 - #6 (
INFO  20:03:35,003 - #16 t1
INFO  20:03:35,003 - #43 .
INFO  20:03:35,003 - #16 niz
INFO  20:03:35,003 - #50 [
INFO  20:03:35,003 - #15 0
INFO  20:03:35,003 - #51 ]
INFO  20:03:35,003 - #8 ,
INFO  20:03:35,003 - #16 t1
INFO  20:03:35,003 - #43 .
INFO  20:03:35,003 - #16 niz
INFO  20:03:35,003 - #50 [
INFO  20:03:35,003 - #15 1
INFO  20:03:35,003 - #51 ]
INFO  20:03:35,003 - #7 )
INFO  20:03:35,003 - #8 ,
INFO  20:03:35,003 - #16 t1
INFO  20:03:35,003 - #43 .
INFO  20:03:35,003 - #16 niz
INFO  20:03:35,003 - #50 [
INFO  20:03:35,003 - #15 2
INFO  20:03:35,003 - #51 ]
INFO  20:03:35,003 - #7 )
INFO  20:03:35,003 - #7 )
INFO  20:03:35,003 - #5 ;
INFO  20:03:35,003 - #9 print
INFO  20:03:35,004 - #6 (
INFO  20:03:35,004 - #16 eol
INFO  20:03:35,004 - #7 )
INFO  20:03:35,004 - #5 ;
INFO  20:03:35,004 - #9 print
INFO  20:03:35,004 - #6 (
INFO  20:03:35,004 - #16 inkrement
INFO  20:03:35,004 - #6 (
INFO  20:03:35,004 - #16 t1
INFO  20:03:35,004 - #43 .
INFO  20:03:35,004 - #16 niz
INFO  20:03:35,004 - #50 [
INFO  20:03:35,004 - #15 2
INFO  20:03:35,004 - #51 ]
INFO  20:03:35,004 - #8 ,
INFO  20:03:35,004 - #15 2
INFO  20:03:35,004 - #7 )
INFO  20:03:35,004 - #7 )
INFO  20:03:35,004 - #5 ;
INFO  20:03:35,004 - #16 t2
INFO  20:03:35,004 - #13 =
INFO  20:03:35,004 - #36 new
INFO  20:03:35,004 - #16 Test
INFO  20:03:35,004 - #5 ;
INFO  20:03:35,004 - #16 t2
INFO  20:03:35,004 - #43 .
INFO  20:03:35,004 - #16 a
INFO  20:03:35,004 - #13 =
INFO  20:03:35,004 - #15 3
INFO  20:03:35,004 - #5 ;
INFO  20:03:35,004 - #16 t2
INFO  20:03:35,004 - #43 .
INFO  20:03:35,004 - #16 niz
INFO  20:03:35,004 - #13 =
INFO  20:03:35,004 - #36 new
INFO  20:03:35,004 - #16 int
INFO  20:03:35,004 - #50 [
INFO  20:03:35,004 - #15 3
INFO  20:03:35,004 - #51 ]
INFO  20:03:35,004 - #5 ;
INFO  20:03:35,004 - #16 i
INFO  20:03:35,005 - #13 =
INFO  20:03:35,005 - #15 0
INFO  20:03:35,005 - #5 ;
INFO  20:03:35,005 - #34 do
INFO  20:03:35,005 - #3 {
INFO  20:03:35,007 - #16 t2
INFO  20:03:35,007 - #43 .
INFO  20:03:35,007 - #16 niz
INFO  20:03:35,007 - #50 [
INFO  20:03:35,007 - #16 i
INFO  20:03:35,007 - #51 ]
INFO  20:03:35,007 - #13 =
INFO  20:03:35,007 - #16 t1
INFO  20:03:35,007 - #43 .
INFO  20:03:35,007 - #16 niz
INFO  20:03:35,007 - #50 [
INFO  20:03:35,007 - #16 i
INFO  20:03:35,007 - #51 ]
INFO  20:03:35,007 - #28 *
INFO  20:03:35,007 - #15 2
INFO  20:03:35,008 - #28 *
INFO  20:03:35,008 - #16 t2
INFO  20:03:35,008 - #43 .
INFO  20:03:35,008 - #16 a
INFO  20:03:35,008 - #5 ;
INFO  20:03:35,008 - #16 i
INFO  20:03:35,008 - #46 ++
INFO  20:03:35,008 - #5 ;
INFO  20:03:35,008 - #4 }
INFO  20:03:35,008 - #35 while
INFO  20:03:35,008 - #6 (
INFO  20:03:35,008 - #16 i
INFO  20:03:35,008 - #26 <
INFO  20:03:35,008 - #15 3
INFO  20:03:35,008 - #7 )
INFO  20:03:35,008 - #5 ;
INFO  20:03:35,009 - #9 print
INFO  20:03:35,009 - #6 (
INFO  20:03:35,009 - #16 t2
INFO  20:03:35,009 - #43 .
INFO  20:03:35,009 - #16 niz
INFO  20:03:35,009 - #50 [
INFO  20:03:35,009 - #15 0
INFO  20:03:35,009 - #51 ]
INFO  20:03:35,009 - #7 )
INFO  20:03:35,009 - #5 ;
INFO  20:03:35,009 - #9 print
INFO  20:03:35,009 - #6 (
INFO  20:03:35,009 - #16 t2
INFO  20:03:35,009 - #43 .
INFO  20:03:35,009 - #16 niz
INFO  20:03:35,009 - #50 [
INFO  20:03:35,009 - #15 1
INFO  20:03:35,009 - #51 ]
INFO  20:03:35,009 - #7 )
INFO  20:03:35,010 - #5 ;
INFO  20:03:35,010 - #9 print
INFO  20:03:35,010 - #6 (
INFO  20:03:35,010 - #16 t2
INFO  20:03:35,010 - #43 .
INFO  20:03:35,010 - #16 niz
INFO  20:03:35,010 - #50 [
INFO  20:03:35,010 - #15 2
INFO  20:03:35,010 - #51 ]
INFO  20:03:35,010 - #7 )
INFO  20:03:35,010 - #5 ;
INFO  20:03:35,010 - #9 print
INFO  20:03:35,010 - #6 (
INFO  20:03:35,010 - #16 eol
INFO  20:03:35,010 - #7 )
INFO  20:03:35,010 - #5 ;
INFO  20:03:35,010 - #16 i
INFO  20:03:35,010 - #13 =
INFO  20:03:35,010 - #15 0
INFO  20:03:35,010 - #5 ;
INFO  20:03:35,010 - #16 niz2
INFO  20:03:35,010 - #13 =
INFO  20:03:35,010 - #15 0
INFO  20:03:35,010 - #5 ;
INFO  20:03:35,010 - #34 do
INFO  20:03:35,010 - #3 {
INFO  20:03:35,010 - #16 niz2
INFO  20:03:35,010 - #13 =
INFO  20:03:35,010 - #16 niz2
INFO  20:03:35,010 - #11 +
INFO  20:03:35,010 - #16 t1
INFO  20:03:35,010 - #43 .
INFO  20:03:35,010 - #16 niz
INFO  20:03:35,010 - #50 [
INFO  20:03:35,010 - #16 i
INFO  20:03:35,010 - #51 ]
INFO  20:03:35,010 - #28 *
INFO  20:03:35,010 - #16 t2
INFO  20:03:35,010 - #43 .
INFO  20:03:35,010 - #16 niz
INFO  20:03:35,010 - #50 [
INFO  20:03:35,010 - #16 i
INFO  20:03:35,010 - #51 ]
INFO  20:03:35,010 - #5 ;
INFO  20:03:35,010 - #16 i
INFO  20:03:35,010 - #46 ++
INFO  20:03:35,010 - #5 ;
INFO  20:03:35,010 - #4 }
INFO  20:03:35,010 - #35 while
INFO  20:03:35,010 - #6 (
INFO  20:03:35,010 - #16 i
INFO  20:03:35,010 - #26 <
INFO  20:03:35,010 - #15 3
INFO  20:03:35,010 - #7 )
INFO  20:03:35,010 - #5 ;
INFO  20:03:35,010 - #9 print
INFO  20:03:35,010 - #6 (
INFO  20:03:35,010 - #16 niz2
INFO  20:03:35,010 - #7 )
INFO  20:03:35,010 - #5 ;
INFO  20:03:35,010 - #9 print
INFO  20:03:35,010 - #6 (
INFO  20:03:35,010 - #16 eol
INFO  20:03:35,010 - #7 )
INFO  20:03:35,011 - #5 ;
INFO  20:03:35,011 - #4 }
INFO  20:03:35,011 - #4 }
INFO  20:03:35,018 - Trenutan tip konstante je:  int na liniji 5
INFO  20:03:35,018 - Deklarisana promenljiva i na liniji 7
INFO  20:03:35,018 - Deklarisana promenljiva ibool na liniji 8
INFO  20:03:35,018 - Deklarisana promenljiva niz2 na liniji 10
INFO  20:03:35,018 - Deklarisana promenljiva niz na liniji 13
INFO  20:03:35,018 - Deklarisana promenljiva a na liniji 14
INFO  20:03:35,018 - Deklarisana je rekord :  Test na liniji 12
INFO  20:03:35,018 - Deklarisana promenljiva t2 na liniji 17
INFO  20:03:35,018 - Deklarisana promenljiva t1 na liniji 17
INFO  20:03:35,018 - Obradjuje se funkcija sum na liniji 21
INFO  20:03:35,018 - Naveden argument d na liniji 21
INFO  20:03:35,018 - Naveden argument z na liniji 21
INFO  20:03:35,018 - Obradjuje se funkcija inkrement na liniji 26
INFO  20:03:35,018 - Naveden argument inc na liniji 26
INFO  20:03:35,018 - Naveden argument a na liniji 26
INFO  20:03:35,018 - Deklarisana promenljiva pom na liniji 27
INFO  20:03:35,018 - Obradjuje se funkcija verify na liniji 35
INFO  20:03:35,018 - Obradjuje se funkcija main na liniji 40
ERROR 20:03:35,019 - Semanticka greska na liniji 56 nekompatibilni tipovi prilikom dodele!
ERROR 20:03:35,019 - Semanticka greska na liniji 57 nekompatibilni tipovi prilikom dodele!
ERROR 20:03:35,019 - Semanticka greska na liniji 58 nekompatibilni tipovi prilikom dodele!
ERROR 20:03:35,019 - Semanticka greska na liniji 59 nekompatibilni tipovi prilikom dodele!
ERROR 20:03:35,019 - Semanticka greska na liniji 60 nekompatibilni tipovi prilikom dodele!
ERROR 20:03:35,019 - Semanticka greska na liniji 61 print prima samo num, char ili bool!
ERROR 20:03:35,019 - Semanticka greska na liniji 62 print prima samo num, char ili bool!
ERROR 20:03:35,019 - Semanticka greska na liniji 79  t1 mora biti int, char ili bool!
ERROR 20:03:35,019 - Semanticka greska na liniji 80  t1 mora biti int, char ili bool!
ERROR 20:03:35,019 - Semanticka greska na liniji 81  t1 mora biti int, char ili bool!
ERROR 20:03:35,019 - Semanticka greska na liniji 84 print prima samo num, char ili bool!
ERROR 20:03:35,019 - Semanticka greska na liniji 87 print prima samo num, char ili bool!
ERROR 20:03:35,019 - Semanticka greska na liniji 90 nekompatibilni tipovi prilikom dodele!
ERROR 20:03:35,019 - Semanticka greska na liniji 91 nekompatibilni tipovi prilikom dodele!
ERROR 20:03:35,019 - Semanticka greska na liniji 97  t2 mora biti int, char ili bool!
ERROR 20:03:35,019 - Semanticka greska na liniji 98  t2 mora biti int, char ili bool!
ERROR 20:03:35,019 - Semanticka greska na liniji 99  t2 mora biti int, char ili bool!
ERROR 20:03:35,019 - Semanticka greska na liniji 105 nekompatibilni tipovi za aritmeticku operaciju!
ERROR 20:03:35,019 - Semanticka greska na liniji 105 nekompatibilni tipovi prilikom dodele!
ERROR 20:03:35,020 - Parsiranje NIJE uspesno zavrseno!
