INFO  20:04:04,943 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  20:04:04,977 - #2 program
INFO  20:04:04,977 - #16 test302
INFO  20:04:04,977 - #48 const
INFO  20:04:04,978 - #16 int
INFO  20:04:04,978 - #16 jedan
INFO  20:04:04,978 - #13 =
INFO  20:04:04,978 - #15 1
INFO  20:04:04,978 - #5 ;
INFO  20:04:04,979 - #16 int
INFO  20:04:04,979 - #16 i
INFO  20:04:04,979 - #5 ;
INFO  20:04:04,980 - #16 bool
INFO  20:04:04,980 - #16 ibool
INFO  20:04:04,980 - #5 ;
INFO  20:04:04,980 - #16 int
INFO  20:04:04,980 - #16 niz2
INFO  20:04:04,980 - #5 ;
INFO  20:04:04,980 - #49 record
INFO  20:04:04,980 - #16 Test
INFO  20:04:04,980 - #3 {
INFO  20:04:04,980 - #16 int
INFO  20:04:04,981 - #16 niz
INFO  20:04:04,986 - #50 [
INFO  20:04:04,986 - #51 ]
INFO  20:04:04,986 - #5 ;
INFO  20:04:04,986 - #16 int
INFO  20:04:04,986 - #16 a
INFO  20:04:04,986 - #5 ;
INFO  20:04:04,986 - #4 }
INFO  20:04:04,987 - #16 Test
INFO  20:04:04,987 - #16 t1
INFO  20:04:04,987 - #8 ,
INFO  20:04:04,987 - #16 t2
INFO  20:04:04,987 - #5 ;
INFO  20:04:04,987 - #3 {
INFO  20:04:04,988 - #16 int
INFO  20:04:04,988 - #16 sum
INFO  20:04:04,988 - #6 (
INFO  20:04:04,989 - #16 int
INFO  20:04:04,989 - #16 z
INFO  20:04:04,989 - #8 ,
INFO  20:04:04,989 - #16 int
INFO  20:04:04,989 - #16 d
INFO  20:04:04,989 - #7 )
INFO  20:04:04,990 - #3 {
INFO  20:04:04,990 - #10 return
INFO  20:04:04,990 - #16 z
INFO  20:04:04,991 - #11 +
INFO  20:04:04,992 - #16 d
INFO  20:04:04,992 - #5 ;
INFO  20:04:04,993 - #4 }
INFO  20:04:04,993 - #16 int
INFO  20:04:04,993 - #16 inkrement
INFO  20:04:04,993 - #6 (
INFO  20:04:04,993 - #16 int
INFO  20:04:04,993 - #16 a
INFO  20:04:04,993 - #8 ,
INFO  20:04:04,993 - #16 int
INFO  20:04:04,994 - #16 inc
INFO  20:04:04,994 - #7 )
INFO  20:04:04,994 - #16 int
INFO  20:04:04,994 - #16 pom
INFO  20:04:04,994 - #5 ;
INFO  20:04:04,994 - #3 {
INFO  20:04:04,994 - #19 if
INFO  20:04:04,994 - #6 (
INFO  20:04:04,994 - #16 inc
INFO  20:04:04,994 - #22 ==
INFO  20:04:04,998 - #16 jedan
INFO  20:04:04,998 - #7 )
INFO  20:04:05,000 - #16 pom
INFO  20:04:05,000 - #13 =
INFO  20:04:05,000 - #15 1
INFO  20:04:05,000 - #5 ;
INFO  20:04:05,001 - #20 else
INFO  20:04:05,001 - #19 if
INFO  20:04:05,001 - #6 (
INFO  20:04:05,001 - #16 inc
INFO  20:04:05,001 - #22 ==
INFO  20:04:05,001 - #15 2
INFO  20:04:05,001 - #7 )
INFO  20:04:05,001 - #16 pom
INFO  20:04:05,001 - #13 =
INFO  20:04:05,001 - #16 a
INFO  20:04:05,001 - #5 ;
INFO  20:04:05,001 - #10 return
INFO  20:04:05,002 - #16 sum
INFO  20:04:05,002 - #6 (
INFO  20:04:05,002 - #16 a
INFO  20:04:05,002 - #8 ,
INFO  20:04:05,002 - #16 pom
INFO  20:04:05,002 - #7 )
INFO  20:04:05,003 - #5 ;
INFO  20:04:05,003 - #4 }
INFO  20:04:05,003 - #16 bool
INFO  20:04:05,003 - #16 verify
INFO  20:04:05,003 - #6 (
INFO  20:04:05,004 - #7 )
INFO  20:04:05,004 - #3 {
INFO  20:04:05,004 - #9 print
INFO  20:04:05,004 - #6 (
INFO  20:04:05,004 - #17 'v'
INFO  20:04:05,004 - #7 )
INFO  20:04:05,004 - #5 ;
INFO  20:04:05,004 - #10 return
INFO  20:04:05,004 - #18 false
INFO  20:04:05,004 - #5 ;
INFO  20:04:05,004 - #4 }
INFO  20:04:05,004 - #14 void
INFO  20:04:05,005 - #16 main
INFO  20:04:05,005 - #6 (
INFO  20:04:05,005 - #7 )
INFO  20:04:05,005 - #3 {
INFO  20:04:05,005 - #19 if
INFO  20:04:05,005 - #6 (
INFO  20:04:05,005 - #15 1
INFO  20:04:05,005 - #23 !=
INFO  20:04:05,006 - #15 1
INFO  20:04:05,006 - #7 )
INFO  20:04:05,006 - #9 print
INFO  20:04:05,006 - #6 (
INFO  20:04:05,006 - #12 -
INFO  20:04:05,006 - #15 6
INFO  20:04:05,006 - #7 )
INFO  20:04:05,006 - #5 ;
INFO  20:04:05,006 - #20 else
INFO  20:04:05,007 - #9 print
INFO  20:04:05,007 - #6 (
INFO  20:04:05,007 - #15 0
INFO  20:04:05,007 - #7 )
INFO  20:04:05,007 - #5 ;
INFO  20:04:05,007 - #16 ibool
INFO  20:04:05,007 - #13 =
INFO  20:04:05,007 - #18 false
INFO  20:04:05,007 - #5 ;
INFO  20:04:05,007 - #16 i
INFO  20:04:05,007 - #13 =
INFO  20:04:05,007 - #15 0
INFO  20:04:05,007 - #5 ;
INFO  20:04:05,007 - #34 do
INFO  20:04:05,007 - #3 {
INFO  20:04:05,008 - #19 if
INFO  20:04:05,008 - #6 (
INFO  20:04:05,008 - #16 i
INFO  20:04:05,008 - #22 ==
INFO  20:04:05,008 - #15 2
INFO  20:04:05,008 - #7 )
INFO  20:04:05,008 - #16 ibool
INFO  20:04:05,008 - #13 =
INFO  20:04:05,008 - #18 true
INFO  20:04:05,008 - #5 ;
INFO  20:04:05,008 - #16 i
INFO  20:04:05,008 - #46 ++
INFO  20:04:05,008 - #5 ;
INFO  20:04:05,008 - #4 }
INFO  20:04:05,008 - #35 while
INFO  20:04:05,009 - #6 (
INFO  20:04:05,009 - #16 i
INFO  20:04:05,009 - #26 <
INFO  20:04:05,009 - #15 5
INFO  20:04:05,009 - #7 )
INFO  20:04:05,009 - #5 ;
INFO  20:04:05,009 - #19 if
INFO  20:04:05,010 - #6 (
INFO  20:04:05,010 - #16 ibool
INFO  20:04:05,010 - #7 )
INFO  20:04:05,010 - #19 if
INFO  20:04:05,010 - #6 (
INFO  20:04:05,010 - #16 i
INFO  20:04:05,010 - #22 ==
INFO  20:04:05,010 - #15 5
INFO  20:04:05,010 - #7 )
INFO  20:04:05,010 - #9 print
INFO  20:04:05,010 - #6 (
INFO  20:04:05,010 - #15 1
INFO  20:04:05,010 - #7 )
INFO  20:04:05,010 - #5 ;
INFO  20:04:05,010 - #20 else
INFO  20:04:05,010 - #9 print
INFO  20:04:05,010 - #6 (
INFO  20:04:05,010 - #12 -
INFO  20:04:05,010 - #15 1
INFO  20:04:05,010 - #7 )
INFO  20:04:05,010 - #5 ;
INFO  20:04:05,011 - #16 t1
INFO  20:04:05,011 - #13 =
INFO  20:04:05,011 - #36 new
INFO  20:04:05,011 - #16 Test
INFO  20:04:05,011 - #5 ;
INFO  20:04:05,011 - #16 t1
INFO  20:04:05,011 - #43 .
INFO  20:04:05,011 - #16 a
INFO  20:04:05,011 - #13 =
INFO  20:04:05,011 - #15 2
INFO  20:04:05,011 - #5 ;
INFO  20:04:05,011 - #16 t1
INFO  20:04:05,011 - #43 .
INFO  20:04:05,011 - #16 niz
INFO  20:04:05,011 - #13 =
INFO  20:04:05,011 - #36 new
INFO  20:04:05,011 - #16 int
INFO  20:04:05,011 - #50 [
INFO  20:04:05,011 - #15 3
INFO  20:04:05,011 - #51 ]
INFO  20:04:05,011 - #5 ;
INFO  20:04:05,011 - #16 t1
INFO  20:04:05,011 - #43 .
INFO  20:04:05,011 - #16 niz
INFO  20:04:05,012 - #50 [
INFO  20:04:05,012 - #15 0
INFO  20:04:05,012 - #51 ]
INFO  20:04:05,012 - #13 =
INFO  20:04:05,012 - #15 1
INFO  20:04:05,012 - #28 *
INFO  20:04:05,012 - #16 t1
INFO  20:04:05,012 - #43 .
INFO  20:04:05,012 - #16 a
INFO  20:04:05,012 - #5 ;
INFO  20:04:05,013 - #16 t1
INFO  20:04:05,013 - #43 .
INFO  20:04:05,013 - #16 niz
INFO  20:04:05,013 - #50 [
INFO  20:04:05,013 - #15 1
INFO  20:04:05,013 - #51 ]
INFO  20:04:05,013 - #13 =
INFO  20:04:05,013 - #15 2
INFO  20:04:05,013 - #28 *
INFO  20:04:05,013 - #16 t1
INFO  20:04:05,013 - #43 .
INFO  20:04:05,013 - #16 a
INFO  20:04:05,013 - #5 ;
INFO  20:04:05,013 - #16 t1
INFO  20:04:05,013 - #43 .
INFO  20:04:05,013 - #16 niz
INFO  20:04:05,013 - #50 [
INFO  20:04:05,013 - #15 2
INFO  20:04:05,013 - #51 ]
INFO  20:04:05,013 - #13 =
INFO  20:04:05,013 - #16 sum
INFO  20:04:05,013 - #6 (
INFO  20:04:05,013 - #16 t1
INFO  20:04:05,013 - #43 .
INFO  20:04:05,013 - #16 niz
INFO  20:04:05,013 - #50 [
INFO  20:04:05,013 - #15 1
INFO  20:04:05,013 - #51 ]
INFO  20:04:05,013 - #8 ,
INFO  20:04:05,013 - #16 t1
INFO  20:04:05,013 - #43 .
INFO  20:04:05,014 - #16 niz
INFO  20:04:05,014 - #50 [
INFO  20:04:05,014 - #15 0
INFO  20:04:05,014 - #51 ]
INFO  20:04:05,014 - #7 )
INFO  20:04:05,014 - #28 *
INFO  20:04:05,014 - #16 t1
INFO  20:04:05,014 - #43 .
INFO  20:04:05,014 - #16 a
INFO  20:04:05,014 - #11 +
INFO  20:04:05,014 - #15 1
INFO  20:04:05,014 - #5 ;
INFO  20:04:05,014 - #19 if
INFO  20:04:05,014 - #6 (
INFO  20:04:05,014 - #16 verify
INFO  20:04:05,014 - #6 (
INFO  20:04:05,014 - #7 )
ERROR 20:04:05,014 - 
Sintaksna greska na liniji 61
INFO  20:04:05,015 - #7 )
INFO  20:04:05,015 - #9 print
INFO  20:04:05,015 - #6 (
INFO  20:04:05,016 - #16 ord
ERROR 20:04:05,016 - Izvrsen oporavak do ) u liniji 61
INFO  20:04:05,016 - #6 (
INFO  20:04:05,016 - #17 'A'
INFO  20:04:05,016 - #7 )
INFO  20:04:05,016 - #7 )
INFO  20:04:05,016 - #5 ;
INFO  20:04:05,016 - #20 else
INFO  20:04:05,016 - #9 print
INFO  20:04:05,016 - #6 (
INFO  20:04:05,016 - #16 ord
INFO  20:04:05,016 - #6 (
INFO  20:04:05,017 - #17 'a'
INFO  20:04:05,017 - #7 )
INFO  20:04:05,017 - #7 )
INFO  20:04:05,017 - #5 ;
INFO  20:04:05,017 - #9 print
INFO  20:04:05,017 - #6 (
INFO  20:04:05,017 - #16 eol
INFO  20:04:05,017 - #7 )
INFO  20:04:05,017 - #5 ;
INFO  20:04:05,017 - #16 i
INFO  20:04:05,017 - #13 =
INFO  20:04:05,017 - #15 0
INFO  20:04:05,017 - #5 ;
INFO  20:04:05,017 - #34 do
INFO  20:04:05,017 - #3 {
INFO  20:04:05,017 - #19 if
INFO  20:04:05,017 - #6 (
INFO  20:04:05,017 - #16 i
INFO  20:04:05,017 - #22 ==
INFO  20:04:05,017 - #15 3
INFO  20:04:05,017 - #7 )
INFO  20:04:05,017 - #3 {
INFO  20:04:05,017 - #16 i
INFO  20:04:05,017 - #46 ++
INFO  20:04:05,017 - #5 ;
INFO  20:04:05,017 - #39 continue
INFO  20:04:05,017 - #5 ;
INFO  20:04:05,017 - #4 }
INFO  20:04:05,018 - #19 if
INFO  20:04:05,018 - #6 (
INFO  20:04:05,018 - #16 i
INFO  20:04:05,018 - #22 ==
INFO  20:04:05,018 - #15 4
INFO  20:04:05,018 - #7 )
INFO  20:04:05,018 - #31 break
INFO  20:04:05,018 - #5 ;
INFO  20:04:05,018 - #16 i
INFO  20:04:05,018 - #13 =
INFO  20:04:05,018 - #16 inkrement
INFO  20:04:05,018 - #6 (
INFO  20:04:05,018 - #16 i
INFO  20:04:05,018 - #8 ,
INFO  20:04:05,018 - #15 1
INFO  20:04:05,018 - #7 )
INFO  20:04:05,018 - #5 ;
INFO  20:04:05,018 - #4 }
INFO  20:04:05,018 - #35 while
INFO  20:04:05,019 - #6 (
INFO  20:04:05,019 - #16 i
INFO  20:04:05,019 - #26 <
INFO  20:04:05,019 - #15 10
INFO  20:04:05,019 - #7 )
INFO  20:04:05,019 - #5 ;
INFO  20:04:05,019 - #19 if
INFO  20:04:05,019 - #6 (
INFO  20:04:05,019 - #16 i
INFO  20:04:05,019 - #22 ==
INFO  20:04:05,019 - #15 3
INFO  20:04:05,019 - #44 &&
INFO  20:04:05,019 - #16 verify
INFO  20:04:05,019 - #6 (
INFO  20:04:05,019 - #7 )
ERROR 20:04:05,019 - 
Sintaksna greska na liniji 76
INFO  20:04:05,019 - #7 )
INFO  20:04:05,019 - #9 print
INFO  20:04:05,019 - #6 (
INFO  20:04:05,019 - #12 -
ERROR 20:04:05,019 - Izvrsen oporavak do ) u liniji 76
INFO  20:04:05,019 - #15 4
INFO  20:04:05,019 - #7 )
INFO  20:04:05,019 - #5 ;
INFO  20:04:05,019 - #20 else
INFO  20:04:05,019 - #9 print
INFO  20:04:05,019 - #6 (
INFO  20:04:05,019 - #15 4
INFO  20:04:05,019 - #7 )
INFO  20:04:05,019 - #5 ;
INFO  20:04:05,019 - #37 read
INFO  20:04:05,019 - #6 (
INFO  20:04:05,019 - #16 t1
INFO  20:04:05,019 - #43 .
INFO  20:04:05,019 - #16 niz
INFO  20:04:05,019 - #50 [
INFO  20:04:05,019 - #15 0
INFO  20:04:05,019 - #51 ]
INFO  20:04:05,019 - #7 )
INFO  20:04:05,019 - #5 ;
INFO  20:04:05,019 - #37 read
INFO  20:04:05,020 - #6 (
INFO  20:04:05,020 - #16 t1
INFO  20:04:05,020 - #43 .
INFO  20:04:05,020 - #16 niz
INFO  20:04:05,020 - #50 [
INFO  20:04:05,020 - #15 1
INFO  20:04:05,020 - #51 ]
INFO  20:04:05,020 - #7 )
INFO  20:04:05,020 - #5 ;
INFO  20:04:05,020 - #37 read
INFO  20:04:05,020 - #6 (
INFO  20:04:05,020 - #16 t1
INFO  20:04:05,020 - #43 .
INFO  20:04:05,020 - #16 niz
INFO  20:04:05,020 - #50 [
INFO  20:04:05,020 - #15 2
INFO  20:04:05,020 - #51 ]
INFO  20:04:05,020 - #7 )
INFO  20:04:05,020 - #5 ;
INFO  20:04:05,020 - #9 print
INFO  20:04:05,020 - #6 (
INFO  20:04:05,020 - #16 eol
INFO  20:04:05,020 - #7 )
INFO  20:04:05,020 - #5 ;
INFO  20:04:05,020 - #9 print
INFO  20:04:05,020 - #6 (
INFO  20:04:05,020 - #16 sum
INFO  20:04:05,020 - #6 (
INFO  20:04:05,020 - #16 sum
INFO  20:04:05,020 - #6 (
INFO  20:04:05,020 - #16 t1
INFO  20:04:05,020 - #43 .
INFO  20:04:05,020 - #16 niz
INFO  20:04:05,020 - #50 [
INFO  20:04:05,020 - #15 0
INFO  20:04:05,020 - #51 ]
INFO  20:04:05,020 - #8 ,
INFO  20:04:05,020 - #16 t1
INFO  20:04:05,020 - #43 .
INFO  20:04:05,020 - #16 niz
INFO  20:04:05,020 - #50 [
INFO  20:04:05,020 - #15 1
INFO  20:04:05,020 - #51 ]
INFO  20:04:05,021 - #7 )
INFO  20:04:05,021 - #8 ,
INFO  20:04:05,021 - #16 t1
INFO  20:04:05,021 - #43 .
INFO  20:04:05,021 - #16 niz
INFO  20:04:05,021 - #50 [
INFO  20:04:05,021 - #15 2
INFO  20:04:05,021 - #51 ]
INFO  20:04:05,021 - #7 )
INFO  20:04:05,021 - #7 )
INFO  20:04:05,021 - #5 ;
INFO  20:04:05,021 - #9 print
INFO  20:04:05,021 - #6 (
INFO  20:04:05,021 - #16 eol
INFO  20:04:05,021 - #7 )
INFO  20:04:05,021 - #5 ;
INFO  20:04:05,021 - #9 print
INFO  20:04:05,021 - #6 (
INFO  20:04:05,021 - #16 inkrement
INFO  20:04:05,021 - #6 (
INFO  20:04:05,021 - #16 t1
INFO  20:04:05,021 - #43 .
INFO  20:04:05,021 - #16 niz
INFO  20:04:05,021 - #50 [
INFO  20:04:05,021 - #15 2
INFO  20:04:05,021 - #51 ]
INFO  20:04:05,021 - #8 ,
INFO  20:04:05,021 - #15 2
INFO  20:04:05,021 - #7 )
INFO  20:04:05,021 - #7 )
INFO  20:04:05,021 - #5 ;
INFO  20:04:05,021 - #16 t2
INFO  20:04:05,021 - #13 =
INFO  20:04:05,021 - #36 new
INFO  20:04:05,021 - #16 Test
INFO  20:04:05,021 - #5 ;
INFO  20:04:05,021 - #16 t2
INFO  20:04:05,021 - #43 .
INFO  20:04:05,021 - #16 a
INFO  20:04:05,021 - #13 =
INFO  20:04:05,021 - #15 3
INFO  20:04:05,021 - #5 ;
INFO  20:04:05,021 - #16 t2
INFO  20:04:05,021 - #43 .
INFO  20:04:05,021 - #16 niz
INFO  20:04:05,022 - #13 =
INFO  20:04:05,022 - #36 new
INFO  20:04:05,022 - #16 int
INFO  20:04:05,022 - #50 [
INFO  20:04:05,022 - #15 3
INFO  20:04:05,022 - #51 ]
INFO  20:04:05,022 - #5 ;
INFO  20:04:05,022 - #16 i
INFO  20:04:05,022 - #13 =
INFO  20:04:05,022 - #15 0
INFO  20:04:05,022 - #5 ;
INFO  20:04:05,022 - #34 do
INFO  20:04:05,022 - #3 {
INFO  20:04:05,022 - #16 t2
INFO  20:04:05,022 - #43 .
INFO  20:04:05,022 - #16 niz
INFO  20:04:05,022 - #50 [
INFO  20:04:05,022 - #16 i
INFO  20:04:05,022 - #51 ]
INFO  20:04:05,022 - #13 =
INFO  20:04:05,022 - #16 t1
INFO  20:04:05,022 - #43 .
INFO  20:04:05,023 - #16 niz
INFO  20:04:05,023 - #50 [
INFO  20:04:05,023 - #16 i
INFO  20:04:05,023 - #51 ]
INFO  20:04:05,023 - #28 *
INFO  20:04:05,023 - #15 2
INFO  20:04:05,023 - #28 *
INFO  20:04:05,023 - #16 t2
INFO  20:04:05,023 - #43 .
INFO  20:04:05,023 - #16 a
INFO  20:04:05,023 - #5 ;
INFO  20:04:05,025 - #16 i
INFO  20:04:05,025 - #46 ++
INFO  20:04:05,025 - #5 ;
INFO  20:04:05,025 - #4 }
INFO  20:04:05,025 - #35 while
INFO  20:04:05,025 - #6 (
INFO  20:04:05,025 - #16 i
INFO  20:04:05,025 - #26 <
INFO  20:04:05,025 - #15 3
INFO  20:04:05,025 - #7 )
INFO  20:04:05,025 - #5 ;
INFO  20:04:05,025 - #9 print
INFO  20:04:05,025 - #6 (
INFO  20:04:05,025 - #16 t2
INFO  20:04:05,025 - #43 .
INFO  20:04:05,025 - #16 niz
INFO  20:04:05,025 - #50 [
INFO  20:04:05,025 - #15 0
INFO  20:04:05,025 - #51 ]
INFO  20:04:05,025 - #7 )
INFO  20:04:05,025 - #5 ;
INFO  20:04:05,025 - #9 print
INFO  20:04:05,025 - #6 (
INFO  20:04:05,026 - #16 t2
INFO  20:04:05,026 - #43 .
INFO  20:04:05,026 - #16 niz
INFO  20:04:05,026 - #50 [
INFO  20:04:05,026 - #15 1
INFO  20:04:05,026 - #51 ]
INFO  20:04:05,026 - #7 )
INFO  20:04:05,026 - #5 ;
INFO  20:04:05,026 - #9 print
INFO  20:04:05,026 - #6 (
INFO  20:04:05,026 - #16 t2
INFO  20:04:05,026 - #43 .
INFO  20:04:05,026 - #16 niz
INFO  20:04:05,026 - #50 [
INFO  20:04:05,026 - #15 2
INFO  20:04:05,026 - #51 ]
INFO  20:04:05,026 - #7 )
INFO  20:04:05,026 - #5 ;
INFO  20:04:05,026 - #9 print
INFO  20:04:05,026 - #6 (
INFO  20:04:05,026 - #16 eol
INFO  20:04:05,026 - #7 )
INFO  20:04:05,026 - #5 ;
INFO  20:04:05,026 - #16 i
INFO  20:04:05,026 - #13 =
INFO  20:04:05,026 - #15 0
INFO  20:04:05,026 - #5 ;
INFO  20:04:05,026 - #16 niz2
INFO  20:04:05,026 - #13 =
INFO  20:04:05,026 - #15 0
INFO  20:04:05,026 - #5 ;
INFO  20:04:05,026 - #34 do
INFO  20:04:05,026 - #3 {
INFO  20:04:05,026 - #16 niz2
INFO  20:04:05,026 - #13 =
INFO  20:04:05,026 - #16 niz2
INFO  20:04:05,026 - #11 +
INFO  20:04:05,026 - #16 t1
INFO  20:04:05,026 - #43 .
INFO  20:04:05,026 - #16 niz
INFO  20:04:05,026 - #50 [
INFO  20:04:05,026 - #16 i
INFO  20:04:05,026 - #51 ]
INFO  20:04:05,027 - #28 *
INFO  20:04:05,027 - #16 t2
INFO  20:04:05,027 - #43 .
INFO  20:04:05,027 - #16 niz
INFO  20:04:05,027 - #50 [
INFO  20:04:05,027 - #16 i
INFO  20:04:05,027 - #51 ]
INFO  20:04:05,027 - #5 ;
INFO  20:04:05,027 - #16 i
INFO  20:04:05,027 - #46 ++
INFO  20:04:05,027 - #5 ;
INFO  20:04:05,027 - #4 }
INFO  20:04:05,027 - #35 while
INFO  20:04:05,027 - #6 (
INFO  20:04:05,027 - #16 i
INFO  20:04:05,027 - #26 <
INFO  20:04:05,027 - #15 3
INFO  20:04:05,027 - #7 )
INFO  20:04:05,027 - #5 ;
INFO  20:04:05,027 - #9 print
INFO  20:04:05,027 - #6 (
INFO  20:04:05,027 - #16 niz2
INFO  20:04:05,027 - #7 )
INFO  20:04:05,027 - #5 ;
INFO  20:04:05,027 - #9 print
INFO  20:04:05,027 - #6 (
INFO  20:04:05,027 - #16 eol
INFO  20:04:05,027 - #7 )
INFO  20:04:05,027 - #5 ;
INFO  20:04:05,027 - #4 }
INFO  20:04:05,027 - #4 }
INFO  20:04:05,035 - Trenutan tip konstante je:  int na liniji 5
INFO  20:04:05,035 - Deklarisana promenljiva i na liniji 7
INFO  20:04:05,035 - Deklarisana promenljiva ibool na liniji 8
INFO  20:04:05,035 - Deklarisana promenljiva niz2 na liniji 10
INFO  20:04:05,035 - Deklarisana promenljiva niz na liniji 13
INFO  20:04:05,035 - Deklarisana promenljiva a na liniji 14
INFO  20:04:05,035 - Deklarisana je rekord :  Test na liniji 12
INFO  20:04:05,035 - Deklarisana promenljiva t2 na liniji 17
INFO  20:04:05,035 - Deklarisana promenljiva t1 na liniji 17
INFO  20:04:05,035 - Obradjuje se funkcija sum na liniji 21
INFO  20:04:05,035 - Naveden argument d na liniji 21
INFO  20:04:05,035 - Naveden argument z na liniji 21
INFO  20:04:05,036 - Obradjuje se funkcija inkrement na liniji 26
INFO  20:04:05,036 - Naveden argument inc na liniji 26
INFO  20:04:05,036 - Naveden argument a na liniji 26
INFO  20:04:05,036 - Deklarisana promenljiva pom na liniji 27
INFO  20:04:05,036 - Obradjuje se funkcija verify na liniji 35
INFO  20:04:05,036 - Obradjuje se funkcija main na liniji 40
ERROR 20:04:05,036 - Semanticka greska na liniji 56 nekompatibilni tipovi prilikom dodele!
ERROR 20:04:05,036 - Semanticka greska na liniji 57 nekompatibilni tipovi prilikom dodele!
ERROR 20:04:05,036 - Semanticka greska na liniji 58 nekompatibilni tipovi prilikom dodele!
ERROR 20:04:05,036 - Semanticka greska na liniji 59 nekompatibilni tipovi prilikom dodele!
ERROR 20:04:05,036 - Semanticka greska na liniji 60 nekompatibilni tipovi prilikom dodele!
ERROR 20:04:05,036 - Semanticka greska na liniji 61 print prima samo num, char ili bool!
ERROR 20:04:05,036 - Semanticka greska na liniji 62 print prima samo num, char ili bool!
ERROR 20:04:05,037 - Semanticka greska na liniji 79  t1 mora biti int, char ili bool!
ERROR 20:04:05,037 - Semanticka greska na liniji 80  t1 mora biti int, char ili bool!
ERROR 20:04:05,037 - Semanticka greska na liniji 81  t1 mora biti int, char ili bool!
ERROR 20:04:05,037 - Semanticka greska na liniji 84 print prima samo num, char ili bool!
ERROR 20:04:05,037 - Semanticka greska na liniji 87 print prima samo num, char ili bool!
ERROR 20:04:05,037 - Semanticka greska na liniji 90 nekompatibilni tipovi prilikom dodele!
ERROR 20:04:05,037 - Semanticka greska na liniji 91 nekompatibilni tipovi prilikom dodele!
ERROR 20:04:05,037 - Semanticka greska na liniji 97  t2 mora biti int, char ili bool!
ERROR 20:04:05,037 - Semanticka greska na liniji 98  t2 mora biti int, char ili bool!
ERROR 20:04:05,037 - Semanticka greska na liniji 99  t2 mora biti int, char ili bool!
ERROR 20:04:05,037 - Semanticka greska na liniji 105 nekompatibilni tipovi za aritmeticku operaciju!
ERROR 20:04:05,037 - Semanticka greska na liniji 105 nekompatibilni tipovi prilikom dodele!
ERROR 20:04:05,037 - Parsiranje NIJE uspesno zavrseno!
