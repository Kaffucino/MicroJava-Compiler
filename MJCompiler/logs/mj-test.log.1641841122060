INFO  19:58:15,738 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  19:58:15,770 - #2 program
INFO  19:58:15,770 - #16 p
INFO  19:58:15,770 - #48 const
INFO  19:58:15,770 - #16 int
INFO  19:58:15,770 - #16 size
INFO  19:58:15,771 - #13 =
INFO  19:58:15,771 - #15 10
INFO  19:58:15,771 - #5 ;
INFO  19:58:15,771 - #16 int
INFO  19:58:15,772 - #16 x
INFO  19:58:15,772 - #13 =
ERROR 19:58:15,772 - 
Sintaksna greska na liniji 4
INFO  19:58:15,772 - #15 5
INFO  19:58:15,772 - #8 ,
INFO  19:58:15,772 - #16 y
INFO  19:58:15,773 - #5 ;
INFO  19:58:15,773 - #32 class
INFO  19:58:15,773 - #16 Table
INFO  19:58:15,773 - #3 {
INFO  19:58:15,773 - #16 int
INFO  19:58:15,773 - #16 pos
INFO  19:58:15,773 - #50 [
INFO  19:58:15,773 - #51 ]
INFO  19:58:15,774 - #8 ,
INFO  19:58:15,774 - #16 neg
INFO  19:58:15,774 - #50 [
INFO  19:58:15,774 - #51 ]
INFO  19:58:15,774 - #5 ;
INFO  19:58:15,774 - #3 {
INFO  19:58:15,774 - #14 void
INFO  19:58:15,774 - #16 putp
INFO  19:58:15,774 - #6 (
INFO  19:58:15,774 - #16 int
INFO  19:58:15,774 - #16 a
INFO  19:58:15,774 - #8 ,
INFO  19:58:15,774 - #16 int
INFO  19:58:15,774 - #16 x
INFO  19:58:15,774 - #8 ,
INFO  19:58:15,774 - #16 int
INFO  19:58:15,774 - #16 y
INFO  19:58:15,774 - #7 )
INFO  19:58:15,774 - #3 {
INFO  19:58:15,775 - #40 this
INFO  19:58:15,775 - #43 .
INFO  19:58:15,775 - #16 pos
INFO  19:58:15,775 - #50 [
INFO  19:58:15,775 - #16 idx
INFO  19:58:15,775 - #51 ]
INFO  19:58:15,775 - #13 =
INFO  19:58:15,775 - #16 a
INFO  19:58:15,776 - #5 ;
INFO  19:58:15,776 - #4 }
INFO  19:58:15,776 - #14 void
INFO  19:58:15,776 - #16 putn
INFO  19:58:15,776 - #6 (
INFO  19:58:15,776 - #16 int
INFO  19:58:15,776 - #16 a
INFO  19:58:15,776 - #8 ,
INFO  19:58:15,776 - #16 int
INFO  19:58:15,776 - #16 idx
INFO  19:58:15,776 - #7 )
INFO  19:58:15,777 - #3 {
INFO  19:58:15,777 - #40 this
INFO  19:58:15,777 - #43 .
INFO  19:58:15,777 - #16 neg
INFO  19:58:15,777 - #50 [
INFO  19:58:15,777 - #16 idx
INFO  19:58:15,777 - #51 ]
INFO  19:58:15,777 - #13 =
INFO  19:58:15,777 - #16 a
INFO  19:58:15,777 - #5 ;
INFO  19:58:15,777 - #4 }
INFO  19:58:15,777 - #16 int
INFO  19:58:15,777 - #16 getp
INFO  19:58:15,777 - #6 (
INFO  19:58:15,777 - #16 int
INFO  19:58:15,777 - #16 idx
INFO  19:58:15,778 - #7 )
INFO  19:58:15,778 - #3 {
INFO  19:58:15,778 - #10 return
INFO  19:58:15,778 - #16 pos
INFO  19:58:15,778 - #50 [
INFO  19:58:15,778 - #16 idx
INFO  19:58:15,778 - #51 ]
INFO  19:58:15,778 - #5 ;
INFO  19:58:15,778 - #4 }
INFO  19:58:15,778 - #16 int
INFO  19:58:15,778 - #16 getn
INFO  19:58:15,778 - #6 (
INFO  19:58:15,778 - #16 int
INFO  19:58:15,778 - #16 idx
INFO  19:58:15,778 - #7 )
INFO  19:58:15,779 - #3 {
INFO  19:58:15,779 - #10 return
INFO  19:58:15,779 - #16 neg
INFO  19:58:15,779 - #50 [
INFO  19:58:15,779 - #16 idx
INFO  19:58:15,779 - #51 ]
INFO  19:58:15,779 - #5 ;
INFO  19:58:15,779 - #4 }
INFO  19:58:15,779 - #4 }
INFO  19:58:15,779 - #4 }
INFO  19:58:15,779 - #49 record
INFO  19:58:15,779 - #16 Board
INFO  19:58:15,779 - #3 {
INFO  19:58:15,779 - #16 int
INFO  19:58:15,779 - #16 rows
INFO  19:58:15,779 - #8 ,
INFO  19:58:15,779 - #16 columns
INFO  19:58:15,779 - #5 ;
INFO  19:58:15,779 - #4 }
INFO  19:58:15,779 - #16 Table
INFO  19:58:15,779 - #16 val
INFO  19:58:15,780 - #5 ;
INFO  19:58:15,780 - #16 Board
INFO  19:58:15,780 - #16 board
INFO  19:58:15,780 - #5 ;
INFO  19:58:15,780 - #3 {
INFO  19:58:15,780 - #14 void
INFO  19:58:15,780 - #16 f
INFO  19:58:15,780 - #6 (
INFO  19:58:15,780 - #16 char
INFO  19:58:15,780 - #16 ch
INFO  19:58:15,780 - #8 ,
INFO  19:58:15,780 - #16 int
INFO  19:58:15,780 - #16 a
INFO  19:58:15,780 - #8 ,
INFO  19:58:15,780 - #16 int
INFO  19:58:15,780 - #16 arg
INFO  19:58:15,780 - #7 )
INFO  19:58:15,780 - #16 int
INFO  19:58:15,780 - #16 x
INFO  19:58:15,783 - #5 ;
INFO  19:58:15,783 - #3 {
INFO  19:58:15,783 - #16 x
INFO  19:58:15,783 - #13 =
INFO  19:58:15,783 - #16 arg
INFO  19:58:15,783 - #5 ;
INFO  19:58:15,783 - #4 }
INFO  19:58:15,784 - #14 void
INFO  19:58:15,784 - #16 main
INFO  19:58:15,784 - #6 (
INFO  19:58:15,784 - #7 )
INFO  19:58:15,784 - #16 int
INFO  19:58:15,784 - #16 x
INFO  19:58:15,784 - #8 ,
INFO  19:58:15,784 - #16 i
INFO  19:58:15,784 - #5 ;
INFO  19:58:15,784 - #16 char
INFO  19:58:15,784 - #16 c
INFO  19:58:15,784 - #5 ;
INFO  19:58:15,784 - #3 {
INFO  19:58:15,784 - #16 val
INFO  19:58:15,784 - #13 =
INFO  19:58:15,784 - #36 new
INFO  19:58:15,784 - #16 Table
INFO  19:58:15,784 - #5 ;
INFO  19:58:15,784 - #16 val
INFO  19:58:15,784 - #43 .
INFO  19:58:15,784 - #16 pos
INFO  19:58:15,784 - #13 =
INFO  19:58:15,784 - #36 new
INFO  19:58:15,784 - #16 int
INFO  19:58:15,784 - #50 [
INFO  19:58:15,784 - #16 size
INFO  19:58:15,784 - #51 ]
INFO  19:58:15,784 - #5 ;
INFO  19:58:15,785 - #16 val
INFO  19:58:15,785 - #43 .
INFO  19:58:15,785 - #16 neg
INFO  19:58:15,785 - #13 =
INFO  19:58:15,785 - #36 new
INFO  19:58:15,785 - #16 int
INFO  19:58:15,785 - #50 [
INFO  19:58:15,785 - #16 size
INFO  19:58:15,785 - #51 ]
INFO  19:58:15,785 - #5 ;
INFO  19:58:15,785 - #37 read
INFO  19:58:15,785 - #6 (
INFO  19:58:15,785 - #16 x
INFO  19:58:15,785 - #7 )
INFO  19:58:15,785 - #5 ;
INFO  19:58:15,785 - #19 if
INFO  19:58:15,785 - #6 (
INFO  19:58:15,785 - #16 x
INFO  19:58:15,785 - #24 >
INFO  19:58:15,785 - #15 5
INFO  19:58:15,785 - #44 &&
INFO  19:58:15,785 - #16 x
INFO  19:58:15,785 - #22 ==
INFO  19:58:15,785 - #15 5
INFO  19:58:15,785 - #7 )
INFO  19:58:15,786 - #3 {
INFO  19:58:15,786 - #42 goto
INFO  19:58:15,786 - #16 skip
INFO  19:58:15,786 - #5 ;
INFO  19:58:15,786 - #4 }
INFO  19:58:15,786 - #16 i
INFO  19:58:15,786 - #13 =
INFO  19:58:15,786 - #15 0
INFO  19:58:15,786 - #5 ;
INFO  19:58:15,786 - #34 do
INFO  19:58:15,786 - #3 {
INFO  19:58:15,786 - #16 val
INFO  19:58:15,786 - #43 .
INFO  19:58:15,786 - #16 putp
INFO  19:58:15,786 - #6 (
INFO  19:58:15,786 - #15 0
INFO  19:58:15,786 - #8 ,
INFO  19:58:15,786 - #16 i
INFO  19:58:15,786 - #7 )
INFO  19:58:15,786 - #5 ;
INFO  19:58:15,786 - #16 val
INFO  19:58:15,787 - #43 .
INFO  19:58:15,787 - #16 putn
INFO  19:58:15,787 - #6 (
INFO  19:58:15,787 - #15 0
INFO  19:58:15,787 - #8 ,
INFO  19:58:15,787 - #16 i
INFO  19:58:15,787 - #7 )
INFO  19:58:15,787 - #5 ;
INFO  19:58:15,787 - #16 i
INFO  19:58:15,787 - #46 ++
INFO  19:58:15,787 - #5 ;
INFO  19:58:15,787 - #4 }
INFO  19:58:15,787 - #35 while
INFO  19:58:15,787 - #6 (
INFO  19:58:15,787 - #16 i
INFO  19:58:15,787 - #26 <
INFO  19:58:15,787 - #16 size
INFO  19:58:15,787 - #7 )
INFO  19:58:15,788 - #5 ;
INFO  19:58:15,788 - #16 skip
INFO  19:58:15,788 - #21 :
INFO  19:58:15,788 - #16 f
INFO  19:58:15,788 - #6 (
INFO  19:58:15,788 - #16 c
INFO  19:58:15,788 - #8 ,
INFO  19:58:15,788 - #16 x
INFO  19:58:15,788 - #8 ,
INFO  19:58:15,788 - #16 i
INFO  19:58:15,788 - #7 )
INFO  19:58:15,788 - #5 ;
INFO  19:58:15,788 - #16 board
INFO  19:58:15,788 - #13 =
INFO  19:58:15,788 - #36 new
INFO  19:58:15,788 - #16 Board
INFO  19:58:15,788 - #5 ;
INFO  19:58:15,788 - #37 read
INFO  19:58:15,788 - #6 (
INFO  19:58:15,788 - #16 board
INFO  19:58:15,788 - #43 .
INFO  19:58:15,788 - #16 rows
INFO  19:58:15,788 - #7 )
INFO  19:58:15,788 - #5 ;
INFO  19:58:15,789 - #16 x
INFO  19:58:15,789 - #13 =
INFO  19:58:15,789 - #16 board
INFO  19:58:15,789 - #43 .
INFO  19:58:15,789 - #16 rows
INFO  19:58:15,789 - #5 ;
INFO  19:58:15,789 - #34 do
INFO  19:58:15,789 - #3 {
INFO  19:58:15,789 - #19 if
INFO  19:58:15,789 - #6 (
INFO  19:58:15,789 - #16 x
INFO  19:58:15,789 - #27 <=
INFO  19:58:15,789 - #15 0
INFO  19:58:15,789 - #7 )
INFO  19:58:15,789 - #31 break
INFO  19:58:15,789 - #5 ;
INFO  19:58:15,789 - #19 if
INFO  19:58:15,789 - #6 (
INFO  19:58:15,789 - #15 0
INFO  19:58:15,789 - #27 <=
INFO  19:58:15,789 - #16 x
INFO  19:58:15,789 - #44 &&
INFO  19:58:15,789 - #16 x
INFO  19:58:15,789 - #26 <
INFO  19:58:15,789 - #16 size
INFO  19:58:15,789 - #7 )
INFO  19:58:15,789 - #3 {
INFO  19:58:15,789 - #16 val
INFO  19:58:15,789 - #43 .
INFO  19:58:15,789 - #16 putp
INFO  19:58:15,789 - #6 (
INFO  19:58:15,789 - #16 val
INFO  19:58:15,789 - #43 .
INFO  19:58:15,790 - #16 getp
INFO  19:58:15,790 - #6 (
INFO  19:58:15,790 - #16 x
INFO  19:58:15,790 - #7 )
INFO  19:58:15,790 - #11 +
INFO  19:58:15,790 - #15 1
INFO  19:58:15,790 - #7 )
INFO  19:58:15,790 - #5 ;
INFO  19:58:15,790 - #4 }
INFO  19:58:15,790 - #20 else
INFO  19:58:15,790 - #19 if
INFO  19:58:15,790 - #6 (
INFO  19:58:15,790 - #16 size
INFO  19:58:15,790 - #26 <
INFO  19:58:15,790 - #16 x
INFO  19:58:15,790 - #44 &&
INFO  19:58:15,790 - #16 x
INFO  19:58:15,790 - #26 <
INFO  19:58:15,790 - #15 0
INFO  19:58:15,790 - #7 )
INFO  19:58:15,790 - #3 {
INFO  19:58:15,791 - #16 val
INFO  19:58:15,791 - #43 .
INFO  19:58:15,791 - #16 putn
INFO  19:58:15,791 - #6 (
INFO  19:58:15,791 - #16 val
INFO  19:58:15,791 - #43 .
INFO  19:58:15,791 - #16 getn
INFO  19:58:15,791 - #6 (
INFO  19:58:15,791 - #16 x
INFO  19:58:15,791 - #7 )
INFO  19:58:15,791 - #11 +
INFO  19:58:15,791 - #15 1
INFO  19:58:15,791 - #7 )
INFO  19:58:15,791 - #5 ;
INFO  19:58:15,791 - #4 }
INFO  19:58:15,791 - #37 read
INFO  19:58:15,791 - #6 (
INFO  19:58:15,791 - #16 x
INFO  19:58:15,791 - #7 )
INFO  19:58:15,791 - #5 ;
INFO  19:58:15,791 - #4 }
INFO  19:58:15,791 - #35 while
INFO  19:58:15,791 - #6 (
INFO  19:58:15,791 - #18 true
INFO  19:58:15,791 - #7 )
INFO  19:58:15,791 - #5 ;
INFO  19:58:15,791 - #4 }
INFO  19:58:15,791 - #4 }
ERROR 19:58:15,792 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62
