INFO  01:01:10,585 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  01:01:10,615 - #2 program
INFO  01:01:10,615 - #16 test302
INFO  01:01:10,615 - #48 const
INFO  01:01:10,616 - #16 int
INFO  01:01:10,616 - #16 jedan
INFO  01:01:10,617 - #13 =
INFO  01:01:10,617 - #15 1
INFO  01:01:10,617 - #5 ;
INFO  01:01:10,617 - #16 int
INFO  01:01:10,618 - #16 i
INFO  01:01:10,618 - #5 ;
INFO  01:01:10,618 - #16 bool
INFO  01:01:10,618 - #16 ibool
INFO  01:01:10,618 - #5 ;
INFO  01:01:10,618 - #16 int
INFO  01:01:10,618 - #16 niz2
INFO  01:01:10,618 - #5 ;
INFO  01:01:10,618 - #49 record
INFO  01:01:10,618 - #16 Test
INFO  01:01:10,618 - #3 {
INFO  01:01:10,619 - #16 int
INFO  01:01:10,619 - #16 niz
INFO  01:01:10,619 - #50 [
INFO  01:01:10,619 - #51 ]
INFO  01:01:10,619 - #5 ;
INFO  01:01:10,619 - #16 int
INFO  01:01:10,619 - #16 a
INFO  01:01:10,619 - #5 ;
INFO  01:01:10,620 - #4 }
INFO  01:01:10,620 - #49 record
INFO  01:01:10,621 - #16 Test2
INFO  01:01:10,621 - #3 {
INFO  01:01:10,621 - #16 int
INFO  01:01:10,621 - #16 niz23
INFO  01:01:10,621 - #50 [
INFO  01:01:10,621 - #51 ]
INFO  01:01:10,621 - #5 ;
INFO  01:01:10,621 - #16 int
INFO  01:01:10,621 - #16 a2
INFO  01:01:10,621 - #5 ;
INFO  01:01:10,621 - #4 }
INFO  01:01:10,621 - #16 Test
INFO  01:01:10,621 - #16 t1
INFO  01:01:10,621 - #8 ,
INFO  01:01:10,621 - #16 t2
INFO  01:01:10,621 - #5 ;
INFO  01:01:10,621 - #3 {
INFO  01:01:10,622 - #16 int
INFO  01:01:10,622 - #16 sum
INFO  01:01:10,622 - #6 (
INFO  01:01:10,622 - #16 int
INFO  01:01:10,622 - #16 z
INFO  01:01:10,622 - #8 ,
INFO  01:01:10,622 - #16 bool
INFO  01:01:10,622 - #16 d
INFO  01:01:10,623 - #7 )
INFO  01:01:10,623 - #3 {
INFO  01:01:10,623 - #10 return
INFO  01:01:10,623 - #16 z
INFO  01:01:10,623 - #11 +
INFO  01:01:10,625 - #16 d
INFO  01:01:10,625 - #5 ;
INFO  01:01:10,626 - #4 }
INFO  01:01:10,626 - #16 int
INFO  01:01:10,626 - #16 inkrement
INFO  01:01:10,627 - #6 (
INFO  01:01:10,627 - #16 char
INFO  01:01:10,627 - #16 a
INFO  01:01:10,629 - #8 ,
INFO  01:01:10,629 - #16 char
INFO  01:01:10,629 - #16 inc
INFO  01:01:10,630 - #7 )
INFO  01:01:10,630 - #16 int
INFO  01:01:10,630 - #16 pom
INFO  01:01:10,630 - #5 ;
INFO  01:01:10,630 - #3 {
INFO  01:01:10,630 - #19 if
INFO  01:01:10,630 - #6 (
INFO  01:01:10,630 - #16 inc
INFO  01:01:10,630 - #22 ==
INFO  01:01:10,630 - #16 jedan
INFO  01:01:10,630 - #7 )
INFO  01:01:10,632 - #16 pom
INFO  01:01:10,632 - #13 =
INFO  01:01:10,632 - #15 1
INFO  01:01:10,632 - #5 ;
INFO  01:01:10,633 - #20 else
INFO  01:01:10,633 - #19 if
INFO  01:01:10,633 - #6 (
INFO  01:01:10,633 - #16 inc
INFO  01:01:10,633 - #22 ==
INFO  01:01:10,633 - #15 2
INFO  01:01:10,633 - #7 )
INFO  01:01:10,633 - #16 pom
INFO  01:01:10,633 - #13 =
INFO  01:01:10,633 - #16 a
INFO  01:01:10,633 - #5 ;
INFO  01:01:10,633 - #10 return
INFO  01:01:10,634 - #16 sum
INFO  01:01:10,634 - #6 (
INFO  01:01:10,634 - #16 a
INFO  01:01:10,634 - #8 ,
INFO  01:01:10,634 - #16 pom
INFO  01:01:10,634 - #7 )
INFO  01:01:10,634 - #5 ;
INFO  01:01:10,635 - #4 }
INFO  01:01:10,635 - #16 bool
INFO  01:01:10,635 - #16 verify
INFO  01:01:10,635 - #6 (
INFO  01:01:10,635 - #7 )
INFO  01:01:10,635 - #3 {
INFO  01:01:10,635 - #16 sum
INFO  01:01:10,635 - #6 (
INFO  01:01:10,635 - #15 1
INFO  01:01:10,635 - #8 ,
INFO  01:01:10,635 - #15 2
INFO  01:01:10,635 - #7 )
INFO  01:01:10,635 - #5 ;
INFO  01:01:10,635 - #9 print
INFO  01:01:10,635 - #6 (
INFO  01:01:10,635 - #17 'v'
INFO  01:01:10,635 - #7 )
INFO  01:01:10,636 - #5 ;
INFO  01:01:10,636 - #10 return
INFO  01:01:10,636 - #18 false
INFO  01:01:10,636 - #5 ;
INFO  01:01:10,636 - #4 }
INFO  01:01:10,636 - #14 void
INFO  01:01:10,636 - #16 main
INFO  01:01:10,636 - #6 (
INFO  01:01:10,636 - #7 )
INFO  01:01:10,636 - #3 {
INFO  01:01:10,636 - #19 if
INFO  01:01:10,637 - #6 (
INFO  01:01:10,637 - #15 1
INFO  01:01:10,637 - #23 !=
INFO  01:01:10,637 - #15 1
INFO  01:01:10,637 - #7 )
INFO  01:01:10,637 - #9 print
INFO  01:01:10,637 - #6 (
INFO  01:01:10,637 - #12 -
INFO  01:01:10,637 - #15 6
INFO  01:01:10,637 - #7 )
INFO  01:01:10,637 - #5 ;
INFO  01:01:10,638 - #20 else
INFO  01:01:10,638 - #9 print
INFO  01:01:10,638 - #6 (
INFO  01:01:10,638 - #15 0
INFO  01:01:10,638 - #7 )
INFO  01:01:10,638 - #5 ;
INFO  01:01:10,638 - #16 ibool
INFO  01:01:10,638 - #13 =
INFO  01:01:10,638 - #18 false
INFO  01:01:10,639 - #5 ;
INFO  01:01:10,639 - #16 i
INFO  01:01:10,639 - #13 =
INFO  01:01:10,640 - #15 0
INFO  01:01:10,640 - #5 ;
INFO  01:01:10,640 - #34 do
INFO  01:01:10,640 - #3 {
INFO  01:01:10,640 - #19 if
INFO  01:01:10,640 - #6 (
INFO  01:01:10,640 - #16 i
INFO  01:01:10,640 - #22 ==
INFO  01:01:10,640 - #15 2
INFO  01:01:10,641 - #7 )
INFO  01:01:10,641 - #16 ibool
INFO  01:01:10,641 - #13 =
INFO  01:01:10,641 - #18 true
INFO  01:01:10,641 - #5 ;
INFO  01:01:10,641 - #16 i
INFO  01:01:10,641 - #46 ++
INFO  01:01:10,641 - #5 ;
INFO  01:01:10,641 - #4 }
INFO  01:01:10,641 - #35 while
INFO  01:01:10,642 - #6 (
INFO  01:01:10,642 - #16 i
INFO  01:01:10,642 - #26 <
INFO  01:01:10,642 - #15 5
INFO  01:01:10,642 - #7 )
INFO  01:01:10,642 - #5 ;
INFO  01:01:10,642 - #19 if
INFO  01:01:10,642 - #6 (
INFO  01:01:10,642 - #16 ibool
INFO  01:01:10,642 - #7 )
INFO  01:01:10,642 - #19 if
INFO  01:01:10,642 - #6 (
INFO  01:01:10,642 - #16 i
INFO  01:01:10,642 - #22 ==
INFO  01:01:10,642 - #15 5
INFO  01:01:10,642 - #7 )
INFO  01:01:10,643 - #9 print
INFO  01:01:10,643 - #6 (
INFO  01:01:10,643 - #15 1
INFO  01:01:10,643 - #7 )
INFO  01:01:10,643 - #5 ;
INFO  01:01:10,643 - #20 else
INFO  01:01:10,643 - #9 print
INFO  01:01:10,643 - #6 (
INFO  01:01:10,643 - #12 -
INFO  01:01:10,643 - #15 1
INFO  01:01:10,643 - #7 )
INFO  01:01:10,643 - #5 ;
INFO  01:01:10,643 - #16 t1
INFO  01:01:10,643 - #13 =
INFO  01:01:10,643 - #36 new
INFO  01:01:10,643 - #16 Test
INFO  01:01:10,643 - #5 ;
INFO  01:01:10,643 - #16 t1
INFO  01:01:10,643 - #43 .
INFO  01:01:10,643 - #16 a
INFO  01:01:10,643 - #13 =
INFO  01:01:10,643 - #15 2
INFO  01:01:10,643 - #5 ;
INFO  01:01:10,643 - #16 t1
INFO  01:01:10,643 - #43 .
INFO  01:01:10,643 - #16 niz
INFO  01:01:10,643 - #13 =
INFO  01:01:10,643 - #36 new
INFO  01:01:10,644 - #16 int
INFO  01:01:10,644 - #50 [
INFO  01:01:10,644 - #15 3
INFO  01:01:10,644 - #51 ]
INFO  01:01:10,644 - #5 ;
INFO  01:01:10,644 - #16 t1
INFO  01:01:10,644 - #43 .
INFO  01:01:10,644 - #16 niz
INFO  01:01:10,644 - #50 [
INFO  01:01:10,644 - #15 0
INFO  01:01:10,644 - #51 ]
INFO  01:01:10,644 - #13 =
INFO  01:01:10,644 - #15 1
INFO  01:01:10,644 - #28 *
INFO  01:01:10,644 - #16 t1
INFO  01:01:10,645 - #43 .
INFO  01:01:10,645 - #16 a
INFO  01:01:10,645 - #5 ;
INFO  01:01:10,645 - #16 t1
INFO  01:01:10,645 - #43 .
INFO  01:01:10,645 - #16 niz
INFO  01:01:10,645 - #50 [
INFO  01:01:10,645 - #15 1
INFO  01:01:10,645 - #51 ]
INFO  01:01:10,645 - #13 =
INFO  01:01:10,645 - #15 2
INFO  01:01:10,645 - #28 *
INFO  01:01:10,645 - #16 t1
INFO  01:01:10,645 - #43 .
INFO  01:01:10,645 - #16 a
INFO  01:01:10,645 - #5 ;
INFO  01:01:10,645 - #16 t1
INFO  01:01:10,645 - #43 .
INFO  01:01:10,645 - #16 niz
INFO  01:01:10,645 - #50 [
INFO  01:01:10,645 - #15 2
INFO  01:01:10,645 - #51 ]
INFO  01:01:10,646 - #13 =
INFO  01:01:10,646 - #16 sum
INFO  01:01:10,646 - #6 (
INFO  01:01:10,646 - #16 t1
INFO  01:01:10,646 - #43 .
INFO  01:01:10,646 - #16 niz
INFO  01:01:10,646 - #50 [
INFO  01:01:10,646 - #15 1
INFO  01:01:10,646 - #51 ]
INFO  01:01:10,646 - #8 ,
INFO  01:01:10,646 - #16 t1
INFO  01:01:10,646 - #43 .
INFO  01:01:10,646 - #16 niz
INFO  01:01:10,646 - #50 [
INFO  01:01:10,646 - #15 0
INFO  01:01:10,646 - #51 ]
INFO  01:01:10,646 - #7 )
INFO  01:01:10,646 - #28 *
INFO  01:01:10,646 - #16 t1
INFO  01:01:10,646 - #43 .
INFO  01:01:10,646 - #16 a
INFO  01:01:10,646 - #11 +
INFO  01:01:10,646 - #15 1
INFO  01:01:10,646 - #5 ;
INFO  01:01:10,646 - #19 if
INFO  01:01:10,646 - #6 (
INFO  01:01:10,646 - #16 verify
INFO  01:01:10,646 - #6 (
INFO  01:01:10,646 - #7 )
INFO  01:01:10,647 - #7 )
INFO  01:01:10,647 - #9 print
INFO  01:01:10,647 - #6 (
INFO  01:01:10,647 - #16 ord
INFO  01:01:10,647 - #6 (
INFO  01:01:10,647 - #17 'A'
INFO  01:01:10,647 - #7 )
INFO  01:01:10,647 - #7 )
INFO  01:01:10,647 - #5 ;
INFO  01:01:10,647 - #20 else
INFO  01:01:10,647 - #9 print
INFO  01:01:10,647 - #6 (
INFO  01:01:10,647 - #16 ord
INFO  01:01:10,647 - #6 (
INFO  01:01:10,647 - #17 'a'
INFO  01:01:10,647 - #7 )
INFO  01:01:10,647 - #7 )
INFO  01:01:10,647 - #5 ;
INFO  01:01:10,647 - #9 print
INFO  01:01:10,647 - #6 (
INFO  01:01:10,647 - #16 eol
INFO  01:01:10,647 - #7 )
INFO  01:01:10,647 - #5 ;
INFO  01:01:10,647 - #16 i
INFO  01:01:10,647 - #13 =
INFO  01:01:10,647 - #15 0
INFO  01:01:10,647 - #5 ;
INFO  01:01:10,647 - #34 do
INFO  01:01:10,647 - #3 {
INFO  01:01:10,647 - #19 if
INFO  01:01:10,647 - #6 (
INFO  01:01:10,647 - #16 i
INFO  01:01:10,647 - #22 ==
INFO  01:01:10,647 - #15 3
INFO  01:01:10,647 - #7 )
INFO  01:01:10,647 - #3 {
INFO  01:01:10,647 - #16 i
INFO  01:01:10,647 - #46 ++
INFO  01:01:10,648 - #5 ;
INFO  01:01:10,648 - #39 continue
INFO  01:01:10,648 - #5 ;
INFO  01:01:10,648 - #4 }
INFO  01:01:10,648 - #19 if
INFO  01:01:10,648 - #6 (
INFO  01:01:10,648 - #16 i
INFO  01:01:10,648 - #22 ==
INFO  01:01:10,648 - #15 4
INFO  01:01:10,648 - #7 )
INFO  01:01:10,648 - #31 break
INFO  01:01:10,648 - #5 ;
INFO  01:01:10,648 - #16 i
INFO  01:01:10,649 - #13 =
INFO  01:01:10,649 - #16 inkrement
INFO  01:01:10,649 - #6 (
INFO  01:01:10,649 - #16 i
INFO  01:01:10,649 - #8 ,
INFO  01:01:10,649 - #15 1
INFO  01:01:10,649 - #7 )
INFO  01:01:10,649 - #5 ;
INFO  01:01:10,649 - #4 }
INFO  01:01:10,649 - #35 while
INFO  01:01:10,649 - #6 (
INFO  01:01:10,649 - #16 i
INFO  01:01:10,649 - #26 <
INFO  01:01:10,649 - #15 10
INFO  01:01:10,649 - #7 )
INFO  01:01:10,649 - #5 ;
INFO  01:01:10,649 - #19 if
INFO  01:01:10,649 - #6 (
INFO  01:01:10,649 - #16 i
INFO  01:01:10,649 - #22 ==
INFO  01:01:10,649 - #15 3
INFO  01:01:10,649 - #44 &&
INFO  01:01:10,649 - #16 verify
INFO  01:01:10,649 - #6 (
INFO  01:01:10,649 - #7 )
INFO  01:01:10,649 - #7 )
INFO  01:01:10,649 - #9 print
INFO  01:01:10,649 - #6 (
INFO  01:01:10,649 - #12 -
INFO  01:01:10,649 - #15 4
INFO  01:01:10,649 - #7 )
INFO  01:01:10,649 - #5 ;
INFO  01:01:10,649 - #20 else
INFO  01:01:10,649 - #9 print
INFO  01:01:10,649 - #6 (
INFO  01:01:10,649 - #15 4
INFO  01:01:10,649 - #7 )
INFO  01:01:10,649 - #5 ;
INFO  01:01:10,649 - #37 read
INFO  01:01:10,649 - #6 (
INFO  01:01:10,649 - #16 t1
INFO  01:01:10,649 - #43 .
INFO  01:01:10,649 - #16 niz
INFO  01:01:10,650 - #50 [
INFO  01:01:10,650 - #15 0
INFO  01:01:10,650 - #51 ]
INFO  01:01:10,650 - #7 )
INFO  01:01:10,650 - #5 ;
INFO  01:01:10,650 - #37 read
INFO  01:01:10,650 - #6 (
INFO  01:01:10,650 - #16 t1
INFO  01:01:10,650 - #43 .
INFO  01:01:10,650 - #16 niz
INFO  01:01:10,650 - #50 [
INFO  01:01:10,650 - #15 1
INFO  01:01:10,650 - #51 ]
INFO  01:01:10,650 - #7 )
INFO  01:01:10,650 - #5 ;
INFO  01:01:10,650 - #37 read
INFO  01:01:10,650 - #6 (
INFO  01:01:10,650 - #16 t1
INFO  01:01:10,650 - #43 .
INFO  01:01:10,650 - #16 niz
INFO  01:01:10,650 - #50 [
INFO  01:01:10,650 - #15 2
INFO  01:01:10,650 - #51 ]
INFO  01:01:10,650 - #7 )
INFO  01:01:10,650 - #5 ;
INFO  01:01:10,650 - #9 print
INFO  01:01:10,650 - #6 (
INFO  01:01:10,650 - #16 eol
INFO  01:01:10,650 - #7 )
INFO  01:01:10,650 - #5 ;
INFO  01:01:10,650 - #16 chr
INFO  01:01:10,650 - #6 (
INFO  01:01:10,650 - #15 3
INFO  01:01:10,650 - #7 )
INFO  01:01:10,650 - #5 ;
INFO  01:01:10,650 - #9 print
INFO  01:01:10,650 - #6 (
INFO  01:01:10,650 - #16 sum
INFO  01:01:10,650 - #6 (
INFO  01:01:10,650 - #16 sum
INFO  01:01:10,650 - #6 (
INFO  01:01:10,650 - #16 t1
INFO  01:01:10,650 - #43 .
INFO  01:01:10,650 - #16 niz
INFO  01:01:10,650 - #50 [
INFO  01:01:10,650 - #15 0
INFO  01:01:10,650 - #51 ]
INFO  01:01:10,650 - #8 ,
INFO  01:01:10,650 - #16 t1
INFO  01:01:10,651 - #43 .
INFO  01:01:10,651 - #16 niz
INFO  01:01:10,651 - #50 [
INFO  01:01:10,651 - #15 1
INFO  01:01:10,651 - #51 ]
INFO  01:01:10,651 - #7 )
INFO  01:01:10,651 - #8 ,
INFO  01:01:10,651 - #16 t1
INFO  01:01:10,651 - #43 .
INFO  01:01:10,651 - #16 niz
INFO  01:01:10,651 - #50 [
INFO  01:01:10,651 - #15 2
INFO  01:01:10,651 - #51 ]
INFO  01:01:10,651 - #7 )
INFO  01:01:10,651 - #7 )
INFO  01:01:10,651 - #5 ;
INFO  01:01:10,651 - #9 print
INFO  01:01:10,651 - #6 (
INFO  01:01:10,651 - #16 eol
INFO  01:01:10,651 - #7 )
INFO  01:01:10,651 - #5 ;
INFO  01:01:10,651 - #9 print
INFO  01:01:10,651 - #6 (
INFO  01:01:10,651 - #16 inkrement
INFO  01:01:10,651 - #6 (
INFO  01:01:10,651 - #16 t1
INFO  01:01:10,651 - #43 .
INFO  01:01:10,651 - #16 niz
INFO  01:01:10,651 - #50 [
INFO  01:01:10,651 - #15 2
INFO  01:01:10,651 - #51 ]
INFO  01:01:10,651 - #8 ,
INFO  01:01:10,651 - #15 2
INFO  01:01:10,651 - #7 )
INFO  01:01:10,651 - #7 )
INFO  01:01:10,651 - #5 ;
INFO  01:01:10,651 - #16 t2
INFO  01:01:10,651 - #13 =
INFO  01:01:10,651 - #36 new
INFO  01:01:10,651 - #16 Test
INFO  01:01:10,651 - #5 ;
INFO  01:01:10,651 - #16 t2
INFO  01:01:10,651 - #43 .
INFO  01:01:10,651 - #16 a
INFO  01:01:10,651 - #13 =
INFO  01:01:10,651 - #15 3
INFO  01:01:10,651 - #5 ;
INFO  01:01:10,651 - #16 t2
INFO  01:01:10,651 - #43 .
INFO  01:01:10,651 - #16 niz
INFO  01:01:10,651 - #13 =
INFO  01:01:10,651 - #36 new
INFO  01:01:10,652 - #16 int
INFO  01:01:10,652 - #50 [
INFO  01:01:10,652 - #15 3
INFO  01:01:10,652 - #51 ]
INFO  01:01:10,652 - #5 ;
INFO  01:01:10,652 - #16 i
INFO  01:01:10,652 - #13 =
INFO  01:01:10,652 - #15 0
INFO  01:01:10,652 - #5 ;
INFO  01:01:10,652 - #34 do
INFO  01:01:10,652 - #3 {
INFO  01:01:10,652 - #16 t2
INFO  01:01:10,652 - #43 .
INFO  01:01:10,652 - #16 niz
INFO  01:01:10,652 - #50 [
INFO  01:01:10,652 - #16 i
INFO  01:01:10,652 - #51 ]
INFO  01:01:10,653 - #13 =
INFO  01:01:10,653 - #16 t1
INFO  01:01:10,653 - #43 .
INFO  01:01:10,653 - #16 niz
INFO  01:01:10,653 - #50 [
INFO  01:01:10,653 - #16 i
INFO  01:01:10,653 - #51 ]
INFO  01:01:10,653 - #28 *
INFO  01:01:10,653 - #15 2
INFO  01:01:10,653 - #28 *
INFO  01:01:10,653 - #16 t2
INFO  01:01:10,653 - #43 .
INFO  01:01:10,653 - #16 a
INFO  01:01:10,653 - #5 ;
INFO  01:01:10,653 - #16 i
INFO  01:01:10,654 - #46 ++
INFO  01:01:10,654 - #5 ;
INFO  01:01:10,654 - #4 }
INFO  01:01:10,654 - #35 while
INFO  01:01:10,654 - #6 (
INFO  01:01:10,654 - #16 i
INFO  01:01:10,654 - #26 <
INFO  01:01:10,654 - #15 3
INFO  01:01:10,654 - #7 )
INFO  01:01:10,654 - #5 ;
INFO  01:01:10,654 - #9 print
INFO  01:01:10,654 - #6 (
INFO  01:01:10,654 - #16 t2
INFO  01:01:10,654 - #43 .
INFO  01:01:10,654 - #16 niz
INFO  01:01:10,654 - #50 [
INFO  01:01:10,654 - #15 0
INFO  01:01:10,654 - #51 ]
INFO  01:01:10,654 - #7 )
INFO  01:01:10,654 - #5 ;
INFO  01:01:10,654 - #9 print
INFO  01:01:10,654 - #6 (
INFO  01:01:10,654 - #16 t2
INFO  01:01:10,654 - #43 .
INFO  01:01:10,655 - #16 niz
INFO  01:01:10,655 - #50 [
INFO  01:01:10,655 - #15 1
INFO  01:01:10,655 - #51 ]
INFO  01:01:10,655 - #7 )
INFO  01:01:10,655 - #5 ;
INFO  01:01:10,655 - #9 print
INFO  01:01:10,655 - #6 (
INFO  01:01:10,655 - #16 t2
INFO  01:01:10,655 - #43 .
INFO  01:01:10,655 - #16 niz
INFO  01:01:10,655 - #50 [
INFO  01:01:10,655 - #15 2
INFO  01:01:10,655 - #51 ]
INFO  01:01:10,655 - #7 )
INFO  01:01:10,655 - #5 ;
INFO  01:01:10,655 - #9 print
INFO  01:01:10,655 - #6 (
INFO  01:01:10,655 - #16 eol
INFO  01:01:10,655 - #7 )
INFO  01:01:10,655 - #5 ;
INFO  01:01:10,655 - #16 i
INFO  01:01:10,655 - #13 =
INFO  01:01:10,655 - #15 0
INFO  01:01:10,655 - #5 ;
INFO  01:01:10,655 - #16 niz2
INFO  01:01:10,655 - #13 =
INFO  01:01:10,655 - #15 0
INFO  01:01:10,655 - #5 ;
INFO  01:01:10,655 - #34 do
INFO  01:01:10,655 - #3 {
INFO  01:01:10,655 - #16 niz2
INFO  01:01:10,655 - #13 =
INFO  01:01:10,655 - #16 niz2
INFO  01:01:10,655 - #11 +
INFO  01:01:10,655 - #16 t1
INFO  01:01:10,655 - #43 .
INFO  01:01:10,655 - #16 niz
INFO  01:01:10,655 - #50 [
INFO  01:01:10,655 - #16 i
INFO  01:01:10,655 - #51 ]
INFO  01:01:10,655 - #11 +
INFO  01:01:10,655 - #16 t2
INFO  01:01:10,655 - #43 .
INFO  01:01:10,656 - #16 niz
INFO  01:01:10,656 - #50 [
INFO  01:01:10,656 - #16 i
INFO  01:01:10,656 - #51 ]
INFO  01:01:10,656 - #5 ;
INFO  01:01:10,656 - #16 i
INFO  01:01:10,656 - #46 ++
INFO  01:01:10,656 - #5 ;
INFO  01:01:10,656 - #4 }
INFO  01:01:10,656 - #35 while
INFO  01:01:10,656 - #6 (
INFO  01:01:10,656 - #16 i
INFO  01:01:10,656 - #26 <
INFO  01:01:10,656 - #15 3
INFO  01:01:10,656 - #7 )
INFO  01:01:10,656 - #5 ;
INFO  01:01:10,656 - #9 print
INFO  01:01:10,656 - #6 (
INFO  01:01:10,656 - #16 niz2
INFO  01:01:10,656 - #7 )
INFO  01:01:10,656 - #5 ;
INFO  01:01:10,656 - #9 print
INFO  01:01:10,656 - #6 (
INFO  01:01:10,656 - #16 eol
INFO  01:01:10,656 - #7 )
INFO  01:01:10,656 - #5 ;
INFO  01:01:10,656 - #4 }
INFO  01:01:10,656 - #4 }
INFO  01:01:10,663 - Trenutan tip konstante je:  int na liniji 5
INFO  01:01:10,663 - Deklarisana promenljiva i na liniji 7
INFO  01:01:10,663 - Deklarisana promenljiva ibool na liniji 10
INFO  01:01:10,663 - Deklarisana promenljiva niz2 na liniji 12
INFO  01:01:10,663 - Deklarisana promenljiva niz na liniji 15
INFO  01:01:10,663 - Deklarisana promenljiva a na liniji 16
INFO  01:01:10,663 - Deklarisana je rekord :  Test na liniji 14
INFO  01:01:10,663 - Deklarisana promenljiva niz23 na liniji 20
INFO  01:01:10,663 - Deklarisana promenljiva a2 na liniji 21
INFO  01:01:10,663 - Deklarisana je rekord :  Test2 na liniji 19
INFO  01:01:10,663 - Deklarisana promenljiva t2 na liniji 24
INFO  01:01:10,663 - Deklarisana promenljiva t1 na liniji 24
INFO  01:01:10,664 - Obradjuje se funkcija sum na liniji 28
INFO  01:01:10,664 - Naveden argument d na liniji 28
INFO  01:01:10,664 - TypeNAME: bool
INFO  01:01:10,664 - Naveden argument z na liniji 28
ERROR 01:01:10,664 - Semanticka greska na liniji 31 nekompatibilni tipovi za aritmeticku operaciju!
INFO  01:01:10,664 - Obradjuje se funkcija inkrement na liniji 34
INFO  01:01:10,664 - Naveden argument inc na liniji 34
INFO  01:01:10,664 - TypeNAME: char
INFO  01:01:10,664 - Naveden argument a na liniji 34
INFO  01:01:10,664 - Deklarisana promenljiva pom na liniji 35
ERROR 01:01:10,664 - Semanticka greska na liniji 38 nekompatibilni tipovi prilikom dodele!
INFO  01:01:10,664 - Obradjuje se funkcija verify na liniji 44
INFO  01:01:10,665 - Pronadjen poziv funkcije sum na liniji 46
INFO  01:01:10,665 - Obradjuje se funkcija main na liniji 53
ERROR 01:01:10,665 - Semanticka greska na liniji 75 print prima samo num, char ili bool!
ERROR 01:01:10,665 - Semanticka greska na liniji 76 print prima samo num, char ili bool!
ERROR 01:01:10,665 - Semanticka greska na liniji 93  t1 mora biti int, char ili bool!
ERROR 01:01:10,665 - Semanticka greska na liniji 94  t1 mora biti int, char ili bool!
ERROR 01:01:10,665 - Semanticka greska na liniji 95  t1 mora biti int, char ili bool!
INFO  01:01:10,665 - Pronadjen poziv funkcije chr na liniji 98
ERROR 01:01:10,665 - Semanticka greska na liniji 100 print prima samo num, char ili bool!
ERROR 01:01:10,665 - Semanticka greska na liniji 103 print prima samo num, char ili bool!
ERROR 01:01:10,665 - Semanticka greska na liniji 113  t2 mora biti int, char ili bool!
ERROR 01:01:10,665 - Semanticka greska na liniji 114  t2 mora biti int, char ili bool!
ERROR 01:01:10,665 - Semanticka greska na liniji 115  t2 mora biti int, char ili bool!
ERROR 01:01:10,666 - Parsiranje NIJE uspesno zavrseno!
