INFO  22:01:01,437 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  22:01:01,466 - #2 program
INFO  22:01:01,466 - #16 p
INFO  22:01:01,467 - #48 const
INFO  22:01:01,467 - #16 int
INFO  22:01:01,467 - #16 size
INFO  22:01:01,467 - #13 =
INFO  22:01:01,467 - #15 10
INFO  22:01:01,467 - #5 ;
INFO  22:01:01,468 - #16 int
INFO  22:01:01,468 - #16 x
INFO  22:01:01,468 - #13 =
ERROR 22:01:01,468 - 
Sintaksna greska na liniji 4
INFO  22:01:01,468 - #15 5
INFO  22:01:01,468 - #8 ,
INFO  22:01:01,468 - #16 y
INFO  22:01:01,469 - #13 =
INFO  22:01:01,469 - #15 5
INFO  22:01:01,469 - #5 ;
INFO  22:01:01,469 - #32 class
INFO  22:01:01,469 - #16 Table
INFO  22:01:01,469 - #3 {
INFO  22:01:01,470 - #16 int
INFO  22:01:01,470 - #16 pos
INFO  22:01:01,470 - #50 [
INFO  22:01:01,470 - #51 ]
INFO  22:01:01,470 - #8 ,
INFO  22:01:01,470 - #16 neg
INFO  22:01:01,471 - #50 [
INFO  22:01:01,471 - #51 ]
INFO  22:01:01,471 - #5 ;
INFO  22:01:01,471 - #3 {
INFO  22:01:01,471 - #14 void
INFO  22:01:01,471 - #16 putp
INFO  22:01:01,471 - #6 (
INFO  22:01:01,471 - #16 int
INFO  22:01:01,471 - #16 a
INFO  22:01:01,471 - #8 ,
INFO  22:01:01,471 - #16 int
INFO  22:01:01,471 - #16 x
INFO  22:01:01,471 - #8 ,
INFO  22:01:01,471 - #16 int
INFO  22:01:01,471 - #16 y
INFO  22:01:01,472 - #7 )
INFO  22:01:01,473 - #3 {
INFO  22:01:01,473 - #40 this
INFO  22:01:01,473 - #43 .
INFO  22:01:01,473 - #16 pos
INFO  22:01:01,473 - #50 [
INFO  22:01:01,473 - #16 idx
INFO  22:01:01,473 - #51 ]
INFO  22:01:01,473 - #13 =
INFO  22:01:01,473 - #16 a
INFO  22:01:01,473 - #5 ;
INFO  22:01:01,474 - #4 }
INFO  22:01:01,474 - #14 void
INFO  22:01:01,474 - #16 putn
INFO  22:01:01,474 - #6 (
INFO  22:01:01,474 - #16 int
INFO  22:01:01,474 - #16 a
INFO  22:01:01,474 - #8 ,
INFO  22:01:01,474 - #16 int
INFO  22:01:01,474 - #16 idx
INFO  22:01:01,474 - #7 )
INFO  22:01:01,474 - #3 {
INFO  22:01:01,474 - #40 this
INFO  22:01:01,475 - #43 .
INFO  22:01:01,475 - #16 neg
INFO  22:01:01,475 - #50 [
INFO  22:01:01,475 - #16 idx
INFO  22:01:01,475 - #51 ]
INFO  22:01:01,475 - #13 =
INFO  22:01:01,475 - #16 a
INFO  22:01:01,476 - #5 ;
INFO  22:01:01,476 - #4 }
INFO  22:01:01,476 - #16 int
INFO  22:01:01,476 - #16 getp
INFO  22:01:01,476 - #6 (
INFO  22:01:01,476 - #16 int
INFO  22:01:01,476 - #16 idx
INFO  22:01:01,476 - #7 )
INFO  22:01:01,476 - #3 {
INFO  22:01:01,476 - #10 return
INFO  22:01:01,476 - #16 pos
INFO  22:01:01,476 - #50 [
INFO  22:01:01,477 - #16 idx
INFO  22:01:01,477 - #51 ]
INFO  22:01:01,477 - #5 ;
INFO  22:01:01,477 - #4 }
INFO  22:01:01,477 - #16 int
INFO  22:01:01,477 - #16 getn
INFO  22:01:01,477 - #6 (
INFO  22:01:01,477 - #16 int
INFO  22:01:01,477 - #16 idx
INFO  22:01:01,477 - #7 )
INFO  22:01:01,477 - #3 {
INFO  22:01:01,477 - #10 return
INFO  22:01:01,477 - #16 neg
INFO  22:01:01,478 - #50 [
INFO  22:01:01,478 - #16 idx
INFO  22:01:01,478 - #51 ]
INFO  22:01:01,478 - #5 ;
INFO  22:01:01,478 - #4 }
INFO  22:01:01,478 - #4 }
INFO  22:01:01,478 - #4 }
INFO  22:01:01,478 - #49 record
INFO  22:01:01,479 - #16 Board
INFO  22:01:01,479 - #3 {
INFO  22:01:01,479 - #16 int
INFO  22:01:01,479 - #16 rows
INFO  22:01:01,479 - #8 ,
INFO  22:01:01,479 - #16 columns
INFO  22:01:01,479 - #5 ;
INFO  22:01:01,479 - #4 }
INFO  22:01:01,479 - #16 Table
INFO  22:01:01,479 - #16 val
INFO  22:01:01,479 - #5 ;
INFO  22:01:01,479 - #16 Board
INFO  22:01:01,479 - #16 board
INFO  22:01:01,479 - #5 ;
INFO  22:01:01,479 - #3 {
INFO  22:01:01,479 - #14 void
INFO  22:01:01,479 - #16 f
INFO  22:01:01,479 - #6 (
INFO  22:01:01,479 - #16 char
INFO  22:01:01,479 - #16 ch
INFO  22:01:01,479 - #8 ,
INFO  22:01:01,479 - #16 int
INFO  22:01:01,480 - #16 a
INFO  22:01:01,480 - #8 ,
INFO  22:01:01,480 - #16 int
INFO  22:01:01,480 - #16 arg
INFO  22:01:01,480 - #7 )
INFO  22:01:01,483 - #16 int
INFO  22:01:01,483 - #16 x
INFO  22:01:01,483 - #5 ;
INFO  22:01:01,483 - #3 {
INFO  22:01:01,483 - #16 x
INFO  22:01:01,483 - #13 =
INFO  22:01:01,483 - #16 arg
INFO  22:01:01,483 - #5 ;
INFO  22:01:01,483 - #4 }
INFO  22:01:01,483 - #14 void
INFO  22:01:01,483 - #16 main
INFO  22:01:01,483 - #6 (
INFO  22:01:01,483 - #7 )
INFO  22:01:01,483 - #16 int
INFO  22:01:01,483 - #16 x
INFO  22:01:01,483 - #8 ,
INFO  22:01:01,483 - #16 i
INFO  22:01:01,483 - #5 ;
INFO  22:01:01,483 - #16 char
INFO  22:01:01,483 - #16 c
INFO  22:01:01,483 - #5 ;
INFO  22:01:01,483 - #3 {
INFO  22:01:01,483 - #16 val
INFO  22:01:01,483 - #13 =
INFO  22:01:01,483 - #36 new
INFO  22:01:01,483 - #16 Table
INFO  22:01:01,483 - #5 ;
INFO  22:01:01,483 - #16 val
INFO  22:01:01,483 - #43 .
INFO  22:01:01,483 - #16 pos
INFO  22:01:01,483 - #13 =
INFO  22:01:01,483 - #36 new
INFO  22:01:01,483 - #16 int
INFO  22:01:01,483 - #50 [
INFO  22:01:01,484 - #16 size
INFO  22:01:01,484 - #51 ]
INFO  22:01:01,484 - #5 ;
INFO  22:01:01,484 - #16 val
INFO  22:01:01,484 - #43 .
INFO  22:01:01,484 - #16 neg
INFO  22:01:01,484 - #13 =
INFO  22:01:01,484 - #36 new
INFO  22:01:01,484 - #16 int
INFO  22:01:01,484 - #50 [
INFO  22:01:01,485 - #16 size
INFO  22:01:01,485 - #51 ]
INFO  22:01:01,485 - #5 ;
INFO  22:01:01,485 - #37 read
INFO  22:01:01,485 - #6 (
INFO  22:01:01,485 - #16 x
INFO  22:01:01,485 - #7 )
INFO  22:01:01,485 - #5 ;
INFO  22:01:01,485 - #19 if
INFO  22:01:01,485 - #6 (
INFO  22:01:01,485 - #16 x
INFO  22:01:01,485 - #24 >
INFO  22:01:01,485 - #15 5
INFO  22:01:01,485 - #44 &&
INFO  22:01:01,485 - #16 x
INFO  22:01:01,485 - #22 ==
INFO  22:01:01,485 - #15 5
INFO  22:01:01,485 - #7 )
INFO  22:01:01,485 - #3 {
INFO  22:01:01,486 - #42 goto
INFO  22:01:01,486 - #16 skip
INFO  22:01:01,486 - #5 ;
INFO  22:01:01,486 - #4 }
INFO  22:01:01,486 - #16 i
INFO  22:01:01,486 - #13 =
INFO  22:01:01,486 - #15 0
INFO  22:01:01,486 - #5 ;
INFO  22:01:01,486 - #34 do
INFO  22:01:01,486 - #3 {
INFO  22:01:01,486 - #16 val
INFO  22:01:01,486 - #43 .
INFO  22:01:01,486 - #16 putp
INFO  22:01:01,486 - #6 (
INFO  22:01:01,486 - #15 0
INFO  22:01:01,487 - #8 ,
INFO  22:01:01,487 - #16 i
INFO  22:01:01,487 - #7 )
INFO  22:01:01,487 - #5 ;
INFO  22:01:01,487 - #16 val
INFO  22:01:01,487 - #43 .
INFO  22:01:01,487 - #16 putn
INFO  22:01:01,487 - #6 (
INFO  22:01:01,487 - #15 0
INFO  22:01:01,487 - #8 ,
INFO  22:01:01,487 - #16 i
INFO  22:01:01,487 - #7 )
INFO  22:01:01,487 - #5 ;
INFO  22:01:01,487 - #16 i
INFO  22:01:01,487 - #46 ++
INFO  22:01:01,487 - #5 ;
INFO  22:01:01,487 - #4 }
INFO  22:01:01,488 - #35 while
INFO  22:01:01,488 - #6 (
INFO  22:01:01,488 - #16 i
INFO  22:01:01,488 - #26 <
INFO  22:01:01,488 - #16 size
INFO  22:01:01,488 - #7 )
INFO  22:01:01,488 - #5 ;
INFO  22:01:01,488 - #16 skip
INFO  22:01:01,488 - #21 :
INFO  22:01:01,488 - #16 f
INFO  22:01:01,489 - #6 (
INFO  22:01:01,489 - #16 c
INFO  22:01:01,489 - #8 ,
INFO  22:01:01,489 - #16 x
INFO  22:01:01,489 - #8 ,
INFO  22:01:01,489 - #16 i
INFO  22:01:01,489 - #7 )
INFO  22:01:01,489 - #5 ;
INFO  22:01:01,489 - #16 board
INFO  22:01:01,489 - #13 =
INFO  22:01:01,489 - #36 new
INFO  22:01:01,489 - #16 Board
INFO  22:01:01,489 - #5 ;
INFO  22:01:01,489 - #37 read
INFO  22:01:01,489 - #6 (
INFO  22:01:01,489 - #16 board
INFO  22:01:01,489 - #43 .
INFO  22:01:01,489 - #16 rows
INFO  22:01:01,490 - #7 )
INFO  22:01:01,490 - #5 ;
INFO  22:01:01,490 - #16 x
INFO  22:01:01,490 - #13 =
INFO  22:01:01,490 - #16 board
INFO  22:01:01,492 - #43 .
INFO  22:01:01,492 - #16 rows
INFO  22:01:01,492 - #5 ;
INFO  22:01:01,492 - #34 do
INFO  22:01:01,492 - #3 {
INFO  22:01:01,492 - #19 if
INFO  22:01:01,492 - #6 (
INFO  22:01:01,492 - #16 x
INFO  22:01:01,492 - #27 <=
INFO  22:01:01,492 - #15 0
INFO  22:01:01,492 - #7 )
INFO  22:01:01,492 - #31 break
INFO  22:01:01,492 - #5 ;
INFO  22:01:01,492 - #19 if
INFO  22:01:01,492 - #6 (
INFO  22:01:01,492 - #15 0
INFO  22:01:01,492 - #27 <=
INFO  22:01:01,492 - #16 x
INFO  22:01:01,493 - #44 &&
INFO  22:01:01,493 - #16 x
INFO  22:01:01,493 - #26 <
INFO  22:01:01,493 - #16 size
INFO  22:01:01,493 - #7 )
INFO  22:01:01,493 - #3 {
INFO  22:01:01,493 - #16 val
INFO  22:01:01,493 - #43 .
INFO  22:01:01,493 - #16 putp
INFO  22:01:01,493 - #6 (
INFO  22:01:01,494 - #16 val
INFO  22:01:01,494 - #43 .
INFO  22:01:01,494 - #16 getp
INFO  22:01:01,494 - #6 (
INFO  22:01:01,494 - #16 x
INFO  22:01:01,494 - #7 )
INFO  22:01:01,494 - #11 +
INFO  22:01:01,494 - #15 1
INFO  22:01:01,494 - #7 )
INFO  22:01:01,494 - #5 ;
INFO  22:01:01,494 - #4 }
INFO  22:01:01,494 - #20 else
INFO  22:01:01,494 - #19 if
INFO  22:01:01,494 - #6 (
INFO  22:01:01,494 - #16 size
INFO  22:01:01,494 - #26 <
INFO  22:01:01,494 - #16 x
INFO  22:01:01,494 - #44 &&
INFO  22:01:01,494 - #16 x
INFO  22:01:01,494 - #26 <
INFO  22:01:01,494 - #15 0
INFO  22:01:01,494 - #7 )
INFO  22:01:01,495 - #3 {
INFO  22:01:01,495 - #16 val
INFO  22:01:01,495 - #43 .
INFO  22:01:01,495 - #16 putn
INFO  22:01:01,495 - #6 (
INFO  22:01:01,495 - #16 val
INFO  22:01:01,495 - #43 .
INFO  22:01:01,495 - #16 getn
INFO  22:01:01,495 - #6 (
INFO  22:01:01,495 - #16 x
INFO  22:01:01,496 - #7 )
INFO  22:01:01,496 - #11 +
INFO  22:01:01,496 - #15 1
INFO  22:01:01,496 - #7 )
INFO  22:01:01,496 - #5 ;
INFO  22:01:01,496 - #4 }
INFO  22:01:01,496 - #37 read
INFO  22:01:01,496 - #6 (
INFO  22:01:01,496 - #16 x
INFO  22:01:01,496 - #7 )
INFO  22:01:01,496 - #5 ;
INFO  22:01:01,496 - #4 }
INFO  22:01:01,496 - #35 while
INFO  22:01:01,496 - #6 (
INFO  22:01:01,496 - #18 true
INFO  22:01:01,496 - #7 )
INFO  22:01:01,496 - #5 ;
INFO  22:01:01,496 - #4 }
INFO  22:01:01,496 - #4 }
ERROR 22:01:01,496 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62
