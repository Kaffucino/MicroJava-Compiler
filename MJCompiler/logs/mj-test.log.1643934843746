INFO  01:33:35,048 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  01:33:35,076 - #2 program
INFO  01:33:35,077 - #16 test302
INFO  01:33:35,077 - #48 const
INFO  01:33:35,077 - #16 int
INFO  01:33:35,077 - #16 jedan
INFO  01:33:35,077 - #13 =
INFO  01:33:35,078 - #15 1
INFO  01:33:35,078 - #5 ;
INFO  01:33:35,078 - #16 int
INFO  01:33:35,078 - #16 i
INFO  01:33:35,079 - #5 ;
INFO  01:33:35,079 - #16 bool
INFO  01:33:35,079 - #16 ibool
INFO  01:33:35,079 - #5 ;
INFO  01:33:35,079 - #16 int
INFO  01:33:35,079 - #16 niz2
INFO  01:33:35,079 - #5 ;
INFO  01:33:35,079 - #49 record
INFO  01:33:35,079 - #16 Test
INFO  01:33:35,079 - #3 {
INFO  01:33:35,080 - #16 int
INFO  01:33:35,080 - #16 niz
INFO  01:33:35,082 - #50 [
INFO  01:33:35,082 - #51 ]
INFO  01:33:35,082 - #5 ;
INFO  01:33:35,082 - #16 int
INFO  01:33:35,082 - #16 a
INFO  01:33:35,082 - #5 ;
INFO  01:33:35,082 - #4 }
INFO  01:33:35,082 - #49 record
INFO  01:33:35,083 - #16 Test2
INFO  01:33:35,083 - #3 {
INFO  01:33:35,083 - #16 int
INFO  01:33:35,083 - #16 niz23
INFO  01:33:35,083 - #50 [
INFO  01:33:35,083 - #51 ]
INFO  01:33:35,083 - #5 ;
INFO  01:33:35,083 - #16 int
INFO  01:33:35,083 - #16 a2
INFO  01:33:35,083 - #5 ;
INFO  01:33:35,083 - #4 }
INFO  01:33:35,083 - #16 Test
INFO  01:33:35,083 - #16 t1
INFO  01:33:35,083 - #8 ,
INFO  01:33:35,083 - #16 t2
INFO  01:33:35,083 - #5 ;
INFO  01:33:35,083 - #3 {
INFO  01:33:35,084 - #16 int
INFO  01:33:35,084 - #16 sum
INFO  01:33:35,084 - #6 (
INFO  01:33:35,084 - #16 int
INFO  01:33:35,084 - #16 z
INFO  01:33:35,084 - #8 ,
INFO  01:33:35,084 - #16 int
INFO  01:33:35,084 - #16 d
INFO  01:33:35,084 - #7 )
INFO  01:33:35,085 - #3 {
INFO  01:33:35,085 - #10 return
INFO  01:33:35,085 - #16 z
INFO  01:33:35,085 - #11 +
INFO  01:33:35,086 - #16 d
INFO  01:33:35,087 - #5 ;
INFO  01:33:35,087 - #4 }
INFO  01:33:35,088 - #16 int
INFO  01:33:35,088 - #16 inkrement
INFO  01:33:35,088 - #6 (
INFO  01:33:35,088 - #16 int
INFO  01:33:35,088 - #16 a
INFO  01:33:35,091 - #8 ,
INFO  01:33:35,091 - #16 int
INFO  01:33:35,091 - #16 inc
INFO  01:33:35,091 - #7 )
INFO  01:33:35,091 - #16 int
INFO  01:33:35,091 - #16 pom
INFO  01:33:35,091 - #5 ;
INFO  01:33:35,091 - #3 {
INFO  01:33:35,091 - #19 if
INFO  01:33:35,091 - #6 (
INFO  01:33:35,091 - #16 inc
INFO  01:33:35,091 - #22 ==
INFO  01:33:35,091 - #16 jedan
INFO  01:33:35,092 - #7 )
INFO  01:33:35,093 - #16 pom
INFO  01:33:35,093 - #13 =
INFO  01:33:35,093 - #15 1
INFO  01:33:35,094 - #5 ;
INFO  01:33:35,094 - #20 else
INFO  01:33:35,094 - #19 if
INFO  01:33:35,094 - #6 (
INFO  01:33:35,094 - #16 inc
INFO  01:33:35,094 - #22 ==
INFO  01:33:35,094 - #15 2
INFO  01:33:35,094 - #7 )
INFO  01:33:35,095 - #16 pom
INFO  01:33:35,095 - #13 =
INFO  01:33:35,095 - #16 a
INFO  01:33:35,095 - #5 ;
INFO  01:33:35,095 - #10 return
INFO  01:33:35,095 - #16 sum
INFO  01:33:35,095 - #6 (
INFO  01:33:35,095 - #16 a
INFO  01:33:35,095 - #8 ,
INFO  01:33:35,095 - #16 pom
INFO  01:33:35,095 - #7 )
INFO  01:33:35,096 - #5 ;
INFO  01:33:35,096 - #4 }
INFO  01:33:35,096 - #16 bool
INFO  01:33:35,096 - #16 verify
INFO  01:33:35,096 - #6 (
INFO  01:33:35,096 - #7 )
INFO  01:33:35,097 - #3 {
INFO  01:33:35,097 - #16 sum
INFO  01:33:35,097 - #6 (
INFO  01:33:35,097 - #15 1
INFO  01:33:35,097 - #8 ,
INFO  01:33:35,097 - #15 2
INFO  01:33:35,097 - #7 )
INFO  01:33:35,097 - #5 ;
INFO  01:33:35,097 - #16 inkrement
INFO  01:33:35,097 - #6 (
INFO  01:33:35,097 - #15 2
INFO  01:33:35,097 - #8 ,
INFO  01:33:35,097 - #15 2
INFO  01:33:35,097 - #7 )
INFO  01:33:35,097 - #5 ;
INFO  01:33:35,097 - #9 print
INFO  01:33:35,097 - #6 (
INFO  01:33:35,098 - #17 'v'
INFO  01:33:35,098 - #7 )
INFO  01:33:35,098 - #5 ;
INFO  01:33:35,098 - #10 return
INFO  01:33:35,098 - #18 false
INFO  01:33:35,098 - #5 ;
INFO  01:33:35,098 - #4 }
INFO  01:33:35,098 - #14 void
INFO  01:33:35,098 - #16 main
INFO  01:33:35,098 - #6 (
INFO  01:33:35,098 - #7 )
INFO  01:33:35,098 - #3 {
INFO  01:33:35,098 - #19 if
INFO  01:33:35,098 - #6 (
INFO  01:33:35,099 - #15 1
INFO  01:33:35,099 - #23 !=
INFO  01:33:35,099 - #15 1
INFO  01:33:35,099 - #7 )
INFO  01:33:35,099 - #9 print
INFO  01:33:35,099 - #6 (
INFO  01:33:35,099 - #12 -
INFO  01:33:35,099 - #15 6
INFO  01:33:35,099 - #7 )
INFO  01:33:35,099 - #5 ;
INFO  01:33:35,099 - #20 else
INFO  01:33:35,099 - #9 print
INFO  01:33:35,099 - #6 (
INFO  01:33:35,099 - #15 0
INFO  01:33:35,099 - #7 )
INFO  01:33:35,099 - #5 ;
INFO  01:33:35,099 - #16 ibool
INFO  01:33:35,100 - #13 =
INFO  01:33:35,100 - #18 false
INFO  01:33:35,100 - #5 ;
INFO  01:33:35,100 - #16 i
INFO  01:33:35,100 - #13 =
INFO  01:33:35,100 - #15 0
INFO  01:33:35,100 - #5 ;
INFO  01:33:35,100 - #34 do
INFO  01:33:35,100 - #3 {
INFO  01:33:35,100 - #19 if
INFO  01:33:35,100 - #6 (
INFO  01:33:35,100 - #16 i
INFO  01:33:35,100 - #22 ==
INFO  01:33:35,100 - #15 2
INFO  01:33:35,100 - #7 )
INFO  01:33:35,100 - #16 ibool
INFO  01:33:35,100 - #13 =
INFO  01:33:35,101 - #18 true
INFO  01:33:35,101 - #5 ;
INFO  01:33:35,101 - #16 i
INFO  01:33:35,101 - #46 ++
INFO  01:33:35,101 - #5 ;
INFO  01:33:35,101 - #4 }
INFO  01:33:35,101 - #35 while
INFO  01:33:35,101 - #6 (
INFO  01:33:35,101 - #16 i
INFO  01:33:35,101 - #26 <
INFO  01:33:35,101 - #15 5
INFO  01:33:35,102 - #7 )
INFO  01:33:35,102 - #5 ;
INFO  01:33:35,102 - #19 if
INFO  01:33:35,102 - #6 (
INFO  01:33:35,102 - #16 ibool
INFO  01:33:35,102 - #7 )
INFO  01:33:35,102 - #19 if
INFO  01:33:35,102 - #6 (
INFO  01:33:35,102 - #16 i
INFO  01:33:35,102 - #22 ==
INFO  01:33:35,102 - #15 5
INFO  01:33:35,102 - #7 )
INFO  01:33:35,102 - #9 print
INFO  01:33:35,102 - #6 (
INFO  01:33:35,102 - #15 1
INFO  01:33:35,102 - #7 )
INFO  01:33:35,102 - #5 ;
INFO  01:33:35,102 - #20 else
INFO  01:33:35,102 - #9 print
INFO  01:33:35,102 - #6 (
INFO  01:33:35,102 - #12 -
INFO  01:33:35,102 - #15 1
INFO  01:33:35,102 - #7 )
INFO  01:33:35,102 - #5 ;
INFO  01:33:35,102 - #16 t1
INFO  01:33:35,103 - #13 =
INFO  01:33:35,103 - #36 new
INFO  01:33:35,103 - #16 Test
INFO  01:33:35,103 - #5 ;
INFO  01:33:35,103 - #16 t1
INFO  01:33:35,103 - #43 .
INFO  01:33:35,103 - #16 a
INFO  01:33:35,103 - #13 =
INFO  01:33:35,103 - #15 2
INFO  01:33:35,103 - #5 ;
INFO  01:33:35,103 - #16 t1
INFO  01:33:35,103 - #43 .
INFO  01:33:35,103 - #16 niz
INFO  01:33:35,103 - #13 =
INFO  01:33:35,103 - #36 new
INFO  01:33:35,103 - #16 int
INFO  01:33:35,103 - #50 [
INFO  01:33:35,103 - #15 3
INFO  01:33:35,103 - #51 ]
INFO  01:33:35,103 - #5 ;
INFO  01:33:35,103 - #16 t1
INFO  01:33:35,103 - #43 .
INFO  01:33:35,103 - #16 niz
INFO  01:33:35,103 - #50 [
INFO  01:33:35,103 - #15 0
INFO  01:33:35,103 - #51 ]
INFO  01:33:35,103 - #13 =
INFO  01:33:35,103 - #15 1
INFO  01:33:35,103 - #28 *
INFO  01:33:35,103 - #16 t1
INFO  01:33:35,104 - #43 .
INFO  01:33:35,104 - #16 a
INFO  01:33:35,104 - #5 ;
INFO  01:33:35,104 - #16 t1
INFO  01:33:35,104 - #43 .
INFO  01:33:35,104 - #16 niz
INFO  01:33:35,104 - #50 [
INFO  01:33:35,104 - #15 1
INFO  01:33:35,104 - #51 ]
INFO  01:33:35,104 - #13 =
INFO  01:33:35,104 - #15 2
INFO  01:33:35,104 - #28 *
INFO  01:33:35,104 - #16 t1
INFO  01:33:35,104 - #43 .
INFO  01:33:35,105 - #16 a
INFO  01:33:35,105 - #5 ;
INFO  01:33:35,105 - #16 t1
INFO  01:33:35,105 - #43 .
INFO  01:33:35,105 - #16 niz
INFO  01:33:35,105 - #50 [
INFO  01:33:35,105 - #15 2
INFO  01:33:35,105 - #51 ]
INFO  01:33:35,105 - #13 =
INFO  01:33:35,105 - #16 sum
INFO  01:33:35,105 - #6 (
INFO  01:33:35,105 - #16 t1
INFO  01:33:35,105 - #43 .
INFO  01:33:35,105 - #16 niz
INFO  01:33:35,105 - #50 [
INFO  01:33:35,105 - #15 1
INFO  01:33:35,105 - #51 ]
INFO  01:33:35,105 - #8 ,
INFO  01:33:35,105 - #16 t1
INFO  01:33:35,105 - #43 .
INFO  01:33:35,105 - #16 niz
INFO  01:33:35,105 - #50 [
INFO  01:33:35,105 - #15 0
INFO  01:33:35,105 - #51 ]
INFO  01:33:35,105 - #7 )
INFO  01:33:35,105 - #28 *
INFO  01:33:35,105 - #16 t1
INFO  01:33:35,105 - #43 .
INFO  01:33:35,105 - #16 a
INFO  01:33:35,105 - #11 +
INFO  01:33:35,105 - #15 1
INFO  01:33:35,106 - #5 ;
INFO  01:33:35,106 - #19 if
INFO  01:33:35,106 - #6 (
INFO  01:33:35,106 - #16 verify
INFO  01:33:35,106 - #6 (
INFO  01:33:35,106 - #7 )
INFO  01:33:35,106 - #7 )
INFO  01:33:35,106 - #9 print
INFO  01:33:35,106 - #6 (
INFO  01:33:35,106 - #16 ord
INFO  01:33:35,106 - #6 (
INFO  01:33:35,106 - #17 'A'
INFO  01:33:35,106 - #7 )
INFO  01:33:35,106 - #7 )
INFO  01:33:35,106 - #5 ;
INFO  01:33:35,106 - #20 else
INFO  01:33:35,106 - #9 print
INFO  01:33:35,106 - #6 (
INFO  01:33:35,106 - #16 ord
INFO  01:33:35,106 - #6 (
INFO  01:33:35,106 - #17 'a'
INFO  01:33:35,106 - #7 )
INFO  01:33:35,106 - #7 )
INFO  01:33:35,106 - #5 ;
INFO  01:33:35,106 - #9 print
INFO  01:33:35,106 - #6 (
INFO  01:33:35,106 - #16 eol
INFO  01:33:35,106 - #7 )
INFO  01:33:35,107 - #5 ;
INFO  01:33:35,107 - #16 i
INFO  01:33:35,107 - #13 =
INFO  01:33:35,107 - #15 0
INFO  01:33:35,107 - #5 ;
INFO  01:33:35,107 - #34 do
INFO  01:33:35,107 - #3 {
INFO  01:33:35,107 - #19 if
INFO  01:33:35,107 - #6 (
INFO  01:33:35,107 - #16 i
INFO  01:33:35,107 - #22 ==
INFO  01:33:35,107 - #15 3
INFO  01:33:35,107 - #7 )
INFO  01:33:35,107 - #3 {
INFO  01:33:35,107 - #16 i
INFO  01:33:35,107 - #46 ++
INFO  01:33:35,107 - #5 ;
INFO  01:33:35,107 - #39 continue
INFO  01:33:35,107 - #5 ;
INFO  01:33:35,107 - #4 }
INFO  01:33:35,107 - #19 if
INFO  01:33:35,107 - #6 (
INFO  01:33:35,108 - #16 i
INFO  01:33:35,108 - #22 ==
INFO  01:33:35,108 - #15 4
INFO  01:33:35,108 - #7 )
INFO  01:33:35,108 - #31 break
INFO  01:33:35,108 - #5 ;
INFO  01:33:35,108 - #16 i
INFO  01:33:35,108 - #13 =
INFO  01:33:35,108 - #16 inkrement
INFO  01:33:35,108 - #6 (
INFO  01:33:35,108 - #16 i
INFO  01:33:35,108 - #8 ,
INFO  01:33:35,108 - #15 1
INFO  01:33:35,108 - #7 )
INFO  01:33:35,108 - #5 ;
INFO  01:33:35,108 - #4 }
INFO  01:33:35,108 - #35 while
INFO  01:33:35,108 - #6 (
INFO  01:33:35,108 - #16 i
INFO  01:33:35,108 - #26 <
INFO  01:33:35,108 - #15 10
INFO  01:33:35,108 - #7 )
INFO  01:33:35,108 - #5 ;
INFO  01:33:35,108 - #19 if
INFO  01:33:35,108 - #6 (
INFO  01:33:35,108 - #16 i
INFO  01:33:35,108 - #22 ==
INFO  01:33:35,108 - #15 3
INFO  01:33:35,108 - #44 &&
INFO  01:33:35,108 - #16 verify
INFO  01:33:35,108 - #6 (
INFO  01:33:35,109 - #7 )
INFO  01:33:35,109 - #7 )
INFO  01:33:35,109 - #9 print
INFO  01:33:35,109 - #6 (
INFO  01:33:35,109 - #12 -
INFO  01:33:35,109 - #15 4
INFO  01:33:35,109 - #7 )
INFO  01:33:35,109 - #5 ;
INFO  01:33:35,109 - #20 else
INFO  01:33:35,109 - #9 print
INFO  01:33:35,109 - #6 (
INFO  01:33:35,109 - #15 4
INFO  01:33:35,109 - #7 )
INFO  01:33:35,109 - #5 ;
INFO  01:33:35,109 - #37 read
INFO  01:33:35,109 - #6 (
INFO  01:33:35,109 - #16 t1
INFO  01:33:35,109 - #43 .
INFO  01:33:35,109 - #16 niz
INFO  01:33:35,109 - #50 [
INFO  01:33:35,109 - #15 0
INFO  01:33:35,109 - #51 ]
INFO  01:33:35,109 - #7 )
INFO  01:33:35,109 - #5 ;
INFO  01:33:35,109 - #37 read
INFO  01:33:35,110 - #6 (
INFO  01:33:35,110 - #16 t1
INFO  01:33:35,110 - #43 .
INFO  01:33:35,110 - #16 niz
INFO  01:33:35,110 - #50 [
INFO  01:33:35,110 - #15 1
INFO  01:33:35,110 - #51 ]
INFO  01:33:35,110 - #7 )
INFO  01:33:35,110 - #5 ;
INFO  01:33:35,110 - #37 read
INFO  01:33:35,110 - #6 (
INFO  01:33:35,110 - #16 t1
INFO  01:33:35,110 - #43 .
INFO  01:33:35,110 - #16 niz
INFO  01:33:35,110 - #50 [
INFO  01:33:35,110 - #15 2
INFO  01:33:35,110 - #51 ]
INFO  01:33:35,110 - #7 )
INFO  01:33:35,110 - #5 ;
INFO  01:33:35,110 - #9 print
INFO  01:33:35,110 - #6 (
INFO  01:33:35,110 - #16 eol
INFO  01:33:35,110 - #7 )
INFO  01:33:35,110 - #5 ;
INFO  01:33:35,110 - #16 chr
INFO  01:33:35,110 - #6 (
INFO  01:33:35,110 - #15 3
INFO  01:33:35,110 - #7 )
INFO  01:33:35,110 - #5 ;
INFO  01:33:35,110 - #9 print
INFO  01:33:35,110 - #6 (
INFO  01:33:35,110 - #16 sum
INFO  01:33:35,110 - #6 (
INFO  01:33:35,110 - #16 sum
INFO  01:33:35,110 - #6 (
INFO  01:33:35,110 - #16 t1
INFO  01:33:35,110 - #43 .
INFO  01:33:35,110 - #16 niz
INFO  01:33:35,110 - #50 [
INFO  01:33:35,110 - #15 0
INFO  01:33:35,110 - #51 ]
INFO  01:33:35,110 - #8 ,
INFO  01:33:35,110 - #16 t1
INFO  01:33:35,110 - #43 .
INFO  01:33:35,110 - #16 niz
INFO  01:33:35,110 - #50 [
INFO  01:33:35,111 - #15 1
INFO  01:33:35,111 - #51 ]
INFO  01:33:35,111 - #7 )
INFO  01:33:35,111 - #8 ,
INFO  01:33:35,111 - #16 t1
INFO  01:33:35,111 - #43 .
INFO  01:33:35,111 - #16 niz
INFO  01:33:35,111 - #50 [
INFO  01:33:35,111 - #15 2
INFO  01:33:35,111 - #51 ]
INFO  01:33:35,111 - #7 )
INFO  01:33:35,111 - #7 )
INFO  01:33:35,111 - #5 ;
INFO  01:33:35,111 - #9 print
INFO  01:33:35,111 - #6 (
INFO  01:33:35,111 - #16 eol
INFO  01:33:35,111 - #7 )
INFO  01:33:35,111 - #5 ;
INFO  01:33:35,111 - #9 print
INFO  01:33:35,111 - #6 (
INFO  01:33:35,111 - #16 inkrement
INFO  01:33:35,111 - #6 (
INFO  01:33:35,111 - #16 t1
INFO  01:33:35,111 - #43 .
INFO  01:33:35,111 - #16 niz
INFO  01:33:35,111 - #50 [
INFO  01:33:35,111 - #15 2
INFO  01:33:35,111 - #51 ]
INFO  01:33:35,111 - #8 ,
INFO  01:33:35,111 - #15 2
INFO  01:33:35,111 - #7 )
INFO  01:33:35,111 - #7 )
INFO  01:33:35,111 - #5 ;
INFO  01:33:35,111 - #16 t2
INFO  01:33:35,111 - #13 =
INFO  01:33:35,111 - #36 new
INFO  01:33:35,111 - #16 Test
INFO  01:33:35,111 - #5 ;
INFO  01:33:35,111 - #16 t2
INFO  01:33:35,111 - #43 .
INFO  01:33:35,111 - #16 a
INFO  01:33:35,111 - #13 =
INFO  01:33:35,111 - #15 3
INFO  01:33:35,111 - #5 ;
INFO  01:33:35,111 - #16 t2
INFO  01:33:35,111 - #43 .
INFO  01:33:35,111 - #16 niz
INFO  01:33:35,112 - #13 =
INFO  01:33:35,112 - #36 new
INFO  01:33:35,112 - #16 int
INFO  01:33:35,112 - #50 [
INFO  01:33:35,112 - #15 3
INFO  01:33:35,112 - #51 ]
INFO  01:33:35,112 - #5 ;
INFO  01:33:35,112 - #16 i
INFO  01:33:35,112 - #13 =
INFO  01:33:35,112 - #15 0
INFO  01:33:35,112 - #5 ;
INFO  01:33:35,112 - #34 do
INFO  01:33:35,112 - #3 {
INFO  01:33:35,112 - #16 t2
INFO  01:33:35,112 - #43 .
INFO  01:33:35,112 - #16 niz
INFO  01:33:35,112 - #50 [
INFO  01:33:35,112 - #16 i
INFO  01:33:35,112 - #51 ]
INFO  01:33:35,112 - #13 =
INFO  01:33:35,112 - #16 t1
INFO  01:33:35,112 - #43 .
INFO  01:33:35,113 - #16 niz
INFO  01:33:35,113 - #50 [
INFO  01:33:35,113 - #16 i
INFO  01:33:35,113 - #51 ]
INFO  01:33:35,113 - #28 *
INFO  01:33:35,113 - #15 2
INFO  01:33:35,113 - #28 *
INFO  01:33:35,113 - #16 t2
INFO  01:33:35,113 - #43 .
INFO  01:33:35,113 - #16 a
INFO  01:33:35,113 - #5 ;
INFO  01:33:35,113 - #16 i
INFO  01:33:35,113 - #46 ++
INFO  01:33:35,113 - #5 ;
INFO  01:33:35,113 - #4 }
INFO  01:33:35,114 - #35 while
INFO  01:33:35,114 - #6 (
INFO  01:33:35,114 - #16 i
INFO  01:33:35,114 - #26 <
INFO  01:33:35,114 - #15 3
INFO  01:33:35,114 - #7 )
INFO  01:33:35,114 - #5 ;
INFO  01:33:35,114 - #9 print
INFO  01:33:35,114 - #6 (
INFO  01:33:35,114 - #16 t2
INFO  01:33:35,114 - #43 .
INFO  01:33:35,114 - #16 niz
INFO  01:33:35,114 - #50 [
INFO  01:33:35,114 - #15 0
INFO  01:33:35,114 - #51 ]
INFO  01:33:35,114 - #7 )
INFO  01:33:35,114 - #5 ;
INFO  01:33:35,114 - #9 print
INFO  01:33:35,114 - #6 (
INFO  01:33:35,114 - #16 t2
INFO  01:33:35,114 - #43 .
INFO  01:33:35,114 - #16 niz
INFO  01:33:35,114 - #50 [
INFO  01:33:35,114 - #15 1
INFO  01:33:35,114 - #51 ]
INFO  01:33:35,114 - #7 )
INFO  01:33:35,115 - #5 ;
INFO  01:33:35,115 - #9 print
INFO  01:33:35,115 - #6 (
INFO  01:33:35,115 - #16 t2
INFO  01:33:35,115 - #43 .
INFO  01:33:35,115 - #16 niz
INFO  01:33:35,115 - #50 [
INFO  01:33:35,115 - #15 2
INFO  01:33:35,115 - #51 ]
INFO  01:33:35,115 - #7 )
INFO  01:33:35,115 - #5 ;
INFO  01:33:35,115 - #9 print
INFO  01:33:35,115 - #6 (
INFO  01:33:35,115 - #16 eol
INFO  01:33:35,115 - #7 )
INFO  01:33:35,115 - #5 ;
INFO  01:33:35,115 - #16 i
INFO  01:33:35,115 - #13 =
INFO  01:33:35,115 - #15 0
INFO  01:33:35,115 - #5 ;
INFO  01:33:35,115 - #16 niz2
INFO  01:33:35,115 - #13 =
INFO  01:33:35,115 - #15 0
INFO  01:33:35,115 - #5 ;
INFO  01:33:35,115 - #34 do
INFO  01:33:35,115 - #3 {
INFO  01:33:35,115 - #16 niz2
INFO  01:33:35,115 - #13 =
INFO  01:33:35,115 - #16 niz2
INFO  01:33:35,115 - #11 +
INFO  01:33:35,115 - #16 t1
INFO  01:33:35,115 - #43 .
INFO  01:33:35,115 - #16 niz
INFO  01:33:35,115 - #50 [
INFO  01:33:35,115 - #16 i
INFO  01:33:35,115 - #51 ]
INFO  01:33:35,115 - #11 +
INFO  01:33:35,115 - #16 t2
INFO  01:33:35,115 - #43 .
INFO  01:33:35,115 - #16 niz
INFO  01:33:35,115 - #50 [
INFO  01:33:35,116 - #16 i
INFO  01:33:35,116 - #51 ]
INFO  01:33:35,116 - #5 ;
INFO  01:33:35,116 - #16 i
INFO  01:33:35,116 - #46 ++
INFO  01:33:35,116 - #5 ;
INFO  01:33:35,116 - #4 }
INFO  01:33:35,116 - #35 while
INFO  01:33:35,116 - #6 (
INFO  01:33:35,116 - #16 i
INFO  01:33:35,116 - #26 <
INFO  01:33:35,116 - #15 3
INFO  01:33:35,116 - #7 )
INFO  01:33:35,116 - #5 ;
INFO  01:33:35,116 - #9 print
INFO  01:33:35,116 - #6 (
INFO  01:33:35,116 - #16 niz2
INFO  01:33:35,116 - #7 )
INFO  01:33:35,116 - #5 ;
INFO  01:33:35,116 - #9 print
INFO  01:33:35,116 - #6 (
INFO  01:33:35,116 - #16 eol
INFO  01:33:35,116 - #7 )
INFO  01:33:35,116 - #5 ;
INFO  01:33:35,116 - #4 }
INFO  01:33:35,116 - #4 }
INFO  01:33:35,123 - Trenutan tip konstante je:  int na liniji 5
INFO  01:33:35,123 - Deklarisana promenljiva i na liniji 7
INFO  01:33:35,123 - Deklarisana promenljiva ibool na liniji 10
INFO  01:33:35,123 - Deklarisana promenljiva niz2 na liniji 12
INFO  01:33:35,123 - Deklarisana promenljiva niz na liniji 15
INFO  01:33:35,123 - Deklarisana promenljiva a na liniji 16
INFO  01:33:35,123 - Deklarisana je rekord :  Test na liniji 14
INFO  01:33:35,123 - Deklarisana promenljiva niz23 na liniji 20
INFO  01:33:35,124 - Deklarisana promenljiva a2 na liniji 21
INFO  01:33:35,124 - Deklarisana je rekord :  Test2 na liniji 19
INFO  01:33:35,124 - Deklarisana promenljiva t2 na liniji 24
INFO  01:33:35,124 - Deklarisana promenljiva t1 na liniji 24
INFO  01:33:35,124 - Obradjuje se funkcija sum na liniji 28
INFO  01:33:35,124 - Naveden argument d na liniji 28
INFO  01:33:35,124 - TypeNAME: int
INFO  01:33:35,124 - Naveden argument z na liniji 28
INFO  01:33:35,124 - TypeNAME: int
INFO  01:33:35,124 - Obradjuje se funkcija inkrement na liniji 34
INFO  01:33:35,124 - Naveden argument inc na liniji 34
INFO  01:33:35,124 - TypeNAME: int
INFO  01:33:35,124 - Naveden argument a na liniji 34
INFO  01:33:35,124 - TypeNAME: int
INFO  01:33:35,124 - Deklarisana promenljiva pom na liniji 35
INFO  01:33:35,124 - Obradjuje se funkcija verify na liniji 44
INFO  01:33:35,124 - Pronadjen poziv funkcije sum na liniji 46
ERROR 01:33:35,124 - Greska na liniji 46 Stvarni argmenti ne odgovaraju formalnim u funkciji: 2sum
INFO  01:33:35,124 - Pronadjen poziv funkcije inkrement na liniji 47
ERROR 01:33:35,125 - Greska na liniji 47 Stvarni argmenti ne odgovaraju formalnim u funkciji: 2inkrement
INFO  01:33:35,125 - Obradjuje se funkcija main na liniji 53
ERROR 01:33:35,125 - Semanticka greska na liniji 75 print prima samo num, char ili bool!
ERROR 01:33:35,125 - Semanticka greska na liniji 76 print prima samo num, char ili bool!
ERROR 01:33:35,125 - Semanticka greska na liniji 93  t1 mora biti int, char ili bool!
ERROR 01:33:35,125 - Semanticka greska na liniji 94  t1 mora biti int, char ili bool!
ERROR 01:33:35,125 - Semanticka greska na liniji 95  t1 mora biti int, char ili bool!
INFO  01:33:35,125 - Pronadjen poziv funkcije chr na liniji 98
ERROR 01:33:35,125 - Semanticka greska na liniji 100 print prima samo num, char ili bool!
ERROR 01:33:35,125 - Semanticka greska na liniji 103 print prima samo num, char ili bool!
ERROR 01:33:35,125 - Semanticka greska na liniji 113  t2 mora biti int, char ili bool!
ERROR 01:33:35,125 - Semanticka greska na liniji 114  t2 mora biti int, char ili bool!
ERROR 01:33:35,125 - Semanticka greska na liniji 115  t2 mora biti int, char ili bool!
ERROR 01:33:35,126 - Parsiranje NIJE uspesno zavrseno!
