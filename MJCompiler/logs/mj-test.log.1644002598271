INFO  20:16:50,569 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  20:16:50,609 - #2 program
INFO  20:16:50,609 - #16 test302
INFO  20:16:50,609 - #48 const
INFO  20:16:50,610 - #16 int
INFO  20:16:50,610 - #16 jedan
INFO  20:16:50,611 - #13 =
INFO  20:16:50,611 - #15 1
INFO  20:16:50,611 - #5 ;
INFO  20:16:50,611 - #48 const
INFO  20:16:50,612 - #16 char
INFO  20:16:50,612 - #16 Cofa
INFO  20:16:50,612 - #13 =
INFO  20:16:50,612 - #17 'a'
INFO  20:16:50,612 - #5 ;
INFO  20:16:50,612 - #16 int
INFO  20:16:50,612 - #16 i
INFO  20:16:50,613 - #5 ;
INFO  20:16:50,613 - #16 bool
INFO  20:16:50,613 - #16 ibool
INFO  20:16:50,614 - #5 ;
INFO  20:16:50,614 - #16 char
INFO  20:16:50,614 - #16 niz2
INFO  20:16:50,615 - #5 ;
INFO  20:16:50,615 - #49 record
INFO  20:16:50,615 - #16 Test
INFO  20:16:50,615 - #3 {
INFO  20:16:50,616 - #16 int
INFO  20:16:50,616 - #16 niz
INFO  20:16:50,616 - #50 [
INFO  20:16:50,616 - #51 ]
INFO  20:16:50,616 - #5 ;
INFO  20:16:50,616 - #16 int
INFO  20:16:50,616 - #16 a
INFO  20:16:50,616 - #5 ;
INFO  20:16:50,617 - #4 }
INFO  20:16:50,617 - #49 record
INFO  20:16:50,617 - #16 Test2
INFO  20:16:50,617 - #3 {
INFO  20:16:50,617 - #16 int
INFO  20:16:50,617 - #16 niz23
INFO  20:16:50,617 - #50 [
INFO  20:16:50,617 - #51 ]
INFO  20:16:50,618 - #5 ;
INFO  20:16:50,618 - #16 int
INFO  20:16:50,618 - #16 a2
INFO  20:16:50,618 - #5 ;
INFO  20:16:50,618 - #4 }
INFO  20:16:50,618 - #16 Test
INFO  20:16:50,618 - #16 t1
INFO  20:16:50,618 - #8 ,
INFO  20:16:50,618 - #16 t2
INFO  20:16:50,618 - #5 ;
INFO  20:16:50,618 - #3 {
INFO  20:16:50,619 - #16 char
INFO  20:16:50,619 - #16 sum
INFO  20:16:50,619 - #6 (
INFO  20:16:50,619 - #16 int
INFO  20:16:50,619 - #16 z
INFO  20:16:50,619 - #8 ,
INFO  20:16:50,619 - #16 int
INFO  20:16:50,619 - #16 d
INFO  20:16:50,619 - #7 )
INFO  20:16:50,620 - #3 {
INFO  20:16:50,621 - #10 return
INFO  20:16:50,621 - #17 'a'
INFO  20:16:50,621 - #5 ;
INFO  20:16:50,627 - #4 }
INFO  20:16:50,628 - #16 int
INFO  20:16:50,630 - #16 inkrement
INFO  20:16:50,631 - #6 (
INFO  20:16:50,631 - #16 int
INFO  20:16:50,631 - #16 a
INFO  20:16:50,631 - #8 ,
INFO  20:16:50,631 - #16 int
INFO  20:16:50,631 - #16 inc
INFO  20:16:50,631 - #7 )
INFO  20:16:50,631 - #16 int
INFO  20:16:50,631 - #16 pom
INFO  20:16:50,631 - #5 ;
INFO  20:16:50,631 - #3 {
INFO  20:16:50,631 - #19 if
INFO  20:16:50,631 - #6 (
INFO  20:16:50,631 - #16 inc
INFO  20:16:50,631 - #22 ==
INFO  20:16:50,632 - #16 jedan
INFO  20:16:50,632 - #7 )
INFO  20:16:50,634 - #16 pom
INFO  20:16:50,634 - #13 =
INFO  20:16:50,634 - #15 1
INFO  20:16:50,634 - #5 ;
INFO  20:16:50,635 - #20 else
INFO  20:16:50,635 - #19 if
INFO  20:16:50,635 - #6 (
INFO  20:16:50,635 - #16 inc
INFO  20:16:50,635 - #22 ==
INFO  20:16:50,635 - #15 2
INFO  20:16:50,635 - #7 )
INFO  20:16:50,635 - #16 pom
INFO  20:16:50,635 - #13 =
INFO  20:16:50,635 - #16 a
INFO  20:16:50,635 - #5 ;
INFO  20:16:50,635 - #10 return
INFO  20:16:50,636 - #16 sum
INFO  20:16:50,636 - #6 (
INFO  20:16:50,636 - #16 Cofa
INFO  20:16:50,636 - #8 ,
INFO  20:16:50,636 - #16 pom
INFO  20:16:50,637 - #7 )
INFO  20:16:50,638 - #5 ;
INFO  20:16:50,638 - #4 }
INFO  20:16:50,638 - #16 bool
INFO  20:16:50,638 - #16 verify
INFO  20:16:50,638 - #6 (
INFO  20:16:50,638 - #7 )
INFO  20:16:50,638 - #3 {
INFO  20:16:50,638 - #16 inkrement
INFO  20:16:50,638 - #6 (
INFO  20:16:50,638 - #15 2
INFO  20:16:50,638 - #8 ,
INFO  20:16:50,638 - #16 sum
INFO  20:16:50,638 - #6 (
INFO  20:16:50,639 - #15 1
INFO  20:16:50,639 - #8 ,
INFO  20:16:50,639 - #15 3
INFO  20:16:50,639 - #7 )
INFO  20:16:50,639 - #7 )
INFO  20:16:50,639 - #5 ;
INFO  20:16:50,639 - #16 inkrement
INFO  20:16:50,639 - #6 (
INFO  20:16:50,639 - #15 2
INFO  20:16:50,639 - #8 ,
INFO  20:16:50,639 - #15 2
INFO  20:16:50,639 - #7 )
INFO  20:16:50,639 - #5 ;
INFO  20:16:50,639 - #9 print
INFO  20:16:50,639 - #6 (
INFO  20:16:50,639 - #17 'v'
INFO  20:16:50,639 - #7 )
INFO  20:16:50,639 - #5 ;
INFO  20:16:50,640 - #10 return
INFO  20:16:50,640 - #18 false
INFO  20:16:50,640 - #5 ;
INFO  20:16:50,641 - #4 }
INFO  20:16:50,641 - #14 void
INFO  20:16:50,641 - #16 main
INFO  20:16:50,641 - #6 (
INFO  20:16:50,641 - #7 )
INFO  20:16:50,641 - #3 {
INFO  20:16:50,641 - #19 if
INFO  20:16:50,641 - #6 (
INFO  20:16:50,641 - #15 1
INFO  20:16:50,641 - #23 !=
INFO  20:16:50,641 - #15 1
INFO  20:16:50,642 - #7 )
INFO  20:16:50,642 - #9 print
INFO  20:16:50,642 - #6 (
INFO  20:16:50,642 - #12 -
INFO  20:16:50,642 - #15 6
INFO  20:16:50,642 - #7 )
INFO  20:16:50,642 - #5 ;
INFO  20:16:50,642 - #20 else
INFO  20:16:50,642 - #9 print
INFO  20:16:50,642 - #6 (
INFO  20:16:50,643 - #15 0
INFO  20:16:50,644 - #7 )
INFO  20:16:50,644 - #5 ;
INFO  20:16:50,644 - #16 ibool
INFO  20:16:50,644 - #13 =
INFO  20:16:50,644 - #18 false
INFO  20:16:50,644 - #5 ;
INFO  20:16:50,644 - #16 i
INFO  20:16:50,644 - #13 =
INFO  20:16:50,644 - #15 0
INFO  20:16:50,644 - #5 ;
INFO  20:16:50,644 - #34 do
INFO  20:16:50,644 - #3 {
INFO  20:16:50,645 - #19 if
INFO  20:16:50,645 - #6 (
INFO  20:16:50,645 - #16 i
INFO  20:16:50,645 - #22 ==
INFO  20:16:50,645 - #15 2
INFO  20:16:50,645 - #7 )
INFO  20:16:50,645 - #16 ibool
INFO  20:16:50,645 - #13 =
INFO  20:16:50,645 - #18 true
INFO  20:16:50,645 - #5 ;
INFO  20:16:50,645 - #16 i
INFO  20:16:50,645 - #46 ++
INFO  20:16:50,645 - #5 ;
INFO  20:16:50,645 - #4 }
INFO  20:16:50,645 - #35 while
INFO  20:16:50,646 - #6 (
INFO  20:16:50,646 - #16 i
INFO  20:16:50,646 - #26 <
INFO  20:16:50,646 - #15 5
INFO  20:16:50,647 - #7 )
INFO  20:16:50,647 - #5 ;
INFO  20:16:50,647 - #19 if
INFO  20:16:50,647 - #6 (
INFO  20:16:50,647 - #16 ibool
INFO  20:16:50,647 - #7 )
INFO  20:16:50,647 - #19 if
INFO  20:16:50,647 - #6 (
INFO  20:16:50,647 - #16 i
INFO  20:16:50,647 - #22 ==
INFO  20:16:50,648 - #15 5
INFO  20:16:50,648 - #7 )
INFO  20:16:50,648 - #9 print
INFO  20:16:50,648 - #6 (
INFO  20:16:50,648 - #15 1
INFO  20:16:50,648 - #7 )
INFO  20:16:50,648 - #5 ;
INFO  20:16:50,648 - #20 else
INFO  20:16:50,648 - #9 print
INFO  20:16:50,648 - #6 (
INFO  20:16:50,648 - #12 -
INFO  20:16:50,648 - #15 1
INFO  20:16:50,648 - #7 )
INFO  20:16:50,648 - #5 ;
INFO  20:16:50,648 - #16 t1
INFO  20:16:50,648 - #13 =
INFO  20:16:50,648 - #36 new
INFO  20:16:50,648 - #16 Test
INFO  20:16:50,648 - #5 ;
INFO  20:16:50,648 - #16 t1
INFO  20:16:50,648 - #43 .
INFO  20:16:50,648 - #16 a
INFO  20:16:50,648 - #13 =
INFO  20:16:50,649 - #15 2
INFO  20:16:50,649 - #5 ;
INFO  20:16:50,649 - #16 t1
INFO  20:16:50,649 - #43 .
INFO  20:16:50,649 - #16 niz
INFO  20:16:50,649 - #13 =
INFO  20:16:50,649 - #36 new
INFO  20:16:50,649 - #16 int
INFO  20:16:50,649 - #50 [
INFO  20:16:50,649 - #15 3
INFO  20:16:50,649 - #51 ]
INFO  20:16:50,649 - #5 ;
INFO  20:16:50,649 - #16 t1
INFO  20:16:50,649 - #43 .
INFO  20:16:50,649 - #16 niz
INFO  20:16:50,649 - #50 [
INFO  20:16:50,649 - #15 0
INFO  20:16:50,649 - #51 ]
INFO  20:16:50,649 - #13 =
INFO  20:16:50,649 - #15 1
INFO  20:16:50,649 - #28 *
INFO  20:16:50,649 - #16 t1
INFO  20:16:50,650 - #43 .
INFO  20:16:50,650 - #16 a
INFO  20:16:50,650 - #5 ;
INFO  20:16:50,650 - #16 t1
INFO  20:16:50,650 - #43 .
INFO  20:16:50,651 - #16 niz
INFO  20:16:50,651 - #50 [
INFO  20:16:50,651 - #15 1
INFO  20:16:50,651 - #51 ]
INFO  20:16:50,651 - #13 =
INFO  20:16:50,651 - #15 2
INFO  20:16:50,651 - #28 *
INFO  20:16:50,651 - #16 t1
INFO  20:16:50,651 - #43 .
INFO  20:16:50,651 - #16 a
INFO  20:16:50,651 - #5 ;
INFO  20:16:50,651 - #16 t1
INFO  20:16:50,651 - #43 .
INFO  20:16:50,651 - #16 niz
INFO  20:16:50,651 - #50 [
INFO  20:16:50,651 - #15 2
INFO  20:16:50,651 - #51 ]
INFO  20:16:50,651 - #13 =
INFO  20:16:50,651 - #16 sum
INFO  20:16:50,651 - #6 (
INFO  20:16:50,651 - #16 t1
INFO  20:16:50,651 - #43 .
INFO  20:16:50,651 - #16 niz
INFO  20:16:50,651 - #50 [
INFO  20:16:50,651 - #15 1
INFO  20:16:50,651 - #51 ]
INFO  20:16:50,651 - #8 ,
INFO  20:16:50,651 - #16 t1
INFO  20:16:50,651 - #43 .
INFO  20:16:50,652 - #16 niz
INFO  20:16:50,652 - #50 [
INFO  20:16:50,652 - #15 0
INFO  20:16:50,652 - #51 ]
INFO  20:16:50,652 - #7 )
INFO  20:16:50,652 - #28 *
INFO  20:16:50,652 - #16 t1
INFO  20:16:50,652 - #43 .
INFO  20:16:50,652 - #16 a
INFO  20:16:50,652 - #11 +
INFO  20:16:50,652 - #15 1
INFO  20:16:50,653 - #5 ;
INFO  20:16:50,654 - #19 if
INFO  20:16:50,654 - #6 (
INFO  20:16:50,654 - #16 verify
INFO  20:16:50,654 - #6 (
INFO  20:16:50,654 - #7 )
ERROR 20:16:50,654 - 
Sintaksna greska na liniji 80
INFO  20:16:50,654 - #7 )
INFO  20:16:50,654 - #9 print
INFO  20:16:50,654 - #6 (
INFO  20:16:50,655 - #16 ord
ERROR 20:16:50,655 - Izvrsen oporavak do ) u liniji 80
INFO  20:16:50,655 - #6 (
INFO  20:16:50,655 - #17 'A'
INFO  20:16:50,655 - #7 )
INFO  20:16:50,655 - #7 )
INFO  20:16:50,655 - #5 ;
INFO  20:16:50,656 - #20 else
INFO  20:16:50,656 - #9 print
INFO  20:16:50,656 - #6 (
INFO  20:16:50,656 - #16 ord
INFO  20:16:50,656 - #6 (
INFO  20:16:50,656 - #17 'a'
INFO  20:16:50,656 - #7 )
INFO  20:16:50,656 - #7 )
INFO  20:16:50,656 - #5 ;
INFO  20:16:50,656 - #9 print
INFO  20:16:50,656 - #6 (
INFO  20:16:50,656 - #16 eol
INFO  20:16:50,656 - #7 )
INFO  20:16:50,656 - #5 ;
INFO  20:16:50,656 - #16 i
INFO  20:16:50,656 - #13 =
INFO  20:16:50,656 - #15 0
INFO  20:16:50,656 - #5 ;
INFO  20:16:50,657 - #34 do
INFO  20:16:50,657 - #3 {
INFO  20:16:50,657 - #19 if
INFO  20:16:50,657 - #6 (
INFO  20:16:50,657 - #16 i
INFO  20:16:50,657 - #22 ==
INFO  20:16:50,657 - #15 3
INFO  20:16:50,657 - #7 )
INFO  20:16:50,657 - #3 {
INFO  20:16:50,657 - #16 i
INFO  20:16:50,657 - #46 ++
INFO  20:16:50,657 - #5 ;
INFO  20:16:50,657 - #39 continue
INFO  20:16:50,657 - #5 ;
INFO  20:16:50,657 - #4 }
INFO  20:16:50,658 - #19 if
INFO  20:16:50,658 - #6 (
INFO  20:16:50,658 - #16 i
INFO  20:16:50,658 - #22 ==
INFO  20:16:50,658 - #15 4
INFO  20:16:50,658 - #7 )
INFO  20:16:50,658 - #31 break
INFO  20:16:50,658 - #5 ;
INFO  20:16:50,659 - #16 i
INFO  20:16:50,659 - #13 =
INFO  20:16:50,659 - #16 inkrement
INFO  20:16:50,659 - #6 (
INFO  20:16:50,659 - #16 i
INFO  20:16:50,659 - #8 ,
INFO  20:16:50,659 - #15 1
INFO  20:16:50,659 - #7 )
INFO  20:16:50,659 - #5 ;
INFO  20:16:50,659 - #4 }
INFO  20:16:50,659 - #35 while
INFO  20:16:50,659 - #6 (
INFO  20:16:50,659 - #16 i
INFO  20:16:50,659 - #26 <
INFO  20:16:50,659 - #15 10
INFO  20:16:50,659 - #7 )
INFO  20:16:50,659 - #5 ;
INFO  20:16:50,659 - #19 if
INFO  20:16:50,659 - #6 (
INFO  20:16:50,659 - #16 i
INFO  20:16:50,660 - #22 ==
INFO  20:16:50,660 - #15 3
INFO  20:16:50,660 - #44 &&
INFO  20:16:50,660 - #16 verify
INFO  20:16:50,660 - #6 (
INFO  20:16:50,660 - #7 )
ERROR 20:16:50,660 - 
Sintaksna greska na liniji 95
INFO  20:16:50,660 - #7 )
INFO  20:16:50,660 - #9 print
INFO  20:16:50,660 - #6 (
INFO  20:16:50,660 - #12 -
ERROR 20:16:50,660 - Izvrsen oporavak do ) u liniji 95
INFO  20:16:50,660 - #15 4
INFO  20:16:50,660 - #7 )
INFO  20:16:50,660 - #5 ;
INFO  20:16:50,660 - #20 else
INFO  20:16:50,660 - #9 print
INFO  20:16:50,660 - #6 (
INFO  20:16:50,660 - #15 4
INFO  20:16:50,660 - #7 )
INFO  20:16:50,660 - #5 ;
INFO  20:16:50,660 - #37 read
INFO  20:16:50,661 - #6 (
INFO  20:16:50,661 - #16 t1
INFO  20:16:50,661 - #43 .
INFO  20:16:50,661 - #16 niz
INFO  20:16:50,661 - #50 [
INFO  20:16:50,661 - #15 0
INFO  20:16:50,661 - #51 ]
INFO  20:16:50,661 - #7 )
INFO  20:16:50,661 - #5 ;
INFO  20:16:50,661 - #37 read
INFO  20:16:50,661 - #6 (
INFO  20:16:50,661 - #16 t1
INFO  20:16:50,661 - #43 .
INFO  20:16:50,661 - #16 niz
INFO  20:16:50,661 - #50 [
INFO  20:16:50,661 - #15 1
INFO  20:16:50,661 - #51 ]
INFO  20:16:50,661 - #7 )
INFO  20:16:50,661 - #5 ;
INFO  20:16:50,661 - #37 read
INFO  20:16:50,661 - #6 (
INFO  20:16:50,661 - #16 t1
INFO  20:16:50,661 - #43 .
INFO  20:16:50,661 - #16 niz
INFO  20:16:50,661 - #50 [
INFO  20:16:50,661 - #15 2
INFO  20:16:50,661 - #51 ]
INFO  20:16:50,661 - #7 )
INFO  20:16:50,661 - #5 ;
INFO  20:16:50,661 - #9 print
INFO  20:16:50,661 - #6 (
INFO  20:16:50,661 - #16 eol
INFO  20:16:50,661 - #7 )
INFO  20:16:50,661 - #5 ;
INFO  20:16:50,661 - #16 chr
INFO  20:16:50,661 - #6 (
INFO  20:16:50,661 - #15 3
INFO  20:16:50,661 - #7 )
INFO  20:16:50,661 - #5 ;
INFO  20:16:50,661 - #9 print
INFO  20:16:50,661 - #6 (
INFO  20:16:50,662 - #16 sum
INFO  20:16:50,662 - #6 (
INFO  20:16:50,662 - #16 sum
INFO  20:16:50,662 - #6 (
INFO  20:16:50,662 - #16 t1
INFO  20:16:50,662 - #43 .
INFO  20:16:50,662 - #16 niz
INFO  20:16:50,662 - #50 [
INFO  20:16:50,662 - #15 0
INFO  20:16:50,662 - #51 ]
INFO  20:16:50,662 - #8 ,
INFO  20:16:50,662 - #16 t1
INFO  20:16:50,662 - #43 .
INFO  20:16:50,662 - #16 niz
INFO  20:16:50,662 - #50 [
INFO  20:16:50,662 - #15 1
INFO  20:16:50,662 - #51 ]
INFO  20:16:50,662 - #7 )
INFO  20:16:50,662 - #8 ,
INFO  20:16:50,662 - #16 t1
INFO  20:16:50,662 - #43 .
INFO  20:16:50,662 - #16 niz
INFO  20:16:50,662 - #50 [
INFO  20:16:50,662 - #15 2
INFO  20:16:50,662 - #51 ]
INFO  20:16:50,662 - #7 )
INFO  20:16:50,662 - #7 )
INFO  20:16:50,662 - #5 ;
INFO  20:16:50,662 - #9 print
INFO  20:16:50,662 - #6 (
INFO  20:16:50,662 - #16 eol
INFO  20:16:50,662 - #7 )
INFO  20:16:50,662 - #5 ;
INFO  20:16:50,662 - #9 print
INFO  20:16:50,662 - #6 (
INFO  20:16:50,662 - #16 inkrement
INFO  20:16:50,662 - #6 (
INFO  20:16:50,662 - #16 t1
INFO  20:16:50,663 - #43 .
INFO  20:16:50,663 - #16 niz
INFO  20:16:50,663 - #50 [
INFO  20:16:50,663 - #15 2
INFO  20:16:50,663 - #51 ]
INFO  20:16:50,663 - #8 ,
INFO  20:16:50,663 - #15 2
INFO  20:16:50,663 - #7 )
INFO  20:16:50,663 - #7 )
INFO  20:16:50,663 - #5 ;
INFO  20:16:50,663 - #16 t2
INFO  20:16:50,663 - #13 =
INFO  20:16:50,663 - #36 new
INFO  20:16:50,663 - #16 Test
INFO  20:16:50,663 - #5 ;
INFO  20:16:50,663 - #16 t2
INFO  20:16:50,663 - #43 .
INFO  20:16:50,667 - #16 a
INFO  20:16:50,667 - #13 =
INFO  20:16:50,668 - #15 3
INFO  20:16:50,668 - #5 ;
INFO  20:16:50,668 - #16 t2
INFO  20:16:50,668 - #43 .
INFO  20:16:50,668 - #16 niz
INFO  20:16:50,668 - #13 =
INFO  20:16:50,668 - #36 new
INFO  20:16:50,668 - #16 int
INFO  20:16:50,668 - #50 [
INFO  20:16:50,668 - #15 3
INFO  20:16:50,668 - #51 ]
INFO  20:16:50,668 - #5 ;
INFO  20:16:50,668 - #16 i
INFO  20:16:50,668 - #13 =
INFO  20:16:50,668 - #15 0
INFO  20:16:50,668 - #5 ;
INFO  20:16:50,668 - #34 do
INFO  20:16:50,668 - #3 {
INFO  20:16:50,668 - #16 t2
INFO  20:16:50,668 - #43 .
INFO  20:16:50,669 - #16 niz
INFO  20:16:50,669 - #50 [
INFO  20:16:50,669 - #16 i
INFO  20:16:50,669 - #51 ]
INFO  20:16:50,669 - #13 =
INFO  20:16:50,669 - #16 t1
INFO  20:16:50,669 - #43 .
INFO  20:16:50,669 - #16 niz
INFO  20:16:50,669 - #50 [
INFO  20:16:50,669 - #16 i
INFO  20:16:50,669 - #51 ]
INFO  20:16:50,669 - #28 *
INFO  20:16:50,669 - #15 2
INFO  20:16:50,669 - #28 *
INFO  20:16:50,669 - #16 t2
INFO  20:16:50,669 - #43 .
INFO  20:16:50,669 - #16 a
INFO  20:16:50,669 - #5 ;
INFO  20:16:50,669 - #16 i
INFO  20:16:50,669 - #46 ++
INFO  20:16:50,669 - #5 ;
INFO  20:16:50,669 - #4 }
INFO  20:16:50,669 - #35 while
INFO  20:16:50,669 - #6 (
INFO  20:16:50,669 - #16 i
INFO  20:16:50,669 - #26 <
INFO  20:16:50,669 - #15 3
INFO  20:16:50,669 - #7 )
INFO  20:16:50,669 - #5 ;
INFO  20:16:50,669 - #9 print
INFO  20:16:50,669 - #6 (
INFO  20:16:50,669 - #16 t2
INFO  20:16:50,669 - #43 .
INFO  20:16:50,669 - #16 niz
INFO  20:16:50,669 - #50 [
INFO  20:16:50,669 - #15 0
INFO  20:16:50,669 - #51 ]
INFO  20:16:50,669 - #7 )
INFO  20:16:50,669 - #5 ;
INFO  20:16:50,669 - #9 print
INFO  20:16:50,669 - #6 (
INFO  20:16:50,669 - #16 t2
INFO  20:16:50,669 - #43 .
INFO  20:16:50,669 - #16 niz
INFO  20:16:50,669 - #50 [
INFO  20:16:50,669 - #15 1
INFO  20:16:50,669 - #51 ]
INFO  20:16:50,669 - #7 )
INFO  20:16:50,669 - #5 ;
INFO  20:16:50,669 - #9 print
INFO  20:16:50,669 - #6 (
INFO  20:16:50,669 - #16 t2
INFO  20:16:50,669 - #43 .
INFO  20:16:50,669 - #16 niz
INFO  20:16:50,669 - #50 [
INFO  20:16:50,669 - #15 2
INFO  20:16:50,670 - #51 ]
INFO  20:16:50,670 - #7 )
INFO  20:16:50,670 - #5 ;
INFO  20:16:50,670 - #9 print
INFO  20:16:50,670 - #6 (
INFO  20:16:50,670 - #16 eol
INFO  20:16:50,670 - #7 )
INFO  20:16:50,670 - #5 ;
INFO  20:16:50,670 - #16 i
INFO  20:16:50,670 - #13 =
INFO  20:16:50,670 - #15 0
INFO  20:16:50,670 - #5 ;
INFO  20:16:50,670 - #16 niz2
INFO  20:16:50,670 - #13 =
INFO  20:16:50,670 - #15 0
INFO  20:16:50,670 - #5 ;
INFO  20:16:50,670 - #34 do
INFO  20:16:50,670 - #3 {
INFO  20:16:50,670 - #16 niz2
INFO  20:16:50,670 - #13 =
INFO  20:16:50,670 - #16 niz2
INFO  20:16:50,670 - #11 +
INFO  20:16:50,670 - #16 t1
INFO  20:16:50,670 - #43 .
INFO  20:16:50,670 - #16 niz
INFO  20:16:50,670 - #50 [
INFO  20:16:50,670 - #16 i
INFO  20:16:50,670 - #51 ]
INFO  20:16:50,670 - #11 +
INFO  20:16:50,670 - #16 t2
INFO  20:16:50,670 - #43 .
INFO  20:16:50,670 - #16 niz
INFO  20:16:50,670 - #50 [
INFO  20:16:50,670 - #16 i
INFO  20:16:50,670 - #51 ]
INFO  20:16:50,670 - #5 ;
INFO  20:16:50,670 - #16 i
INFO  20:16:50,670 - #46 ++
INFO  20:16:50,670 - #5 ;
INFO  20:16:50,670 - #4 }
INFO  20:16:50,670 - #35 while
INFO  20:16:50,670 - #6 (
INFO  20:16:50,670 - #16 i
INFO  20:16:50,670 - #26 <
INFO  20:16:50,670 - #15 3
INFO  20:16:50,670 - #7 )
INFO  20:16:50,670 - #5 ;
INFO  20:16:50,670 - #9 print
INFO  20:16:50,670 - #6 (
INFO  20:16:50,670 - #16 niz2
INFO  20:16:50,670 - #7 )
INFO  20:16:50,670 - #5 ;
INFO  20:16:50,670 - #9 print
INFO  20:16:50,670 - #6 (
INFO  20:16:50,670 - #16 eol
INFO  20:16:50,670 - #7 )
INFO  20:16:50,670 - #5 ;
INFO  20:16:50,670 - #4 }
INFO  20:16:50,670 - #4 }
INFO  20:16:50,681 - Trenutan tip konstante je:  int na liniji 5
INFO  20:16:50,681 - Trenutan tip konstante je:  char na liniji 7
INFO  20:16:50,681 - Deklarisana promenljiva i na liniji 9
INFO  20:16:50,681 - Deklarisana promenljiva ibool na liniji 12
INFO  20:16:50,681 - Deklarisana promenljiva niz2 na liniji 14
INFO  20:16:50,681 - Deklarisana je rekord :  Test na liniji 16
INFO  20:16:50,681 - Deklarisana promenljiva niz na liniji 17
INFO  20:16:50,681 - Deklarisana promenljiva a na liniji 18
INFO  20:16:50,682 - Deklarisana je rekord :  Test2 na liniji 21
INFO  20:16:50,682 - Deklarisana promenljiva niz23 na liniji 22
INFO  20:16:50,682 - Deklarisana promenljiva a2 na liniji 23
INFO  20:16:50,682 - Deklarisana promenljiva t2 na liniji 26
INFO  20:16:50,682 - Deklarisana promenljiva t1 na liniji 26
INFO  20:16:50,682 - Obradjuje se funkcija sum na liniji 30
INFO  20:16:50,682 - Naveden argument d na liniji 30
INFO  20:16:50,682 - TypeNAME: int
INFO  20:16:50,682 - Naveden argument z na liniji 30
INFO  20:16:50,682 - TypeNAME: int
INFO  20:16:50,682 - Obradjuje se funkcija inkrement na liniji 36
INFO  20:16:50,682 - Naveden argument inc na liniji 36
INFO  20:16:50,682 - TypeNAME: int
INFO  20:16:50,683 - Naveden argument a na liniji 36
INFO  20:16:50,683 - TypeNAME: int
INFO  20:16:50,683 - Deklarisana promenljiva pom na liniji 37
INFO  20:16:50,683 - Obradjuje se funkcija verify na liniji 48
INFO  20:16:50,683 - Pronadjen poziv funkcije inkrement na liniji 50
ERROR 20:16:50,683 - Greska na liniji 50 pogresan broj argumenata za funkciju: 1inkrement
INFO  20:16:50,683 - Pronadjen poziv funkcije inkrement na liniji 52
ERROR 20:16:50,683 - Greska na liniji 52 pogresan broj argumenata za funkciju: 5inkrement
INFO  20:16:50,683 - Obradjuje se funkcija main na liniji 58
ERROR 20:16:50,683 - Semanticka greska na liniji 80 print prima samo num, char ili bool!
ERROR 20:16:50,683 - Semanticka greska na liniji 81 print prima samo num, char ili bool!
ERROR 20:16:50,683 - Semanticka greska na liniji 98  t1 mora biti int, char ili bool!
ERROR 20:16:50,683 - Semanticka greska na liniji 99  t1 mora biti int, char ili bool!
ERROR 20:16:50,683 - Semanticka greska na liniji 100  t1 mora biti int, char ili bool!
INFO  20:16:50,683 - Pronadjen poziv funkcije chr na liniji 103
ERROR 20:16:50,683 - Semanticka greska na liniji 105 print prima samo num, char ili bool!
ERROR 20:16:50,683 - Semanticka greska na liniji 108 print prima samo num, char ili bool!
ERROR 20:16:50,684 - Semanticka greska na liniji 118  t2 mora biti int, char ili bool!
ERROR 20:16:50,684 - Semanticka greska na liniji 119  t2 mora biti int, char ili bool!
ERROR 20:16:50,684 - Semanticka greska na liniji 120  t2 mora biti int, char ili bool!
ERROR 20:16:50,684 - Semanticka greska na liniji 124 nekompatibilni tipovi prilikom dodele!
ERROR 20:16:50,684 - Semanticka greska na liniji 126 nekompatibilni tipovi prilikom dodele!
ERROR 20:16:50,684 - Parsiranje NIJE uspesno zavrseno!
