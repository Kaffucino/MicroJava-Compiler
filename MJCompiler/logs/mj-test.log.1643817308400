INFO  16:51:19,572 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  16:51:19,607 - #2 program
INFO  16:51:19,607 - #16 test302
INFO  16:51:19,607 - #48 const
INFO  16:51:19,607 - #16 int
INFO  16:51:19,607 - #16 jedan
INFO  16:51:19,608 - #13 =
INFO  16:51:19,608 - #15 1
INFO  16:51:19,608 - #5 ;
INFO  16:51:19,608 - #16 int
INFO  16:51:19,609 - #16 i
INFO  16:51:19,609 - #5 ;
INFO  16:51:19,609 - #16 bool
INFO  16:51:19,610 - #16 ibool
INFO  16:51:19,610 - #5 ;
INFO  16:51:19,610 - #16 int
INFO  16:51:19,610 - #16 niz2
INFO  16:51:19,610 - #5 ;
INFO  16:51:19,610 - #49 record
INFO  16:51:19,610 - #16 Test
INFO  16:51:19,610 - #3 {
INFO  16:51:19,610 - #16 int
INFO  16:51:19,610 - #16 niz
INFO  16:51:19,612 - #50 [
INFO  16:51:19,612 - #51 ]
INFO  16:51:19,612 - #5 ;
INFO  16:51:19,612 - #16 int
INFO  16:51:19,612 - #16 b
INFO  16:51:19,612 - #5 ;
INFO  16:51:19,612 - #4 }
INFO  16:51:19,613 - #16 Test
INFO  16:51:19,613 - #16 t1
INFO  16:51:19,613 - #8 ,
INFO  16:51:19,613 - #16 t2
INFO  16:51:19,613 - #5 ;
INFO  16:51:19,613 - #3 {
INFO  16:51:19,614 - #16 int
INFO  16:51:19,614 - #16 sum
INFO  16:51:19,614 - #6 (
INFO  16:51:19,614 - #16 int
INFO  16:51:19,614 - #16 z
INFO  16:51:19,614 - #8 ,
INFO  16:51:19,614 - #16 int
INFO  16:51:19,614 - #16 d
INFO  16:51:19,615 - #7 )
INFO  16:51:19,615 - #3 {
INFO  16:51:19,615 - #10 return
INFO  16:51:19,616 - #16 z
INFO  16:51:19,616 - #11 +
INFO  16:51:19,617 - #16 d
INFO  16:51:19,618 - #5 ;
INFO  16:51:19,618 - #4 }
INFO  16:51:19,619 - #16 int
INFO  16:51:19,619 - #16 inkrement
INFO  16:51:19,619 - #6 (
INFO  16:51:19,620 - #16 int
INFO  16:51:19,620 - #16 a
INFO  16:51:19,620 - #8 ,
INFO  16:51:19,620 - #16 int
INFO  16:51:19,620 - #16 inc
INFO  16:51:19,620 - #7 )
INFO  16:51:19,620 - #16 int
INFO  16:51:19,620 - #16 pom
INFO  16:51:19,620 - #5 ;
INFO  16:51:19,620 - #3 {
INFO  16:51:19,620 - #19 if
INFO  16:51:19,621 - #6 (
INFO  16:51:19,621 - #16 inc
INFO  16:51:19,621 - #22 ==
INFO  16:51:19,624 - #16 jedan
INFO  16:51:19,625 - #7 )
INFO  16:51:19,628 - #16 pom
INFO  16:51:19,628 - #13 =
INFO  16:51:19,628 - #15 1
INFO  16:51:19,628 - #5 ;
INFO  16:51:19,629 - #20 else
INFO  16:51:19,629 - #19 if
INFO  16:51:19,629 - #6 (
INFO  16:51:19,629 - #16 inc
INFO  16:51:19,629 - #22 ==
INFO  16:51:19,629 - #15 2
INFO  16:51:19,629 - #7 )
INFO  16:51:19,629 - #16 pom
INFO  16:51:19,629 - #13 =
INFO  16:51:19,629 - #16 a
INFO  16:51:19,630 - #5 ;
INFO  16:51:19,630 - #10 return
INFO  16:51:19,630 - #16 sum
INFO  16:51:19,631 - #6 (
INFO  16:51:19,631 - #16 a
INFO  16:51:19,631 - #8 ,
INFO  16:51:19,631 - #16 pom
INFO  16:51:19,631 - #7 )
INFO  16:51:19,633 - #5 ;
INFO  16:51:19,633 - #4 }
INFO  16:51:19,633 - #16 bool
INFO  16:51:19,633 - #16 verify
INFO  16:51:19,633 - #6 (
INFO  16:51:19,633 - #7 )
INFO  16:51:19,633 - #3 {
INFO  16:51:19,633 - #9 print
INFO  16:51:19,633 - #6 (
INFO  16:51:19,633 - #17 'v'
INFO  16:51:19,633 - #7 )
INFO  16:51:19,633 - #5 ;
INFO  16:51:19,633 - #10 return
INFO  16:51:19,633 - #18 false
INFO  16:51:19,633 - #5 ;
INFO  16:51:19,633 - #4 }
INFO  16:51:19,633 - #14 void
INFO  16:51:19,633 - #16 main
INFO  16:51:19,634 - #6 (
INFO  16:51:19,634 - #7 )
INFO  16:51:19,634 - #3 {
INFO  16:51:19,634 - #19 if
INFO  16:51:19,634 - #6 (
INFO  16:51:19,634 - #15 1
INFO  16:51:19,634 - #23 !=
INFO  16:51:19,634 - #15 1
INFO  16:51:19,634 - #7 )
INFO  16:51:19,634 - #9 print
INFO  16:51:19,634 - #6 (
INFO  16:51:19,634 - #12 -
INFO  16:51:19,635 - #15 6
INFO  16:51:19,635 - #7 )
INFO  16:51:19,635 - #5 ;
INFO  16:51:19,635 - #20 else
INFO  16:51:19,635 - #9 print
INFO  16:51:19,635 - #6 (
INFO  16:51:19,635 - #15 0
INFO  16:51:19,635 - #7 )
INFO  16:51:19,635 - #5 ;
INFO  16:51:19,635 - #16 ibool
INFO  16:51:19,635 - #13 =
INFO  16:51:19,635 - #18 false
INFO  16:51:19,635 - #5 ;
INFO  16:51:19,635 - #16 i
INFO  16:51:19,635 - #13 =
INFO  16:51:19,635 - #15 0
INFO  16:51:19,635 - #5 ;
INFO  16:51:19,635 - #34 do
INFO  16:51:19,636 - #3 {
INFO  16:51:19,636 - #19 if
INFO  16:51:19,636 - #6 (
INFO  16:51:19,636 - #16 i
INFO  16:51:19,636 - #22 ==
INFO  16:51:19,636 - #15 2
INFO  16:51:19,636 - #7 )
INFO  16:51:19,636 - #16 ibool
INFO  16:51:19,636 - #13 =
INFO  16:51:19,636 - #18 true
INFO  16:51:19,636 - #5 ;
INFO  16:51:19,636 - #16 i
INFO  16:51:19,636 - #46 ++
INFO  16:51:19,636 - #5 ;
INFO  16:51:19,636 - #4 }
INFO  16:51:19,637 - #35 while
INFO  16:51:19,637 - #6 (
INFO  16:51:19,637 - #16 i
INFO  16:51:19,637 - #26 <
INFO  16:51:19,637 - #15 5
INFO  16:51:19,637 - #7 )
INFO  16:51:19,638 - #5 ;
INFO  16:51:19,638 - #19 if
INFO  16:51:19,638 - #6 (
INFO  16:51:19,638 - #16 ibool
INFO  16:51:19,638 - #7 )
INFO  16:51:19,638 - #19 if
INFO  16:51:19,638 - #6 (
INFO  16:51:19,638 - #16 i
INFO  16:51:19,638 - #22 ==
INFO  16:51:19,638 - #15 5
INFO  16:51:19,638 - #7 )
INFO  16:51:19,638 - #9 print
INFO  16:51:19,638 - #6 (
INFO  16:51:19,638 - #15 1
INFO  16:51:19,638 - #7 )
INFO  16:51:19,639 - #5 ;
INFO  16:51:19,639 - #20 else
INFO  16:51:19,639 - #9 print
INFO  16:51:19,639 - #6 (
INFO  16:51:19,639 - #12 -
INFO  16:51:19,639 - #15 1
INFO  16:51:19,639 - #7 )
INFO  16:51:19,639 - #5 ;
INFO  16:51:19,639 - #16 t1
INFO  16:51:19,639 - #13 =
INFO  16:51:19,639 - #36 new
INFO  16:51:19,639 - #16 Test
INFO  16:51:19,639 - #5 ;
INFO  16:51:19,639 - #16 t1
INFO  16:51:19,639 - #43 .
INFO  16:51:19,639 - #16 a
INFO  16:51:19,639 - #13 =
INFO  16:51:19,640 - #15 2
INFO  16:51:19,640 - #5 ;
INFO  16:51:19,640 - #16 t1
INFO  16:51:19,640 - #43 .
INFO  16:51:19,640 - #16 niz
INFO  16:51:19,640 - #13 =
INFO  16:51:19,640 - #36 new
INFO  16:51:19,640 - #16 int
INFO  16:51:19,640 - #50 [
INFO  16:51:19,640 - #15 3
INFO  16:51:19,640 - #51 ]
INFO  16:51:19,640 - #5 ;
INFO  16:51:19,640 - #16 t1
INFO  16:51:19,640 - #43 .
INFO  16:51:19,640 - #16 niz
INFO  16:51:19,640 - #50 [
INFO  16:51:19,640 - #15 0
INFO  16:51:19,640 - #51 ]
INFO  16:51:19,640 - #13 =
INFO  16:51:19,640 - #15 1
INFO  16:51:19,640 - #28 *
INFO  16:51:19,640 - #16 t1
INFO  16:51:19,641 - #43 .
INFO  16:51:19,641 - #16 a
INFO  16:51:19,641 - #5 ;
INFO  16:51:19,641 - #16 t1
INFO  16:51:19,641 - #43 .
INFO  16:51:19,641 - #16 niz
INFO  16:51:19,641 - #50 [
INFO  16:51:19,641 - #15 1
INFO  16:51:19,642 - #51 ]
INFO  16:51:19,642 - #13 =
INFO  16:51:19,642 - #15 2
INFO  16:51:19,642 - #28 *
INFO  16:51:19,642 - #16 t1
INFO  16:51:19,642 - #43 .
INFO  16:51:19,642 - #16 a
INFO  16:51:19,642 - #5 ;
INFO  16:51:19,643 - #16 t1
INFO  16:51:19,643 - #43 .
INFO  16:51:19,643 - #16 niz
INFO  16:51:19,643 - #50 [
INFO  16:51:19,643 - #15 2
INFO  16:51:19,643 - #51 ]
INFO  16:51:19,643 - #13 =
INFO  16:51:19,643 - #16 sum
INFO  16:51:19,643 - #6 (
INFO  16:51:19,643 - #16 t1
INFO  16:51:19,643 - #43 .
INFO  16:51:19,643 - #16 niz
INFO  16:51:19,643 - #50 [
INFO  16:51:19,643 - #15 1
INFO  16:51:19,643 - #51 ]
INFO  16:51:19,643 - #8 ,
INFO  16:51:19,643 - #16 t1
INFO  16:51:19,643 - #43 .
INFO  16:51:19,643 - #16 niz
INFO  16:51:19,643 - #50 [
INFO  16:51:19,643 - #15 0
INFO  16:51:19,643 - #51 ]
INFO  16:51:19,643 - #7 )
INFO  16:51:19,643 - #28 *
INFO  16:51:19,643 - #16 t1
INFO  16:51:19,644 - #43 .
INFO  16:51:19,644 - #16 a
INFO  16:51:19,644 - #11 +
INFO  16:51:19,644 - #15 1
INFO  16:51:19,644 - #5 ;
INFO  16:51:19,644 - #19 if
INFO  16:51:19,644 - #6 (
INFO  16:51:19,644 - #16 verify
INFO  16:51:19,644 - #6 (
INFO  16:51:19,644 - #7 )
ERROR 16:51:19,644 - 
Sintaksna greska na liniji 61
INFO  16:51:19,644 - #45 ||
INFO  16:51:19,644 - #16 t1
INFO  16:51:19,644 - #43 .
INFO  16:51:19,644 - #16 niz
INFO  16:51:19,645 - #50 [
INFO  16:51:19,645 - #15 2
INFO  16:51:19,645 - #51 ]
INFO  16:51:19,645 - #22 ==
INFO  16:51:19,645 - #15 4
INFO  16:51:19,645 - #7 )
INFO  16:51:19,645 - #9 print
INFO  16:51:19,645 - #6 (
INFO  16:51:19,645 - #16 ord
ERROR 16:51:19,645 - Izvrsen oporavak do ) u liniji 61
INFO  16:51:19,645 - #6 (
INFO  16:51:19,645 - #17 'A'
INFO  16:51:19,645 - #7 )
INFO  16:51:19,645 - #7 )
INFO  16:51:19,645 - #5 ;
INFO  16:51:19,646 - #20 else
INFO  16:51:19,646 - #9 print
INFO  16:51:19,646 - #6 (
INFO  16:51:19,646 - #16 ord
INFO  16:51:19,646 - #6 (
INFO  16:51:19,646 - #17 'a'
INFO  16:51:19,646 - #7 )
INFO  16:51:19,646 - #7 )
INFO  16:51:19,646 - #5 ;
INFO  16:51:19,646 - #9 print
INFO  16:51:19,646 - #6 (
INFO  16:51:19,646 - #16 eol
INFO  16:51:19,646 - #7 )
INFO  16:51:19,646 - #5 ;
INFO  16:51:19,646 - #16 i
INFO  16:51:19,646 - #13 =
INFO  16:51:19,646 - #15 0
INFO  16:51:19,646 - #5 ;
INFO  16:51:19,646 - #34 do
INFO  16:51:19,646 - #3 {
INFO  16:51:19,646 - #19 if
INFO  16:51:19,646 - #6 (
INFO  16:51:19,646 - #16 i
INFO  16:51:19,646 - #22 ==
INFO  16:51:19,646 - #15 3
INFO  16:51:19,646 - #7 )
INFO  16:51:19,646 - #3 {
INFO  16:51:19,646 - #16 i
INFO  16:51:19,646 - #46 ++
INFO  16:51:19,646 - #5 ;
INFO  16:51:19,646 - #39 continue
INFO  16:51:19,646 - #5 ;
INFO  16:51:19,646 - #4 }
INFO  16:51:19,647 - #19 if
INFO  16:51:19,647 - #6 (
INFO  16:51:19,647 - #16 i
INFO  16:51:19,647 - #22 ==
INFO  16:51:19,647 - #15 4
INFO  16:51:19,647 - #7 )
INFO  16:51:19,647 - #31 break
INFO  16:51:19,647 - #5 ;
INFO  16:51:19,647 - #16 i
INFO  16:51:19,647 - #13 =
INFO  16:51:19,647 - #16 inkrement
INFO  16:51:19,647 - #6 (
INFO  16:51:19,647 - #16 i
INFO  16:51:19,647 - #8 ,
INFO  16:51:19,647 - #15 1
INFO  16:51:19,647 - #7 )
INFO  16:51:19,647 - #5 ;
INFO  16:51:19,648 - #4 }
INFO  16:51:19,648 - #35 while
INFO  16:51:19,648 - #6 (
INFO  16:51:19,648 - #16 i
INFO  16:51:19,648 - #26 <
INFO  16:51:19,648 - #15 10
INFO  16:51:19,648 - #7 )
INFO  16:51:19,649 - #5 ;
INFO  16:51:19,649 - #19 if
INFO  16:51:19,649 - #6 (
INFO  16:51:19,650 - #16 i
INFO  16:51:19,650 - #22 ==
INFO  16:51:19,650 - #15 3
INFO  16:51:19,650 - #44 &&
INFO  16:51:19,650 - #16 verify
INFO  16:51:19,650 - #6 (
INFO  16:51:19,650 - #7 )
ERROR 16:51:19,650 - 
Sintaksna greska na liniji 76
INFO  16:51:19,650 - #7 )
INFO  16:51:19,650 - #9 print
INFO  16:51:19,650 - #6 (
INFO  16:51:19,650 - #12 -
ERROR 16:51:19,650 - Izvrsen oporavak do ) u liniji 76
INFO  16:51:19,650 - #15 4
INFO  16:51:19,650 - #7 )
INFO  16:51:19,650 - #5 ;
INFO  16:51:19,650 - #20 else
INFO  16:51:19,650 - #9 print
INFO  16:51:19,650 - #6 (
INFO  16:51:19,650 - #15 4
INFO  16:51:19,650 - #7 )
INFO  16:51:19,650 - #5 ;
INFO  16:51:19,650 - #37 read
INFO  16:51:19,650 - #6 (
INFO  16:51:19,650 - #16 t1
INFO  16:51:19,650 - #43 .
INFO  16:51:19,650 - #16 niz
INFO  16:51:19,650 - #50 [
INFO  16:51:19,650 - #15 0
INFO  16:51:19,650 - #51 ]
INFO  16:51:19,650 - #7 )
INFO  16:51:19,650 - #5 ;
INFO  16:51:19,650 - #37 read
INFO  16:51:19,651 - #6 (
INFO  16:51:19,651 - #16 t1
INFO  16:51:19,651 - #43 .
INFO  16:51:19,651 - #16 niz
INFO  16:51:19,651 - #50 [
INFO  16:51:19,651 - #15 1
INFO  16:51:19,651 - #51 ]
INFO  16:51:19,651 - #7 )
INFO  16:51:19,651 - #5 ;
INFO  16:51:19,651 - #37 read
INFO  16:51:19,651 - #6 (
INFO  16:51:19,651 - #16 t1
INFO  16:51:19,651 - #43 .
INFO  16:51:19,651 - #16 niz
INFO  16:51:19,651 - #50 [
INFO  16:51:19,651 - #15 2
INFO  16:51:19,651 - #51 ]
INFO  16:51:19,651 - #7 )
INFO  16:51:19,651 - #5 ;
INFO  16:51:19,651 - #9 print
INFO  16:51:19,651 - #6 (
INFO  16:51:19,651 - #16 eol
INFO  16:51:19,651 - #7 )
INFO  16:51:19,651 - #5 ;
INFO  16:51:19,651 - #9 print
INFO  16:51:19,651 - #6 (
INFO  16:51:19,651 - #16 sum
INFO  16:51:19,651 - #6 (
INFO  16:51:19,651 - #16 sum
INFO  16:51:19,651 - #6 (
INFO  16:51:19,651 - #16 t1
INFO  16:51:19,651 - #43 .
INFO  16:51:19,651 - #16 niz
INFO  16:51:19,651 - #50 [
INFO  16:51:19,651 - #15 0
INFO  16:51:19,651 - #51 ]
INFO  16:51:19,651 - #8 ,
INFO  16:51:19,652 - #16 t1
INFO  16:51:19,652 - #43 .
INFO  16:51:19,652 - #16 niz
INFO  16:51:19,652 - #50 [
INFO  16:51:19,652 - #15 1
INFO  16:51:19,652 - #51 ]
INFO  16:51:19,652 - #7 )
INFO  16:51:19,652 - #8 ,
INFO  16:51:19,652 - #16 t1
INFO  16:51:19,652 - #43 .
INFO  16:51:19,652 - #16 niz
INFO  16:51:19,652 - #50 [
INFO  16:51:19,652 - #15 2
INFO  16:51:19,652 - #51 ]
INFO  16:51:19,652 - #7 )
INFO  16:51:19,652 - #7 )
INFO  16:51:19,652 - #5 ;
INFO  16:51:19,652 - #9 print
INFO  16:51:19,652 - #6 (
INFO  16:51:19,652 - #16 eol
INFO  16:51:19,652 - #7 )
INFO  16:51:19,652 - #5 ;
INFO  16:51:19,652 - #9 print
INFO  16:51:19,652 - #6 (
INFO  16:51:19,652 - #16 inkrement
INFO  16:51:19,652 - #6 (
INFO  16:51:19,652 - #16 t1
INFO  16:51:19,652 - #43 .
INFO  16:51:19,652 - #16 niz
INFO  16:51:19,652 - #50 [
INFO  16:51:19,652 - #15 2
INFO  16:51:19,652 - #51 ]
INFO  16:51:19,652 - #8 ,
INFO  16:51:19,652 - #15 2
INFO  16:51:19,652 - #7 )
INFO  16:51:19,652 - #7 )
INFO  16:51:19,652 - #5 ;
INFO  16:51:19,652 - #16 t2
INFO  16:51:19,652 - #13 =
INFO  16:51:19,652 - #36 new
INFO  16:51:19,652 - #16 Test
INFO  16:51:19,652 - #5 ;
INFO  16:51:19,652 - #16 t2
INFO  16:51:19,652 - #43 .
INFO  16:51:19,652 - #16 a
INFO  16:51:19,652 - #13 =
INFO  16:51:19,652 - #15 3
INFO  16:51:19,652 - #5 ;
INFO  16:51:19,653 - #16 t2
INFO  16:51:19,653 - #43 .
INFO  16:51:19,653 - #16 niz
INFO  16:51:19,653 - #13 =
INFO  16:51:19,653 - #36 new
INFO  16:51:19,653 - #16 int
INFO  16:51:19,653 - #50 [
INFO  16:51:19,653 - #15 3
INFO  16:51:19,653 - #51 ]
INFO  16:51:19,653 - #5 ;
INFO  16:51:19,653 - #16 i
INFO  16:51:19,653 - #13 =
INFO  16:51:19,653 - #15 0
INFO  16:51:19,653 - #5 ;
INFO  16:51:19,653 - #34 do
INFO  16:51:19,653 - #3 {
INFO  16:51:19,653 - #16 t2
INFO  16:51:19,653 - #43 .
INFO  16:51:19,653 - #16 niz
INFO  16:51:19,653 - #50 [
INFO  16:51:19,653 - #16 i
INFO  16:51:19,653 - #51 ]
INFO  16:51:19,653 - #13 =
INFO  16:51:19,653 - #16 t1
INFO  16:51:19,653 - #43 .
INFO  16:51:19,653 - #16 niz
INFO  16:51:19,653 - #50 [
INFO  16:51:19,653 - #16 i
INFO  16:51:19,653 - #51 ]
INFO  16:51:19,653 - #28 *
INFO  16:51:19,653 - #15 2
INFO  16:51:19,653 - #28 *
INFO  16:51:19,653 - #16 t2
INFO  16:51:19,653 - #43 .
INFO  16:51:19,653 - #16 a
INFO  16:51:19,653 - #5 ;
INFO  16:51:19,653 - #16 i
INFO  16:51:19,654 - #46 ++
INFO  16:51:19,654 - #5 ;
INFO  16:51:19,654 - #4 }
INFO  16:51:19,654 - #35 while
INFO  16:51:19,654 - #6 (
INFO  16:51:19,654 - #16 i
INFO  16:51:19,654 - #26 <
INFO  16:51:19,654 - #15 3
INFO  16:51:19,654 - #7 )
INFO  16:51:19,654 - #5 ;
INFO  16:51:19,654 - #9 print
INFO  16:51:19,654 - #6 (
INFO  16:51:19,654 - #16 t2
INFO  16:51:19,654 - #43 .
INFO  16:51:19,654 - #16 niz
INFO  16:51:19,654 - #50 [
INFO  16:51:19,654 - #15 0
INFO  16:51:19,655 - #51 ]
INFO  16:51:19,655 - #7 )
INFO  16:51:19,655 - #5 ;
INFO  16:51:19,655 - #9 print
INFO  16:51:19,655 - #6 (
INFO  16:51:19,655 - #16 t2
INFO  16:51:19,655 - #43 .
INFO  16:51:19,655 - #16 niz
INFO  16:51:19,655 - #50 [
INFO  16:51:19,655 - #15 1
INFO  16:51:19,655 - #51 ]
INFO  16:51:19,655 - #7 )
INFO  16:51:19,655 - #5 ;
INFO  16:51:19,655 - #9 print
INFO  16:51:19,655 - #6 (
INFO  16:51:19,655 - #16 t2
INFO  16:51:19,655 - #43 .
INFO  16:51:19,656 - #16 niz
INFO  16:51:19,656 - #50 [
INFO  16:51:19,656 - #15 2
INFO  16:51:19,656 - #51 ]
INFO  16:51:19,656 - #7 )
INFO  16:51:19,656 - #5 ;
INFO  16:51:19,656 - #9 print
INFO  16:51:19,656 - #6 (
INFO  16:51:19,656 - #16 eol
INFO  16:51:19,656 - #7 )
INFO  16:51:19,656 - #5 ;
INFO  16:51:19,656 - #16 i
INFO  16:51:19,656 - #13 =
INFO  16:51:19,656 - #15 0
INFO  16:51:19,656 - #5 ;
INFO  16:51:19,656 - #16 niz2
INFO  16:51:19,656 - #13 =
INFO  16:51:19,656 - #15 0
INFO  16:51:19,656 - #5 ;
INFO  16:51:19,656 - #34 do
INFO  16:51:19,656 - #3 {
INFO  16:51:19,656 - #16 niz2
INFO  16:51:19,656 - #13 =
INFO  16:51:19,656 - #16 niz2
INFO  16:51:19,656 - #11 +
INFO  16:51:19,656 - #16 t1
INFO  16:51:19,656 - #43 .
INFO  16:51:19,656 - #16 niz
INFO  16:51:19,656 - #50 [
INFO  16:51:19,656 - #16 i
INFO  16:51:19,657 - #51 ]
INFO  16:51:19,657 - #28 *
INFO  16:51:19,657 - #16 t2
INFO  16:51:19,657 - #43 .
INFO  16:51:19,657 - #16 niz
INFO  16:51:19,657 - #50 [
INFO  16:51:19,657 - #16 i
INFO  16:51:19,657 - #51 ]
INFO  16:51:19,657 - #5 ;
INFO  16:51:19,657 - #16 i
INFO  16:51:19,657 - #46 ++
INFO  16:51:19,657 - #5 ;
INFO  16:51:19,657 - #4 }
INFO  16:51:19,657 - #35 while
INFO  16:51:19,657 - #6 (
INFO  16:51:19,657 - #16 i
INFO  16:51:19,657 - #26 <
INFO  16:51:19,657 - #15 3
INFO  16:51:19,657 - #7 )
INFO  16:51:19,657 - #5 ;
INFO  16:51:19,658 - #9 print
INFO  16:51:19,658 - #6 (
INFO  16:51:19,658 - #16 niz2
INFO  16:51:19,658 - #7 )
INFO  16:51:19,658 - #5 ;
INFO  16:51:19,658 - #9 print
INFO  16:51:19,658 - #6 (
INFO  16:51:19,658 - #16 eol
INFO  16:51:19,658 - #7 )
INFO  16:51:19,658 - #5 ;
INFO  16:51:19,658 - #4 }
INFO  16:51:19,658 - #4 }
INFO  16:51:19,667 - Trenutan tip konstante je:  int na liniji 5
INFO  16:51:19,668 - Deklarisana promenljiva i na liniji 7
INFO  16:51:19,668 - Deklarisana promenljiva ibool na liniji 8
INFO  16:51:19,668 - Deklarisana promenljiva niz2 na liniji 10
INFO  16:51:19,668 - Deklarisana promenljiva niz na liniji 13
INFO  16:51:19,668 - Deklarisana promenljiva b na liniji 14
INFO  16:51:19,668 - Deklarisana je rekord :  Test na liniji 12
INFO  16:51:19,668 - Deklarisana promenljiva t2 na liniji 17
INFO  16:51:19,668 - Deklarisana promenljiva t1 na liniji 17
INFO  16:51:19,668 - Obradjuje se funkcija sum na liniji 21
INFO  16:51:19,668 - Naveden argument d na liniji 21
INFO  16:51:19,668 - Naveden argument z na liniji 21
INFO  16:51:19,668 - Obradjuje se funkcija inkrement na liniji 26
INFO  16:51:19,668 - Naveden argument inc na liniji 26
INFO  16:51:19,668 - Naveden argument a na liniji 26
INFO  16:51:19,668 - Deklarisana promenljiva pom na liniji 27
INFO  16:51:19,668 - Obradjuje se funkcija verify na liniji 35
INFO  16:51:19,668 - Obradjuje se funkcija main na liniji 40
ERROR 16:51:19,668 - Greska na liniji 56 : ime a nije deklarisano! 
ERROR 16:51:19,668 - Semanticka greska na liniji 56 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:19,668 - Semanticka greska na liniji 57 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:19,668 - Greska na liniji 58 : ime a nije deklarisano! 
ERROR 16:51:19,668 - Semanticka greska na liniji 58 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:19,668 - Greska na liniji 59 : ime a nije deklarisano! 
ERROR 16:51:19,668 - Semanticka greska na liniji 59 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:19,668 - Greska na liniji 60 : ime a nije deklarisano! 
ERROR 16:51:19,668 - Semanticka greska na liniji 60 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:19,669 - Semanticka greska na liniji 61 print prima samo num, char ili bool!
ERROR 16:51:19,669 - Semanticka greska na liniji 62 print prima samo num, char ili bool!
ERROR 16:51:19,669 - Semanticka greska na liniji 79  t1 mora biti int, char ili bool!
ERROR 16:51:19,669 - Semanticka greska na liniji 80  t1 mora biti int, char ili bool!
ERROR 16:51:19,669 - Semanticka greska na liniji 81  t1 mora biti int, char ili bool!
ERROR 16:51:19,669 - Semanticka greska na liniji 84 print prima samo num, char ili bool!
ERROR 16:51:19,669 - Semanticka greska na liniji 87 print prima samo num, char ili bool!
ERROR 16:51:19,669 - Greska na liniji 90 : ime a nije deklarisano! 
ERROR 16:51:19,669 - Semanticka greska na liniji 90 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:19,669 - Semanticka greska na liniji 91 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:19,669 - Greska na liniji 94 : ime a nije deklarisano! 
ERROR 16:51:19,669 - Semanticka greska na liniji 97  t2 mora biti int, char ili bool!
ERROR 16:51:19,669 - Semanticka greska na liniji 98  t2 mora biti int, char ili bool!
ERROR 16:51:19,669 - Semanticka greska na liniji 99  t2 mora biti int, char ili bool!
ERROR 16:51:19,669 - Semanticka greska na liniji 105 nekompatibilni tipovi za aritmeticku operaciju!
ERROR 16:51:19,669 - Semanticka greska na liniji 105 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:19,670 - Parsiranje NIJE uspesno zavrseno!
