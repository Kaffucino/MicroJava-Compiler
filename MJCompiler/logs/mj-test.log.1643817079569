INFO  16:51:10,441 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  16:51:10,471 - #2 program
INFO  16:51:10,471 - #16 test302
INFO  16:51:10,471 - #48 const
INFO  16:51:10,471 - #16 int
INFO  16:51:10,471 - #16 jedan
INFO  16:51:10,472 - #13 =
INFO  16:51:10,472 - #15 1
INFO  16:51:10,472 - #5 ;
INFO  16:51:10,472 - #16 int
INFO  16:51:10,473 - #16 i
INFO  16:51:10,473 - #5 ;
INFO  16:51:10,473 - #16 bool
INFO  16:51:10,473 - #16 ibool
INFO  16:51:10,473 - #5 ;
INFO  16:51:10,473 - #16 int
INFO  16:51:10,473 - #16 niz2
INFO  16:51:10,473 - #5 ;
INFO  16:51:10,473 - #49 record
INFO  16:51:10,473 - #16 Test
INFO  16:51:10,473 - #3 {
INFO  16:51:10,474 - #16 int
INFO  16:51:10,474 - #16 niz
INFO  16:51:10,474 - #50 [
INFO  16:51:10,474 - #51 ]
INFO  16:51:10,474 - #5 ;
INFO  16:51:10,474 - #16 int
INFO  16:51:10,474 - #16 a
INFO  16:51:10,474 - #5 ;
INFO  16:51:10,474 - #4 }
INFO  16:51:10,474 - #16 Test
INFO  16:51:10,475 - #16 t1
INFO  16:51:10,475 - #8 ,
INFO  16:51:10,475 - #16 t2
INFO  16:51:10,475 - #5 ;
INFO  16:51:10,475 - #3 {
INFO  16:51:10,476 - #16 int
INFO  16:51:10,476 - #16 sum
INFO  16:51:10,476 - #6 (
INFO  16:51:10,476 - #16 int
INFO  16:51:10,476 - #16 z
INFO  16:51:10,476 - #8 ,
INFO  16:51:10,476 - #16 int
INFO  16:51:10,476 - #16 d
INFO  16:51:10,476 - #7 )
INFO  16:51:10,477 - #3 {
INFO  16:51:10,477 - #10 return
INFO  16:51:10,477 - #16 z
INFO  16:51:10,477 - #11 +
INFO  16:51:10,478 - #16 d
INFO  16:51:10,479 - #5 ;
INFO  16:51:10,479 - #4 }
INFO  16:51:10,480 - #16 int
INFO  16:51:10,480 - #16 inkrement
INFO  16:51:10,480 - #6 (
INFO  16:51:10,480 - #16 int
INFO  16:51:10,480 - #16 a
INFO  16:51:10,480 - #8 ,
INFO  16:51:10,480 - #16 int
INFO  16:51:10,480 - #16 inc
INFO  16:51:10,480 - #7 )
INFO  16:51:10,480 - #16 int
INFO  16:51:10,480 - #16 pom
INFO  16:51:10,480 - #5 ;
INFO  16:51:10,481 - #3 {
INFO  16:51:10,481 - #19 if
INFO  16:51:10,481 - #6 (
INFO  16:51:10,481 - #16 inc
INFO  16:51:10,481 - #22 ==
INFO  16:51:10,484 - #16 jedan
INFO  16:51:10,484 - #7 )
INFO  16:51:10,486 - #16 pom
INFO  16:51:10,486 - #13 =
INFO  16:51:10,486 - #15 1
INFO  16:51:10,486 - #5 ;
INFO  16:51:10,486 - #20 else
INFO  16:51:10,486 - #19 if
INFO  16:51:10,486 - #6 (
INFO  16:51:10,487 - #16 inc
INFO  16:51:10,487 - #22 ==
INFO  16:51:10,487 - #15 2
INFO  16:51:10,487 - #7 )
INFO  16:51:10,487 - #16 pom
INFO  16:51:10,487 - #13 =
INFO  16:51:10,487 - #16 a
INFO  16:51:10,487 - #5 ;
INFO  16:51:10,487 - #10 return
INFO  16:51:10,487 - #16 sum
INFO  16:51:10,487 - #6 (
INFO  16:51:10,487 - #16 a
INFO  16:51:10,487 - #8 ,
INFO  16:51:10,488 - #16 pom
INFO  16:51:10,488 - #7 )
INFO  16:51:10,488 - #5 ;
INFO  16:51:10,488 - #4 }
INFO  16:51:10,488 - #16 bool
INFO  16:51:10,489 - #16 verify
INFO  16:51:10,489 - #6 (
INFO  16:51:10,489 - #7 )
INFO  16:51:10,489 - #3 {
INFO  16:51:10,489 - #9 print
INFO  16:51:10,489 - #6 (
INFO  16:51:10,489 - #17 'v'
INFO  16:51:10,489 - #7 )
INFO  16:51:10,489 - #5 ;
INFO  16:51:10,489 - #10 return
INFO  16:51:10,489 - #18 false
INFO  16:51:10,489 - #5 ;
INFO  16:51:10,489 - #4 }
INFO  16:51:10,489 - #14 void
INFO  16:51:10,489 - #16 main
INFO  16:51:10,490 - #6 (
INFO  16:51:10,490 - #7 )
INFO  16:51:10,490 - #3 {
INFO  16:51:10,490 - #19 if
INFO  16:51:10,490 - #6 (
INFO  16:51:10,490 - #15 1
INFO  16:51:10,490 - #23 !=
INFO  16:51:10,490 - #15 1
INFO  16:51:10,490 - #7 )
INFO  16:51:10,490 - #9 print
INFO  16:51:10,490 - #6 (
INFO  16:51:10,490 - #12 -
INFO  16:51:10,490 - #15 6
INFO  16:51:10,490 - #7 )
INFO  16:51:10,491 - #5 ;
INFO  16:51:10,491 - #20 else
INFO  16:51:10,491 - #9 print
INFO  16:51:10,491 - #6 (
INFO  16:51:10,491 - #15 0
INFO  16:51:10,491 - #7 )
INFO  16:51:10,491 - #5 ;
INFO  16:51:10,491 - #16 ibool
INFO  16:51:10,491 - #13 =
INFO  16:51:10,491 - #18 false
INFO  16:51:10,491 - #5 ;
INFO  16:51:10,491 - #16 i
INFO  16:51:10,491 - #13 =
INFO  16:51:10,491 - #15 0
INFO  16:51:10,491 - #5 ;
INFO  16:51:10,491 - #34 do
INFO  16:51:10,491 - #3 {
INFO  16:51:10,492 - #19 if
INFO  16:51:10,492 - #6 (
INFO  16:51:10,492 - #16 i
INFO  16:51:10,492 - #22 ==
INFO  16:51:10,492 - #15 2
INFO  16:51:10,492 - #7 )
INFO  16:51:10,492 - #16 ibool
INFO  16:51:10,492 - #13 =
INFO  16:51:10,492 - #18 true
INFO  16:51:10,492 - #5 ;
INFO  16:51:10,492 - #16 i
INFO  16:51:10,492 - #46 ++
INFO  16:51:10,492 - #5 ;
INFO  16:51:10,492 - #4 }
INFO  16:51:10,492 - #35 while
INFO  16:51:10,493 - #6 (
INFO  16:51:10,493 - #16 i
INFO  16:51:10,493 - #26 <
INFO  16:51:10,493 - #15 5
INFO  16:51:10,493 - #7 )
INFO  16:51:10,493 - #5 ;
INFO  16:51:10,494 - #19 if
INFO  16:51:10,494 - #6 (
INFO  16:51:10,494 - #16 ibool
INFO  16:51:10,494 - #7 )
INFO  16:51:10,494 - #19 if
INFO  16:51:10,494 - #6 (
INFO  16:51:10,494 - #16 i
INFO  16:51:10,494 - #22 ==
INFO  16:51:10,494 - #15 5
INFO  16:51:10,494 - #7 )
INFO  16:51:10,494 - #9 print
INFO  16:51:10,494 - #6 (
INFO  16:51:10,495 - #15 1
INFO  16:51:10,495 - #7 )
INFO  16:51:10,495 - #5 ;
INFO  16:51:10,495 - #20 else
INFO  16:51:10,495 - #9 print
INFO  16:51:10,495 - #6 (
INFO  16:51:10,495 - #12 -
INFO  16:51:10,495 - #15 1
INFO  16:51:10,495 - #7 )
INFO  16:51:10,495 - #5 ;
INFO  16:51:10,495 - #16 t1
INFO  16:51:10,495 - #13 =
INFO  16:51:10,495 - #36 new
INFO  16:51:10,495 - #16 Test
INFO  16:51:10,495 - #5 ;
INFO  16:51:10,495 - #16 t1
INFO  16:51:10,495 - #43 .
INFO  16:51:10,495 - #16 a
INFO  16:51:10,495 - #13 =
INFO  16:51:10,496 - #15 2
INFO  16:51:10,496 - #5 ;
INFO  16:51:10,496 - #16 t1
INFO  16:51:10,496 - #43 .
INFO  16:51:10,496 - #16 niz
INFO  16:51:10,496 - #13 =
INFO  16:51:10,496 - #36 new
INFO  16:51:10,496 - #16 int
INFO  16:51:10,496 - #50 [
INFO  16:51:10,496 - #15 3
INFO  16:51:10,496 - #51 ]
INFO  16:51:10,496 - #5 ;
INFO  16:51:10,496 - #16 t1
INFO  16:51:10,496 - #43 .
INFO  16:51:10,496 - #16 niz
INFO  16:51:10,496 - #50 [
INFO  16:51:10,496 - #15 0
INFO  16:51:10,496 - #51 ]
INFO  16:51:10,496 - #13 =
INFO  16:51:10,496 - #15 1
INFO  16:51:10,497 - #28 *
INFO  16:51:10,497 - #16 t1
INFO  16:51:10,497 - #43 .
INFO  16:51:10,497 - #16 a
INFO  16:51:10,497 - #5 ;
INFO  16:51:10,497 - #16 t1
INFO  16:51:10,497 - #43 .
INFO  16:51:10,497 - #16 niz
INFO  16:51:10,498 - #50 [
INFO  16:51:10,498 - #15 1
INFO  16:51:10,498 - #51 ]
INFO  16:51:10,498 - #13 =
INFO  16:51:10,498 - #15 2
INFO  16:51:10,498 - #28 *
INFO  16:51:10,498 - #16 t1
INFO  16:51:10,498 - #43 .
INFO  16:51:10,498 - #16 a
INFO  16:51:10,498 - #5 ;
INFO  16:51:10,498 - #16 t1
INFO  16:51:10,498 - #43 .
INFO  16:51:10,498 - #16 niz
INFO  16:51:10,498 - #50 [
INFO  16:51:10,498 - #15 2
INFO  16:51:10,498 - #51 ]
INFO  16:51:10,498 - #13 =
INFO  16:51:10,498 - #16 sum
INFO  16:51:10,498 - #6 (
INFO  16:51:10,498 - #16 t1
INFO  16:51:10,498 - #43 .
INFO  16:51:10,498 - #16 niz
INFO  16:51:10,498 - #50 [
INFO  16:51:10,498 - #15 1
INFO  16:51:10,498 - #51 ]
INFO  16:51:10,498 - #8 ,
INFO  16:51:10,498 - #16 t1
INFO  16:51:10,498 - #43 .
INFO  16:51:10,498 - #16 niz
INFO  16:51:10,498 - #50 [
INFO  16:51:10,498 - #15 0
INFO  16:51:10,498 - #51 ]
INFO  16:51:10,498 - #7 )
INFO  16:51:10,498 - #28 *
INFO  16:51:10,499 - #16 t1
INFO  16:51:10,499 - #43 .
INFO  16:51:10,499 - #16 a
INFO  16:51:10,499 - #11 +
INFO  16:51:10,499 - #15 1
INFO  16:51:10,499 - #5 ;
INFO  16:51:10,499 - #19 if
INFO  16:51:10,499 - #6 (
INFO  16:51:10,499 - #16 verify
INFO  16:51:10,499 - #6 (
INFO  16:51:10,499 - #7 )
ERROR 16:51:10,499 - 
Sintaksna greska na liniji 61
INFO  16:51:10,499 - #45 ||
INFO  16:51:10,499 - #16 t1
INFO  16:51:10,499 - #43 .
INFO  16:51:10,499 - #16 niz
INFO  16:51:10,499 - #50 [
INFO  16:51:10,499 - #15 2
INFO  16:51:10,499 - #51 ]
INFO  16:51:10,499 - #22 ==
INFO  16:51:10,500 - #15 4
INFO  16:51:10,500 - #7 )
INFO  16:51:10,500 - #9 print
INFO  16:51:10,500 - #6 (
INFO  16:51:10,500 - #16 ord
ERROR 16:51:10,500 - Izvrsen oporavak do ) u liniji 61
INFO  16:51:10,500 - #6 (
INFO  16:51:10,500 - #17 'A'
INFO  16:51:10,500 - #7 )
INFO  16:51:10,500 - #7 )
INFO  16:51:10,500 - #5 ;
INFO  16:51:10,500 - #20 else
INFO  16:51:10,500 - #9 print
INFO  16:51:10,500 - #6 (
INFO  16:51:10,500 - #16 ord
INFO  16:51:10,500 - #6 (
INFO  16:51:10,500 - #17 'a'
INFO  16:51:10,500 - #7 )
INFO  16:51:10,500 - #7 )
INFO  16:51:10,500 - #5 ;
INFO  16:51:10,500 - #9 print
INFO  16:51:10,500 - #6 (
INFO  16:51:10,500 - #16 eol
INFO  16:51:10,500 - #7 )
INFO  16:51:10,500 - #5 ;
INFO  16:51:10,500 - #16 i
INFO  16:51:10,500 - #13 =
INFO  16:51:10,501 - #15 0
INFO  16:51:10,501 - #5 ;
INFO  16:51:10,501 - #34 do
INFO  16:51:10,501 - #3 {
INFO  16:51:10,501 - #19 if
INFO  16:51:10,501 - #6 (
INFO  16:51:10,501 - #16 i
INFO  16:51:10,501 - #22 ==
INFO  16:51:10,501 - #15 3
INFO  16:51:10,501 - #7 )
INFO  16:51:10,501 - #3 {
INFO  16:51:10,501 - #16 i
INFO  16:51:10,501 - #46 ++
INFO  16:51:10,501 - #5 ;
INFO  16:51:10,501 - #39 continue
INFO  16:51:10,501 - #5 ;
INFO  16:51:10,501 - #4 }
INFO  16:51:10,501 - #19 if
INFO  16:51:10,501 - #6 (
INFO  16:51:10,501 - #16 i
INFO  16:51:10,501 - #22 ==
INFO  16:51:10,501 - #15 4
INFO  16:51:10,501 - #7 )
INFO  16:51:10,501 - #31 break
INFO  16:51:10,501 - #5 ;
INFO  16:51:10,501 - #16 i
INFO  16:51:10,502 - #13 =
INFO  16:51:10,502 - #16 inkrement
INFO  16:51:10,502 - #6 (
INFO  16:51:10,502 - #16 i
INFO  16:51:10,502 - #8 ,
INFO  16:51:10,502 - #15 1
INFO  16:51:10,502 - #7 )
INFO  16:51:10,502 - #5 ;
INFO  16:51:10,502 - #4 }
INFO  16:51:10,502 - #35 while
INFO  16:51:10,502 - #6 (
INFO  16:51:10,502 - #16 i
INFO  16:51:10,502 - #26 <
INFO  16:51:10,502 - #15 10
INFO  16:51:10,502 - #7 )
INFO  16:51:10,502 - #5 ;
INFO  16:51:10,502 - #19 if
INFO  16:51:10,502 - #6 (
INFO  16:51:10,502 - #16 i
INFO  16:51:10,502 - #22 ==
INFO  16:51:10,502 - #15 3
INFO  16:51:10,502 - #44 &&
INFO  16:51:10,502 - #16 verify
INFO  16:51:10,502 - #6 (
INFO  16:51:10,502 - #7 )
ERROR 16:51:10,502 - 
Sintaksna greska na liniji 76
INFO  16:51:10,502 - #7 )
INFO  16:51:10,502 - #9 print
INFO  16:51:10,502 - #6 (
INFO  16:51:10,502 - #12 -
ERROR 16:51:10,502 - Izvrsen oporavak do ) u liniji 76
INFO  16:51:10,502 - #15 4
INFO  16:51:10,502 - #7 )
INFO  16:51:10,502 - #5 ;
INFO  16:51:10,502 - #20 else
INFO  16:51:10,502 - #9 print
INFO  16:51:10,502 - #6 (
INFO  16:51:10,502 - #15 4
INFO  16:51:10,503 - #7 )
INFO  16:51:10,503 - #5 ;
INFO  16:51:10,503 - #37 read
INFO  16:51:10,503 - #6 (
INFO  16:51:10,503 - #16 t1
INFO  16:51:10,503 - #43 .
INFO  16:51:10,503 - #16 niz
INFO  16:51:10,503 - #50 [
INFO  16:51:10,503 - #15 0
INFO  16:51:10,503 - #51 ]
INFO  16:51:10,503 - #7 )
INFO  16:51:10,503 - #5 ;
INFO  16:51:10,503 - #37 read
INFO  16:51:10,503 - #6 (
INFO  16:51:10,503 - #16 t1
INFO  16:51:10,503 - #43 .
INFO  16:51:10,503 - #16 niz
INFO  16:51:10,503 - #50 [
INFO  16:51:10,503 - #15 1
INFO  16:51:10,503 - #51 ]
INFO  16:51:10,503 - #7 )
INFO  16:51:10,503 - #5 ;
INFO  16:51:10,503 - #37 read
INFO  16:51:10,503 - #6 (
INFO  16:51:10,503 - #16 t1
INFO  16:51:10,503 - #43 .
INFO  16:51:10,503 - #16 niz
INFO  16:51:10,503 - #50 [
INFO  16:51:10,503 - #15 2
INFO  16:51:10,503 - #51 ]
INFO  16:51:10,503 - #7 )
INFO  16:51:10,503 - #5 ;
INFO  16:51:10,503 - #9 print
INFO  16:51:10,503 - #6 (
INFO  16:51:10,503 - #16 eol
INFO  16:51:10,503 - #7 )
INFO  16:51:10,503 - #5 ;
INFO  16:51:10,503 - #9 print
INFO  16:51:10,503 - #6 (
INFO  16:51:10,503 - #16 sum
INFO  16:51:10,503 - #6 (
INFO  16:51:10,503 - #16 sum
INFO  16:51:10,503 - #6 (
INFO  16:51:10,503 - #16 t1
INFO  16:51:10,504 - #43 .
INFO  16:51:10,504 - #16 niz
INFO  16:51:10,504 - #50 [
INFO  16:51:10,504 - #15 0
INFO  16:51:10,504 - #51 ]
INFO  16:51:10,504 - #8 ,
INFO  16:51:10,504 - #16 t1
INFO  16:51:10,504 - #43 .
INFO  16:51:10,504 - #16 niz
INFO  16:51:10,504 - #50 [
INFO  16:51:10,504 - #15 1
INFO  16:51:10,504 - #51 ]
INFO  16:51:10,504 - #7 )
INFO  16:51:10,504 - #8 ,
INFO  16:51:10,504 - #16 t1
INFO  16:51:10,504 - #43 .
INFO  16:51:10,504 - #16 niz
INFO  16:51:10,504 - #50 [
INFO  16:51:10,504 - #15 2
INFO  16:51:10,504 - #51 ]
INFO  16:51:10,504 - #7 )
INFO  16:51:10,504 - #7 )
INFO  16:51:10,504 - #5 ;
INFO  16:51:10,504 - #9 print
INFO  16:51:10,504 - #6 (
INFO  16:51:10,504 - #16 eol
INFO  16:51:10,504 - #7 )
INFO  16:51:10,504 - #5 ;
INFO  16:51:10,504 - #9 print
INFO  16:51:10,504 - #6 (
INFO  16:51:10,504 - #16 inkrement
INFO  16:51:10,504 - #6 (
INFO  16:51:10,504 - #16 t1
INFO  16:51:10,504 - #43 .
INFO  16:51:10,504 - #16 niz
INFO  16:51:10,504 - #50 [
INFO  16:51:10,504 - #15 2
INFO  16:51:10,504 - #51 ]
INFO  16:51:10,504 - #8 ,
INFO  16:51:10,504 - #15 2
INFO  16:51:10,504 - #7 )
INFO  16:51:10,504 - #7 )
INFO  16:51:10,504 - #5 ;
INFO  16:51:10,504 - #16 t2
INFO  16:51:10,504 - #13 =
INFO  16:51:10,504 - #36 new
INFO  16:51:10,504 - #16 Test
INFO  16:51:10,504 - #5 ;
INFO  16:51:10,505 - #16 t2
INFO  16:51:10,505 - #43 .
INFO  16:51:10,505 - #16 a
INFO  16:51:10,505 - #13 =
INFO  16:51:10,505 - #15 3
INFO  16:51:10,505 - #5 ;
INFO  16:51:10,505 - #16 t2
INFO  16:51:10,505 - #43 .
INFO  16:51:10,505 - #16 niz
INFO  16:51:10,505 - #13 =
INFO  16:51:10,505 - #36 new
INFO  16:51:10,505 - #16 int
INFO  16:51:10,505 - #50 [
INFO  16:51:10,505 - #15 3
INFO  16:51:10,505 - #51 ]
INFO  16:51:10,505 - #5 ;
INFO  16:51:10,505 - #16 i
INFO  16:51:10,505 - #13 =
INFO  16:51:10,505 - #15 0
INFO  16:51:10,505 - #5 ;
INFO  16:51:10,505 - #34 do
INFO  16:51:10,505 - #3 {
INFO  16:51:10,505 - #16 t2
INFO  16:51:10,505 - #43 .
INFO  16:51:10,505 - #16 niz
INFO  16:51:10,505 - #50 [
INFO  16:51:10,505 - #16 i
INFO  16:51:10,505 - #51 ]
INFO  16:51:10,505 - #13 =
INFO  16:51:10,505 - #16 t1
INFO  16:51:10,505 - #43 .
INFO  16:51:10,505 - #16 niz
INFO  16:51:10,505 - #50 [
INFO  16:51:10,505 - #16 i
INFO  16:51:10,505 - #51 ]
INFO  16:51:10,505 - #28 *
INFO  16:51:10,505 - #15 2
INFO  16:51:10,505 - #28 *
INFO  16:51:10,505 - #16 t2
INFO  16:51:10,505 - #43 .
INFO  16:51:10,506 - #16 a
INFO  16:51:10,506 - #5 ;
INFO  16:51:10,507 - #16 i
INFO  16:51:10,507 - #46 ++
INFO  16:51:10,507 - #5 ;
INFO  16:51:10,507 - #4 }
INFO  16:51:10,507 - #35 while
INFO  16:51:10,507 - #6 (
INFO  16:51:10,507 - #16 i
INFO  16:51:10,508 - #26 <
INFO  16:51:10,508 - #15 3
INFO  16:51:10,508 - #7 )
INFO  16:51:10,508 - #5 ;
INFO  16:51:10,508 - #9 print
INFO  16:51:10,508 - #6 (
INFO  16:51:10,508 - #16 t2
INFO  16:51:10,508 - #43 .
INFO  16:51:10,509 - #16 niz
INFO  16:51:10,509 - #50 [
INFO  16:51:10,509 - #15 0
INFO  16:51:10,509 - #51 ]
INFO  16:51:10,509 - #7 )
INFO  16:51:10,509 - #5 ;
INFO  16:51:10,509 - #9 print
INFO  16:51:10,509 - #6 (
INFO  16:51:10,509 - #16 t2
INFO  16:51:10,509 - #43 .
INFO  16:51:10,509 - #16 niz
INFO  16:51:10,509 - #50 [
INFO  16:51:10,509 - #15 1
INFO  16:51:10,509 - #51 ]
INFO  16:51:10,509 - #7 )
INFO  16:51:10,509 - #5 ;
INFO  16:51:10,509 - #9 print
INFO  16:51:10,509 - #6 (
INFO  16:51:10,509 - #16 t2
INFO  16:51:10,509 - #43 .
INFO  16:51:10,509 - #16 niz
INFO  16:51:10,509 - #50 [
INFO  16:51:10,509 - #15 2
INFO  16:51:10,509 - #51 ]
INFO  16:51:10,509 - #7 )
INFO  16:51:10,509 - #5 ;
INFO  16:51:10,509 - #9 print
INFO  16:51:10,509 - #6 (
INFO  16:51:10,509 - #16 eol
INFO  16:51:10,509 - #7 )
INFO  16:51:10,509 - #5 ;
INFO  16:51:10,509 - #16 i
INFO  16:51:10,509 - #13 =
INFO  16:51:10,509 - #15 0
INFO  16:51:10,509 - #5 ;
INFO  16:51:10,509 - #16 niz2
INFO  16:51:10,509 - #13 =
INFO  16:51:10,509 - #15 0
INFO  16:51:10,509 - #5 ;
INFO  16:51:10,509 - #34 do
INFO  16:51:10,509 - #3 {
INFO  16:51:10,510 - #16 niz2
INFO  16:51:10,510 - #13 =
INFO  16:51:10,510 - #16 niz2
INFO  16:51:10,510 - #11 +
INFO  16:51:10,510 - #16 t1
INFO  16:51:10,510 - #43 .
INFO  16:51:10,510 - #16 niz
INFO  16:51:10,510 - #50 [
INFO  16:51:10,510 - #16 i
INFO  16:51:10,510 - #51 ]
INFO  16:51:10,510 - #28 *
INFO  16:51:10,510 - #16 t2
INFO  16:51:10,510 - #43 .
INFO  16:51:10,510 - #16 niz
INFO  16:51:10,510 - #50 [
INFO  16:51:10,510 - #16 i
INFO  16:51:10,510 - #51 ]
INFO  16:51:10,510 - #5 ;
INFO  16:51:10,510 - #16 i
INFO  16:51:10,510 - #46 ++
INFO  16:51:10,510 - #5 ;
INFO  16:51:10,510 - #4 }
INFO  16:51:10,510 - #35 while
INFO  16:51:10,510 - #6 (
INFO  16:51:10,510 - #16 i
INFO  16:51:10,510 - #26 <
INFO  16:51:10,510 - #15 3
INFO  16:51:10,510 - #7 )
INFO  16:51:10,510 - #5 ;
INFO  16:51:10,510 - #9 print
INFO  16:51:10,510 - #6 (
INFO  16:51:10,510 - #16 niz2
INFO  16:51:10,510 - #7 )
INFO  16:51:10,510 - #5 ;
INFO  16:51:10,510 - #9 print
INFO  16:51:10,510 - #6 (
INFO  16:51:10,510 - #16 eol
INFO  16:51:10,510 - #7 )
INFO  16:51:10,510 - #5 ;
INFO  16:51:10,510 - #4 }
INFO  16:51:10,510 - #4 }
INFO  16:51:10,518 - Trenutan tip konstante je:  int na liniji 5
INFO  16:51:10,518 - Deklarisana promenljiva i na liniji 7
INFO  16:51:10,518 - Deklarisana promenljiva ibool na liniji 8
INFO  16:51:10,518 - Deklarisana promenljiva niz2 na liniji 10
INFO  16:51:10,518 - Deklarisana promenljiva niz na liniji 13
INFO  16:51:10,518 - Deklarisana promenljiva a na liniji 14
INFO  16:51:10,518 - Deklarisana je rekord :  Test na liniji 12
INFO  16:51:10,518 - Deklarisana promenljiva t2 na liniji 17
INFO  16:51:10,518 - Deklarisana promenljiva t1 na liniji 17
INFO  16:51:10,518 - Obradjuje se funkcija sum na liniji 21
INFO  16:51:10,518 - Naveden argument d na liniji 21
INFO  16:51:10,518 - Naveden argument z na liniji 21
INFO  16:51:10,518 - Obradjuje se funkcija inkrement na liniji 26
INFO  16:51:10,518 - Naveden argument inc na liniji 26
ERROR 16:51:10,518 - Greska! Vec postoji argument sa imenom: a
INFO  16:51:10,518 - Deklarisana promenljiva pom na liniji 27
ERROR 16:51:10,518 - Greska na liniji 29 : ime inc nije deklarisano! 
ERROR 16:51:10,519 - Greska na liniji 30 : ime inc nije deklarisano! 
INFO  16:51:10,519 - Obradjuje se funkcija verify na liniji 35
INFO  16:51:10,519 - Obradjuje se funkcija main na liniji 40
ERROR 16:51:10,519 - Semanticka greska na liniji 56 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:10,519 - Semanticka greska na liniji 57 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:10,519 - Semanticka greska na liniji 58 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:10,519 - Semanticka greska na liniji 59 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:10,519 - Semanticka greska na liniji 60 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:10,519 - Semanticka greska na liniji 61 print prima samo num, char ili bool!
ERROR 16:51:10,519 - Semanticka greska na liniji 62 print prima samo num, char ili bool!
ERROR 16:51:10,519 - Semanticka greska na liniji 79  t1 mora biti int, char ili bool!
ERROR 16:51:10,519 - Semanticka greska na liniji 80  t1 mora biti int, char ili bool!
ERROR 16:51:10,519 - Semanticka greska na liniji 81  t1 mora biti int, char ili bool!
ERROR 16:51:10,519 - Semanticka greska na liniji 84 print prima samo num, char ili bool!
ERROR 16:51:10,519 - Semanticka greska na liniji 87 print prima samo num, char ili bool!
ERROR 16:51:10,519 - Semanticka greska na liniji 90 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:10,519 - Semanticka greska na liniji 91 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:10,519 - Semanticka greska na liniji 97  t2 mora biti int, char ili bool!
ERROR 16:51:10,519 - Semanticka greska na liniji 98  t2 mora biti int, char ili bool!
ERROR 16:51:10,519 - Semanticka greska na liniji 99  t2 mora biti int, char ili bool!
ERROR 16:51:10,519 - Semanticka greska na liniji 105 nekompatibilni tipovi za aritmeticku operaciju!
ERROR 16:51:10,519 - Semanticka greska na liniji 105 nekompatibilni tipovi prilikom dodele!
ERROR 16:51:10,520 - Parsiranje NIJE uspesno zavrseno!
