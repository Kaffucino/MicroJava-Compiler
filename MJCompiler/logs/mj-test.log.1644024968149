INFO  02:35:36,594 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  02:35:36,623 - #2 program
INFO  02:35:36,623 - #16 test302
INFO  02:35:36,624 - #48 const
INFO  02:35:36,624 - #16 int
INFO  02:35:36,624 - #16 jedan
INFO  02:35:36,624 - #13 =
INFO  02:35:36,624 - #15 1
INFO  02:35:36,625 - #5 ;
INFO  02:35:36,625 - #48 const
INFO  02:35:36,626 - #16 char
INFO  02:35:36,626 - #16 Cofa
INFO  02:35:36,626 - #13 =
INFO  02:35:36,626 - #17 'a'
INFO  02:35:36,626 - #5 ;
INFO  02:35:36,626 - #16 int
INFO  02:35:36,626 - #16 i
INFO  02:35:36,626 - #5 ;
INFO  02:35:36,627 - #16 bool
INFO  02:35:36,627 - #16 cc
INFO  02:35:36,627 - #5 ;
INFO  02:35:36,627 - #16 bool
INFO  02:35:36,627 - #16 ibool
INFO  02:35:36,627 - #5 ;
INFO  02:35:36,627 - #16 int
INFO  02:35:36,627 - #16 niz2
INFO  02:35:36,627 - #5 ;
INFO  02:35:36,627 - #49 record
INFO  02:35:36,627 - #16 Test
INFO  02:35:36,627 - #3 {
INFO  02:35:36,628 - #16 int
INFO  02:35:36,628 - #16 niz
INFO  02:35:36,628 - #50 [
INFO  02:35:36,628 - #51 ]
INFO  02:35:36,628 - #5 ;
INFO  02:35:36,628 - #16 int
INFO  02:35:36,628 - #16 a
INFO  02:35:36,628 - #5 ;
INFO  02:35:36,628 - #4 }
INFO  02:35:36,628 - #49 record
INFO  02:35:36,629 - #16 Test2
INFO  02:35:36,629 - #3 {
INFO  02:35:36,629 - #16 int
INFO  02:35:36,629 - #16 niz23
INFO  02:35:36,629 - #50 [
INFO  02:35:36,629 - #51 ]
INFO  02:35:36,629 - #5 ;
INFO  02:35:36,629 - #16 int
INFO  02:35:36,629 - #16 a2
INFO  02:35:36,629 - #5 ;
INFO  02:35:36,629 - #4 }
INFO  02:35:36,629 - #16 Test
INFO  02:35:36,629 - #16 t1
INFO  02:35:36,629 - #8 ,
INFO  02:35:36,629 - #16 t2
INFO  02:35:36,629 - #5 ;
INFO  02:35:36,629 - #3 {
INFO  02:35:36,630 - #16 int
INFO  02:35:36,630 - #16 sum
INFO  02:35:36,630 - #6 (
INFO  02:35:36,630 - #16 int
INFO  02:35:36,630 - #16 z
INFO  02:35:36,630 - #8 ,
INFO  02:35:36,631 - #16 int
INFO  02:35:36,631 - #16 d
INFO  02:35:36,631 - #7 )
INFO  02:35:36,631 - #3 {
INFO  02:35:36,632 - #10 return
INFO  02:35:36,632 - #15 1
INFO  02:35:36,632 - #5 ;
INFO  02:35:36,633 - #4 }
INFO  02:35:36,633 - #16 int
INFO  02:35:36,633 - #16 inkrement
INFO  02:35:36,633 - #6 (
INFO  02:35:36,633 - #16 int
INFO  02:35:36,633 - #16 a
INFO  02:35:36,633 - #8 ,
INFO  02:35:36,634 - #16 int
INFO  02:35:36,634 - #16 inc
INFO  02:35:36,634 - #7 )
INFO  02:35:36,634 - #16 int
INFO  02:35:36,634 - #16 pom
INFO  02:35:36,634 - #5 ;
INFO  02:35:36,634 - #3 {
INFO  02:35:36,634 - #19 if
INFO  02:35:36,634 - #6 (
INFO  02:35:36,634 - #16 inc
INFO  02:35:36,634 - #22 ==
INFO  02:35:36,634 - #16 jedan
INFO  02:35:36,635 - #7 )
INFO  02:35:36,636 - #16 pom
INFO  02:35:36,636 - #13 =
INFO  02:35:36,636 - #15 1
INFO  02:35:36,637 - #5 ;
INFO  02:35:36,637 - #20 else
INFO  02:35:36,637 - #19 if
INFO  02:35:36,637 - #6 (
INFO  02:35:36,637 - #16 inc
INFO  02:35:36,637 - #22 ==
INFO  02:35:36,637 - #15 2
INFO  02:35:36,637 - #7 )
INFO  02:35:36,637 - #16 pom
INFO  02:35:36,637 - #13 =
INFO  02:35:36,637 - #16 a
INFO  02:35:36,637 - #5 ;
INFO  02:35:36,637 - #10 return
INFO  02:35:36,638 - #16 t1
INFO  02:35:36,638 - #43 .
INFO  02:35:36,638 - #16 niz
INFO  02:35:36,638 - #50 [
INFO  02:35:36,638 - #15 5
INFO  02:35:36,638 - #51 ]
INFO  02:35:36,638 - #5 ;
INFO  02:35:36,638 - #4 }
INFO  02:35:36,638 - #16 int
INFO  02:35:36,638 - #16 func
INFO  02:35:36,638 - #6 (
INFO  02:35:36,638 - #16 int
INFO  02:35:36,638 - #16 a
INFO  02:35:36,638 - #8 ,
INFO  02:35:36,638 - #16 int
INFO  02:35:36,638 - #16 b
INFO  02:35:36,639 - #8 ,
INFO  02:35:36,639 - #16 int
INFO  02:35:36,639 - #16 c
INFO  02:35:36,639 - #8 ,
INFO  02:35:36,639 - #16 int
INFO  02:35:36,639 - #16 d
INFO  02:35:36,639 - #7 )
INFO  02:35:36,639 - #3 {
INFO  02:35:36,639 - #10 return
INFO  02:35:36,639 - #16 a
INFO  02:35:36,639 - #11 +
INFO  02:35:36,639 - #16 b
INFO  02:35:36,640 - #11 +
INFO  02:35:36,640 - #16 c
INFO  02:35:36,640 - #11 +
INFO  02:35:36,640 - #16 d
INFO  02:35:36,640 - #5 ;
INFO  02:35:36,640 - #4 }
INFO  02:35:36,640 - #16 bool
INFO  02:35:36,640 - #16 verify
INFO  02:35:36,640 - #6 (
INFO  02:35:36,640 - #7 )
INFO  02:35:36,640 - #3 {
INFO  02:35:36,640 - #16 func
INFO  02:35:36,640 - #6 (
INFO  02:35:36,640 - #15 1
INFO  02:35:36,640 - #8 ,
INFO  02:35:36,640 - #15 2
INFO  02:35:36,640 - #8 ,
INFO  02:35:36,640 - #15 2
INFO  02:35:36,641 - #8 ,
INFO  02:35:36,641 - #15 3
INFO  02:35:36,641 - #7 )
INFO  02:35:36,641 - #5 ;
INFO  02:35:36,642 - #19 if
INFO  02:35:36,642 - #6 (
INFO  02:35:36,642 - #16 cc
INFO  02:35:36,642 - #44 &&
INFO  02:35:36,642 - #16 i
INFO  02:35:36,642 - #7 )
INFO  02:35:36,642 - #9 print
INFO  02:35:36,642 - #6 (
INFO  02:35:36,642 - #15 1
INFO  02:35:36,642 - #7 )
INFO  02:35:36,642 - #5 ;
INFO  02:35:36,642 - #16 inkrement
INFO  02:35:36,642 - #6 (
INFO  02:35:36,642 - #16 sum
INFO  02:35:36,642 - #6 (
INFO  02:35:36,642 - #15 1
INFO  02:35:36,643 - #8 ,
INFO  02:35:36,643 - #15 2
INFO  02:35:36,643 - #7 )
INFO  02:35:36,643 - #8 ,
INFO  02:35:36,643 - #15 2
INFO  02:35:36,643 - #7 )
INFO  02:35:36,643 - #5 ;
INFO  02:35:36,643 - #16 inkrement
INFO  02:35:36,643 - #6 (
INFO  02:35:36,643 - #15 2
INFO  02:35:36,643 - #8 ,
INFO  02:35:36,643 - #15 2
INFO  02:35:36,643 - #7 )
INFO  02:35:36,643 - #5 ;
INFO  02:35:36,643 - #9 print
INFO  02:35:36,643 - #6 (
INFO  02:35:36,643 - #17 'v'
INFO  02:35:36,643 - #7 )
INFO  02:35:36,643 - #5 ;
INFO  02:35:36,643 - #10 return
INFO  02:35:36,643 - #18 false
INFO  02:35:36,643 - #5 ;
INFO  02:35:36,643 - #4 }
INFO  02:35:36,643 - #14 void
INFO  02:35:36,644 - #16 main
INFO  02:35:36,647 - #6 (
INFO  02:35:36,647 - #7 )
INFO  02:35:36,647 - #3 {
INFO  02:35:36,647 - #19 if
INFO  02:35:36,647 - #6 (
INFO  02:35:36,647 - #15 1
INFO  02:35:36,647 - #23 !=
INFO  02:35:36,647 - #15 1
INFO  02:35:36,648 - #7 )
INFO  02:35:36,648 - #9 print
INFO  02:35:36,648 - #6 (
INFO  02:35:36,648 - #12 -
INFO  02:35:36,648 - #15 6
INFO  02:35:36,648 - #7 )
INFO  02:35:36,648 - #5 ;
INFO  02:35:36,648 - #20 else
INFO  02:35:36,648 - #9 print
INFO  02:35:36,648 - #6 (
INFO  02:35:36,648 - #15 0
INFO  02:35:36,648 - #7 )
INFO  02:35:36,648 - #5 ;
INFO  02:35:36,648 - #16 ibool
INFO  02:35:36,648 - #13 =
INFO  02:35:36,648 - #18 false
INFO  02:35:36,648 - #5 ;
INFO  02:35:36,648 - #16 i
INFO  02:35:36,648 - #13 =
INFO  02:35:36,648 - #15 0
INFO  02:35:36,649 - #5 ;
INFO  02:35:36,649 - #34 do
INFO  02:35:36,649 - #3 {
INFO  02:35:36,649 - #19 if
INFO  02:35:36,649 - #6 (
INFO  02:35:36,649 - #16 i
INFO  02:35:36,649 - #22 ==
INFO  02:35:36,649 - #15 2
INFO  02:35:36,649 - #7 )
INFO  02:35:36,649 - #16 ibool
INFO  02:35:36,649 - #13 =
INFO  02:35:36,649 - #18 true
INFO  02:35:36,649 - #5 ;
INFO  02:35:36,649 - #16 i
INFO  02:35:36,649 - #46 ++
INFO  02:35:36,649 - #5 ;
INFO  02:35:36,650 - #4 }
INFO  02:35:36,650 - #35 while
INFO  02:35:36,650 - #6 (
INFO  02:35:36,650 - #16 i
INFO  02:35:36,650 - #26 <
INFO  02:35:36,650 - #15 5
INFO  02:35:36,651 - #7 )
INFO  02:35:36,651 - #5 ;
INFO  02:35:36,651 - #19 if
INFO  02:35:36,651 - #6 (
INFO  02:35:36,651 - #16 ibool
INFO  02:35:36,651 - #7 )
INFO  02:35:36,651 - #19 if
INFO  02:35:36,651 - #6 (
INFO  02:35:36,651 - #16 i
INFO  02:35:36,651 - #22 ==
INFO  02:35:36,651 - #15 5
INFO  02:35:36,651 - #7 )
INFO  02:35:36,651 - #9 print
INFO  02:35:36,651 - #6 (
INFO  02:35:36,651 - #15 1
INFO  02:35:36,651 - #7 )
INFO  02:35:36,651 - #5 ;
INFO  02:35:36,651 - #20 else
INFO  02:35:36,651 - #9 print
INFO  02:35:36,651 - #6 (
INFO  02:35:36,651 - #12 -
INFO  02:35:36,651 - #15 1
INFO  02:35:36,652 - #7 )
INFO  02:35:36,652 - #5 ;
INFO  02:35:36,652 - #16 t1
INFO  02:35:36,652 - #13 =
INFO  02:35:36,652 - #36 new
INFO  02:35:36,652 - #16 Test
INFO  02:35:36,652 - #5 ;
INFO  02:35:36,652 - #16 t1
INFO  02:35:36,652 - #43 .
INFO  02:35:36,652 - #16 a
INFO  02:35:36,652 - #13 =
INFO  02:35:36,652 - #15 2
INFO  02:35:36,652 - #5 ;
INFO  02:35:36,652 - #16 t1
INFO  02:35:36,652 - #43 .
INFO  02:35:36,652 - #16 niz
INFO  02:35:36,652 - #13 =
INFO  02:35:36,652 - #36 new
INFO  02:35:36,653 - #16 int
INFO  02:35:36,653 - #50 [
INFO  02:35:36,653 - #15 3
INFO  02:35:36,653 - #51 ]
INFO  02:35:36,653 - #5 ;
INFO  02:35:36,653 - #16 t1
INFO  02:35:36,653 - #43 .
INFO  02:35:36,653 - #16 niz
INFO  02:35:36,653 - #50 [
INFO  02:35:36,653 - #15 0
INFO  02:35:36,653 - #51 ]
INFO  02:35:36,653 - #13 =
INFO  02:35:36,653 - #15 1
INFO  02:35:36,653 - #28 *
INFO  02:35:36,653 - #16 t1
INFO  02:35:36,654 - #43 .
INFO  02:35:36,654 - #16 a
INFO  02:35:36,654 - #5 ;
INFO  02:35:36,654 - #16 t1
INFO  02:35:36,654 - #43 .
INFO  02:35:36,654 - #16 niz
INFO  02:35:36,654 - #50 [
INFO  02:35:36,654 - #15 1
INFO  02:35:36,654 - #51 ]
INFO  02:35:36,654 - #13 =
INFO  02:35:36,654 - #15 2
INFO  02:35:36,654 - #28 *
INFO  02:35:36,654 - #16 t1
INFO  02:35:36,654 - #43 .
INFO  02:35:36,654 - #16 a
INFO  02:35:36,654 - #5 ;
INFO  02:35:36,654 - #16 t1
INFO  02:35:36,654 - #43 .
INFO  02:35:36,654 - #16 niz
INFO  02:35:36,654 - #50 [
INFO  02:35:36,654 - #15 2
INFO  02:35:36,654 - #51 ]
INFO  02:35:36,654 - #13 =
INFO  02:35:36,654 - #16 sum
INFO  02:35:36,654 - #6 (
INFO  02:35:36,654 - #16 t1
INFO  02:35:36,654 - #43 .
INFO  02:35:36,654 - #16 niz
INFO  02:35:36,654 - #50 [
INFO  02:35:36,654 - #15 1
INFO  02:35:36,654 - #51 ]
INFO  02:35:36,654 - #8 ,
INFO  02:35:36,654 - #16 t1
INFO  02:35:36,654 - #43 .
INFO  02:35:36,655 - #16 niz
INFO  02:35:36,655 - #50 [
INFO  02:35:36,655 - #15 0
INFO  02:35:36,655 - #51 ]
INFO  02:35:36,655 - #7 )
INFO  02:35:36,655 - #28 *
INFO  02:35:36,655 - #16 t1
INFO  02:35:36,655 - #43 .
INFO  02:35:36,655 - #16 a
INFO  02:35:36,655 - #11 +
INFO  02:35:36,655 - #15 1
INFO  02:35:36,655 - #5 ;
INFO  02:35:36,655 - #19 if
INFO  02:35:36,655 - #6 (
INFO  02:35:36,655 - #16 verify
INFO  02:35:36,655 - #6 (
INFO  02:35:36,655 - #7 )
INFO  02:35:36,655 - #7 )
INFO  02:35:36,655 - #9 print
INFO  02:35:36,655 - #6 (
INFO  02:35:36,655 - #16 ord
INFO  02:35:36,655 - #6 (
INFO  02:35:36,655 - #17 'A'
INFO  02:35:36,655 - #7 )
INFO  02:35:36,655 - #7 )
INFO  02:35:36,655 - #5 ;
INFO  02:35:36,655 - #20 else
INFO  02:35:36,655 - #9 print
INFO  02:35:36,655 - #6 (
INFO  02:35:36,655 - #16 ord
INFO  02:35:36,655 - #6 (
INFO  02:35:36,655 - #17 'a'
INFO  02:35:36,655 - #7 )
INFO  02:35:36,655 - #7 )
INFO  02:35:36,655 - #5 ;
INFO  02:35:36,655 - #9 print
INFO  02:35:36,655 - #6 (
INFO  02:35:36,655 - #16 eol
INFO  02:35:36,655 - #7 )
INFO  02:35:36,655 - #5 ;
INFO  02:35:36,655 - #16 i
INFO  02:35:36,655 - #13 =
INFO  02:35:36,655 - #15 0
INFO  02:35:36,655 - #5 ;
INFO  02:35:36,655 - #34 do
INFO  02:35:36,655 - #3 {
INFO  02:35:36,656 - #19 if
INFO  02:35:36,656 - #6 (
INFO  02:35:36,656 - #16 i
INFO  02:35:36,656 - #22 ==
INFO  02:35:36,656 - #15 3
INFO  02:35:36,656 - #7 )
INFO  02:35:36,656 - #3 {
INFO  02:35:36,656 - #16 i
INFO  02:35:36,656 - #46 ++
INFO  02:35:36,656 - #5 ;
INFO  02:35:36,656 - #39 continue
INFO  02:35:36,656 - #5 ;
INFO  02:35:36,656 - #4 }
INFO  02:35:36,656 - #19 if
INFO  02:35:36,656 - #6 (
INFO  02:35:36,656 - #16 i
INFO  02:35:36,657 - #22 ==
INFO  02:35:36,657 - #15 4
INFO  02:35:36,657 - #7 )
INFO  02:35:36,657 - #31 break
INFO  02:35:36,657 - #5 ;
INFO  02:35:36,657 - #16 i
INFO  02:35:36,657 - #13 =
INFO  02:35:36,657 - #16 inkrement
INFO  02:35:36,657 - #6 (
INFO  02:35:36,657 - #16 i
INFO  02:35:36,657 - #8 ,
INFO  02:35:36,657 - #15 1
INFO  02:35:36,657 - #7 )
INFO  02:35:36,657 - #5 ;
INFO  02:35:36,657 - #4 }
INFO  02:35:36,657 - #35 while
INFO  02:35:36,657 - #6 (
INFO  02:35:36,657 - #16 i
INFO  02:35:36,657 - #26 <
INFO  02:35:36,657 - #15 10
INFO  02:35:36,657 - #7 )
INFO  02:35:36,657 - #5 ;
INFO  02:35:36,657 - #19 if
INFO  02:35:36,657 - #6 (
INFO  02:35:36,657 - #16 i
INFO  02:35:36,657 - #22 ==
INFO  02:35:36,657 - #15 3
INFO  02:35:36,657 - #44 &&
INFO  02:35:36,657 - #16 verify
INFO  02:35:36,657 - #6 (
INFO  02:35:36,657 - #7 )
INFO  02:35:36,657 - #7 )
INFO  02:35:36,657 - #9 print
INFO  02:35:36,657 - #6 (
INFO  02:35:36,658 - #12 -
INFO  02:35:36,658 - #15 4
INFO  02:35:36,658 - #7 )
INFO  02:35:36,658 - #5 ;
INFO  02:35:36,658 - #20 else
INFO  02:35:36,658 - #9 print
INFO  02:35:36,658 - #6 (
INFO  02:35:36,658 - #15 4
INFO  02:35:36,658 - #7 )
INFO  02:35:36,658 - #5 ;
INFO  02:35:36,658 - #37 read
INFO  02:35:36,658 - #6 (
INFO  02:35:36,658 - #16 t1
INFO  02:35:36,658 - #43 .
INFO  02:35:36,658 - #16 niz
INFO  02:35:36,658 - #50 [
INFO  02:35:36,658 - #15 0
INFO  02:35:36,658 - #51 ]
INFO  02:35:36,658 - #7 )
INFO  02:35:36,658 - #5 ;
INFO  02:35:36,658 - #37 read
INFO  02:35:36,658 - #6 (
INFO  02:35:36,658 - #16 t1
INFO  02:35:36,658 - #43 .
INFO  02:35:36,658 - #16 niz
INFO  02:35:36,658 - #50 [
INFO  02:35:36,658 - #15 1
INFO  02:35:36,658 - #51 ]
INFO  02:35:36,658 - #7 )
INFO  02:35:36,658 - #5 ;
INFO  02:35:36,658 - #37 read
INFO  02:35:36,658 - #6 (
INFO  02:35:36,658 - #16 t1
INFO  02:35:36,658 - #43 .
INFO  02:35:36,658 - #16 niz
INFO  02:35:36,658 - #50 [
INFO  02:35:36,658 - #15 2
INFO  02:35:36,658 - #51 ]
INFO  02:35:36,658 - #7 )
INFO  02:35:36,658 - #5 ;
INFO  02:35:36,658 - #9 print
INFO  02:35:36,658 - #6 (
INFO  02:35:36,658 - #16 eol
INFO  02:35:36,658 - #7 )
INFO  02:35:36,658 - #5 ;
INFO  02:35:36,658 - #16 chr
INFO  02:35:36,658 - #6 (
INFO  02:35:36,658 - #15 3
INFO  02:35:36,659 - #7 )
INFO  02:35:36,659 - #5 ;
INFO  02:35:36,659 - #9 print
INFO  02:35:36,659 - #6 (
INFO  02:35:36,659 - #16 sum
INFO  02:35:36,659 - #6 (
INFO  02:35:36,659 - #16 sum
INFO  02:35:36,659 - #6 (
INFO  02:35:36,659 - #16 t1
INFO  02:35:36,659 - #43 .
INFO  02:35:36,659 - #16 niz
INFO  02:35:36,659 - #50 [
INFO  02:35:36,659 - #15 0
INFO  02:35:36,659 - #51 ]
INFO  02:35:36,659 - #8 ,
INFO  02:35:36,659 - #16 t1
INFO  02:35:36,659 - #43 .
INFO  02:35:36,659 - #16 niz
INFO  02:35:36,659 - #50 [
INFO  02:35:36,659 - #15 1
INFO  02:35:36,659 - #51 ]
INFO  02:35:36,659 - #7 )
INFO  02:35:36,659 - #8 ,
INFO  02:35:36,659 - #16 t1
INFO  02:35:36,659 - #43 .
INFO  02:35:36,659 - #16 niz
INFO  02:35:36,659 - #50 [
INFO  02:35:36,659 - #15 2
INFO  02:35:36,659 - #51 ]
INFO  02:35:36,659 - #7 )
INFO  02:35:36,659 - #7 )
INFO  02:35:36,659 - #5 ;
INFO  02:35:36,660 - #9 print
INFO  02:35:36,660 - #6 (
INFO  02:35:36,660 - #16 eol
INFO  02:35:36,660 - #7 )
INFO  02:35:36,660 - #5 ;
INFO  02:35:36,660 - #9 print
INFO  02:35:36,660 - #6 (
INFO  02:35:36,660 - #16 inkrement
INFO  02:35:36,660 - #6 (
INFO  02:35:36,660 - #16 t1
INFO  02:35:36,660 - #43 .
INFO  02:35:36,660 - #16 niz
INFO  02:35:36,660 - #50 [
INFO  02:35:36,660 - #15 2
INFO  02:35:36,660 - #51 ]
INFO  02:35:36,660 - #8 ,
INFO  02:35:36,660 - #15 2
INFO  02:35:36,660 - #7 )
INFO  02:35:36,660 - #7 )
INFO  02:35:36,660 - #5 ;
INFO  02:35:36,660 - #16 t2
INFO  02:35:36,660 - #13 =
INFO  02:35:36,660 - #36 new
INFO  02:35:36,660 - #16 Test
INFO  02:35:36,660 - #5 ;
INFO  02:35:36,660 - #16 t2
INFO  02:35:36,660 - #43 .
INFO  02:35:36,661 - #16 a
INFO  02:35:36,661 - #13 =
INFO  02:35:36,661 - #15 3
INFO  02:35:36,661 - #5 ;
INFO  02:35:36,661 - #16 t2
INFO  02:35:36,661 - #43 .
INFO  02:35:36,661 - #16 niz
INFO  02:35:36,661 - #13 =
INFO  02:35:36,661 - #36 new
INFO  02:35:36,661 - #16 int
INFO  02:35:36,661 - #50 [
INFO  02:35:36,661 - #15 3
INFO  02:35:36,661 - #51 ]
INFO  02:35:36,661 - #5 ;
INFO  02:35:36,661 - #16 i
INFO  02:35:36,661 - #13 =
INFO  02:35:36,661 - #15 0
INFO  02:35:36,661 - #5 ;
INFO  02:35:36,661 - #34 do
INFO  02:35:36,661 - #3 {
INFO  02:35:36,661 - #16 t2
INFO  02:35:36,661 - #43 .
INFO  02:35:36,661 - #16 niz
INFO  02:35:36,661 - #50 [
INFO  02:35:36,662 - #16 i
INFO  02:35:36,662 - #51 ]
INFO  02:35:36,662 - #13 =
INFO  02:35:36,662 - #16 t1
INFO  02:35:36,662 - #43 .
INFO  02:35:36,662 - #16 niz
INFO  02:35:36,662 - #50 [
INFO  02:35:36,662 - #16 i
INFO  02:35:36,662 - #51 ]
INFO  02:35:36,662 - #28 *
INFO  02:35:36,662 - #15 2
INFO  02:35:36,662 - #28 *
INFO  02:35:36,662 - #16 t2
INFO  02:35:36,662 - #43 .
INFO  02:35:36,662 - #16 a
INFO  02:35:36,662 - #5 ;
INFO  02:35:36,662 - #16 i
INFO  02:35:36,662 - #46 ++
INFO  02:35:36,662 - #5 ;
INFO  02:35:36,662 - #4 }
INFO  02:35:36,662 - #35 while
INFO  02:35:36,662 - #6 (
INFO  02:35:36,662 - #16 i
INFO  02:35:36,662 - #26 <
INFO  02:35:36,662 - #15 3
INFO  02:35:36,662 - #7 )
INFO  02:35:36,662 - #5 ;
INFO  02:35:36,662 - #9 print
INFO  02:35:36,662 - #6 (
INFO  02:35:36,662 - #16 t2
INFO  02:35:36,662 - #43 .
INFO  02:35:36,662 - #16 niz
INFO  02:35:36,662 - #50 [
INFO  02:35:36,662 - #15 0
INFO  02:35:36,662 - #51 ]
INFO  02:35:36,662 - #7 )
INFO  02:35:36,662 - #5 ;
INFO  02:35:36,662 - #9 print
INFO  02:35:36,662 - #6 (
INFO  02:35:36,662 - #16 t2
INFO  02:35:36,662 - #43 .
INFO  02:35:36,662 - #16 niz
INFO  02:35:36,662 - #50 [
INFO  02:35:36,662 - #15 1
INFO  02:35:36,662 - #51 ]
INFO  02:35:36,662 - #7 )
INFO  02:35:36,662 - #5 ;
INFO  02:35:36,662 - #9 print
INFO  02:35:36,662 - #6 (
INFO  02:35:36,663 - #16 t2
INFO  02:35:36,663 - #43 .
INFO  02:35:36,663 - #16 niz
INFO  02:35:36,663 - #50 [
INFO  02:35:36,663 - #15 2
INFO  02:35:36,663 - #51 ]
INFO  02:35:36,663 - #7 )
INFO  02:35:36,663 - #5 ;
INFO  02:35:36,663 - #9 print
INFO  02:35:36,663 - #6 (
INFO  02:35:36,663 - #16 eol
INFO  02:35:36,663 - #7 )
INFO  02:35:36,663 - #5 ;
INFO  02:35:36,663 - #16 i
INFO  02:35:36,663 - #13 =
INFO  02:35:36,663 - #15 0
INFO  02:35:36,663 - #5 ;
INFO  02:35:36,663 - #16 niz2
INFO  02:35:36,663 - #13 =
INFO  02:35:36,663 - #15 0
INFO  02:35:36,663 - #5 ;
INFO  02:35:36,663 - #34 do
INFO  02:35:36,663 - #3 {
INFO  02:35:36,663 - #16 niz2
INFO  02:35:36,663 - #13 =
INFO  02:35:36,663 - #16 niz2
INFO  02:35:36,663 - #11 +
INFO  02:35:36,663 - #16 t1
INFO  02:35:36,663 - #43 .
INFO  02:35:36,663 - #16 niz
INFO  02:35:36,663 - #50 [
INFO  02:35:36,663 - #16 i
INFO  02:35:36,663 - #51 ]
INFO  02:35:36,663 - #11 +
INFO  02:35:36,663 - #16 t2
INFO  02:35:36,663 - #43 .
INFO  02:35:36,663 - #16 niz
INFO  02:35:36,663 - #50 [
INFO  02:35:36,663 - #16 i
INFO  02:35:36,663 - #51 ]
INFO  02:35:36,663 - #5 ;
INFO  02:35:36,663 - #16 i
INFO  02:35:36,663 - #46 ++
INFO  02:35:36,663 - #5 ;
INFO  02:35:36,663 - #4 }
INFO  02:35:36,663 - #35 while
INFO  02:35:36,663 - #6 (
INFO  02:35:36,663 - #16 i
INFO  02:35:36,663 - #26 <
INFO  02:35:36,663 - #15 3
INFO  02:35:36,663 - #7 )
INFO  02:35:36,663 - #5 ;
INFO  02:35:36,663 - #9 print
INFO  02:35:36,663 - #6 (
INFO  02:35:36,663 - #16 niz2
INFO  02:35:36,663 - #7 )
INFO  02:35:36,663 - #5 ;
INFO  02:35:36,663 - #9 print
INFO  02:35:36,663 - #6 (
INFO  02:35:36,663 - #16 eol
INFO  02:35:36,663 - #7 )
INFO  02:35:36,664 - #5 ;
INFO  02:35:36,664 - #4 }
INFO  02:35:36,664 - #4 }
INFO  02:35:36,671 - Trenutan tip konstante je:  int na liniji 5
INFO  02:35:36,671 - Trenutan tip konstante je:  char na liniji 7
INFO  02:35:36,671 - Deklarisana promenljiva i na liniji 9
INFO  02:35:36,671 - Deklarisana promenljiva cc na liniji 11
INFO  02:35:36,671 - Deklarisana promenljiva ibool na liniji 14
INFO  02:35:36,671 - Deklarisana promenljiva niz2 na liniji 16
INFO  02:35:36,672 - Deklarisana je rekord :  Test na liniji 18
INFO  02:35:36,672 - Deklarisana promenljiva niz na liniji 19
INFO  02:35:36,672 - Deklarisana promenljiva a na liniji 20
INFO  02:35:36,672 - Deklarisana je rekord :  Test2 na liniji 23
INFO  02:35:36,672 - Deklarisana promenljiva niz23 na liniji 24
INFO  02:35:36,672 - Deklarisana promenljiva a2 na liniji 25
INFO  02:35:36,672 - Deklarisana promenljiva t2 na liniji 28
INFO  02:35:36,672 - Deklarisana promenljiva t1 na liniji 28
INFO  02:35:36,672 - Obradjuje se funkcija sum na liniji 32
INFO  02:35:36,672 - Naveden argument d na liniji 32
INFO  02:35:36,672 - TypeNAME: int
INFO  02:35:36,672 - Naveden argument z na liniji 32
INFO  02:35:36,672 - TypeNAME: int
INFO  02:35:36,673 - Obradjuje se funkcija inkrement na liniji 38
INFO  02:35:36,673 - Naveden argument inc na liniji 38
INFO  02:35:36,673 - TypeNAME: int
INFO  02:35:36,673 - Naveden argument a na liniji 38
INFO  02:35:36,673 - TypeNAME: int
INFO  02:35:36,673 - Deklarisana promenljiva pom na liniji 39
INFO  02:35:36,673 - Obradjuje se funkcija func na liniji 50
INFO  02:35:36,673 - Naveden argument d na liniji 50
INFO  02:35:36,673 - TypeNAME: int
INFO  02:35:36,673 - Naveden argument c na liniji 50
INFO  02:35:36,673 - TypeNAME: int
INFO  02:35:36,673 - Naveden argument b na liniji 50
INFO  02:35:36,673 - TypeNAME: int
INFO  02:35:36,673 - Naveden argument a na liniji 50
INFO  02:35:36,673 - TypeNAME: int
INFO  02:35:36,673 - Obradjuje se funkcija verify na liniji 59
INFO  02:35:36,673 - Pronadjen poziv funkcije func na liniji 61
ERROR 02:35:36,673 - Semanticka greska na liniji 63 promenljiva: i mora biti tipa bool!
INFO  02:35:36,673 - DESAVA SE POZIV FUNCKIJE:sum na liniji 66
INFO  02:35:36,673 - Pronadjen poziv funkcije inkrement na liniji 66
INFO  02:35:36,673 - Pronadjen poziv funkcije inkrement na liniji 68
INFO  02:35:36,673 - Obradjuje se funkcija main na liniji 74
INFO  02:35:36,674 - Pronadjen poziv funkcije chr na liniji 119
INFO  02:35:36,674 - DESAVA SE POZIV FUNCKIJE:sum na liniji 121
ERROR 02:35:36,675 - Parsiranje NIJE uspesno zavrseno!
