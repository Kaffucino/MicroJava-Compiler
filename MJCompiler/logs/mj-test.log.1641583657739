INFO  20:26:22,378 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  20:26:22,410 - #2 program
INFO  20:26:22,410 - #16 Ime
INFO  20:26:22,410 - #48 const
INFO  20:26:22,410 - #16 tip
INFO  20:26:22,410 - #16 x
INFO  20:26:22,411 - #13 =
INFO  20:26:22,411 - #15 8
INFO  20:26:22,411 - #8 ,
INFO  20:26:22,411 - #16 y
INFO  20:26:22,411 - #13 =
INFO  20:26:22,411 - #17 'i'
INFO  20:26:22,411 - #8 ,
INFO  20:26:22,411 - #16 z
INFO  20:26:22,411 - #13 =
INFO  20:26:22,411 - #18 true
INFO  20:26:22,411 - #5 ;
INFO  20:26:22,412 - #16 int
INFO  20:26:22,412 - #16 x
INFO  20:26:22,413 - #50 [
INFO  20:26:22,413 - #51 ]
INFO  20:26:22,413 - #8 ,
INFO  20:26:22,413 - #16 y
INFO  20:26:22,413 - #8 ,
INFO  20:26:22,418 - #16 a
INFO  20:26:22,418 - #50 [
INFO  20:26:22,418 - #51 ]
INFO  20:26:22,418 - #8 ,
INFO  20:26:22,418 - #16 f
INFO  20:26:22,418 - #5 ;
INFO  20:26:22,419 - #32 class
INFO  20:26:22,419 - #16 Board
INFO  20:26:22,419 - #38 extends
INFO  20:26:22,419 - #16 Polje
INFO  20:26:22,419 - #3 {
INFO  20:26:22,419 - #16 int
INFO  20:26:22,419 - #16 a
INFO  20:26:22,419 - #5 ;
INFO  20:26:22,419 - #3 {
INFO  20:26:22,420 - #14 void
INFO  20:26:22,421 - #16 funckija
INFO  20:26:22,421 - #6 (
INFO  20:26:22,421 - #16 bool
INFO  20:26:22,421 - #16 a
INFO  20:26:22,421 - #7 )
INFO  20:26:22,422 - #16 int
INFO  20:26:22,422 - #16 y
INFO  20:26:22,422 - #5 ;
INFO  20:26:22,422 - #3 {
INFO  20:26:22,422 - #3 {
INFO  20:26:22,422 - #39 continue
INFO  20:26:22,422 - #5 ;
INFO  20:26:22,422 - #10 return
INFO  20:26:22,423 - #12 -
INFO  20:26:22,423 - #15 5
INFO  20:26:22,423 - #11 +
INFO  20:26:22,424 - #15 7
INFO  20:26:22,424 - #28 *
INFO  20:26:22,424 - #15 2
INFO  20:26:22,425 - #12 -
INFO  20:26:22,425 - #6 (
INFO  20:26:22,425 - #15 13
INFO  20:26:22,425 - #28 *
INFO  20:26:22,425 - #15 7
INFO  20:26:22,426 - #7 )
INFO  20:26:22,426 - #11 +
INFO  20:26:22,426 - #36 new
INFO  20:26:22,426 - #16 int
INFO  20:26:22,426 - #50 [
INFO  20:26:22,429 - #15 5
INFO  20:26:22,429 - #51 ]
INFO  20:26:22,429 - #5 ;
INFO  20:26:22,430 - #16 a
INFO  20:26:22,430 - #43 .
INFO  20:26:22,430 - #16 b
INFO  20:26:22,430 - #50 [
INFO  20:26:22,430 - #15 3
INFO  20:26:22,430 - #51 ]
INFO  20:26:22,430 - #43 .
INFO  20:26:22,430 - #16 c
INFO  20:26:22,430 - #6 (
INFO  20:26:22,431 - #15 5
INFO  20:26:22,431 - #8 ,
INFO  20:26:22,431 - #15 17
INFO  20:26:22,431 - #7 )
INFO  20:26:22,432 - #5 ;
INFO  20:26:22,432 - #34 do
INFO  20:26:22,432 - #3 {
INFO  20:26:22,432 - #10 return
INFO  20:26:22,432 - #5 ;
INFO  20:26:22,432 - #4 }
INFO  20:26:22,433 - #35 while
INFO  20:26:22,433 - #6 (
INFO  20:26:22,433 - #15 5
INFO  20:26:22,433 - #22 ==
INFO  20:26:22,433 - #15 7
INFO  20:26:22,434 - #45 ||
INFO  20:26:22,435 - #15 5
INFO  20:26:22,435 - #27 <=
INFO  20:26:22,435 - #15 3
INFO  20:26:22,436 - #44 &&
INFO  20:26:22,436 - #15 7
INFO  20:26:22,436 - #23 !=
INFO  20:26:22,436 - #15 2
INFO  20:26:22,436 - #7 )
INFO  20:26:22,437 - #5 ;
INFO  20:26:22,437 - #19 if
INFO  20:26:22,437 - #6 (
INFO  20:26:22,437 - #15 5
INFO  20:26:22,438 - #22 ==
INFO  20:26:22,438 - #15 6
INFO  20:26:22,438 - #7 )
INFO  20:26:22,438 - #3 {
INFO  20:26:22,438 - #16 x
INFO  20:26:22,438 - #13 =
INFO  20:26:22,438 - #15 3
INFO  20:26:22,438 - #5 ;
INFO  20:26:22,439 - #4 }
INFO  20:26:22,439 - #4 }
INFO  20:26:22,439 - #4 }
INFO  20:26:22,439 - #4 }
INFO  20:26:22,439 - #4 }
INFO  20:26:22,439 - #49 record
INFO  20:26:22,440 - #16 rekord
INFO  20:26:22,440 - #3 {
INFO  20:26:22,440 - #16 int
INFO  20:26:22,440 - #16 a
INFO  20:26:22,440 - #5 ;
INFO  20:26:22,440 - #16 char
INFO  20:26:22,440 - #16 b
INFO  20:26:22,440 - #5 ;
INFO  20:26:22,440 - #4 }
INFO  20:26:22,440 - #3 {
INFO  20:26:22,441 - #4 }
