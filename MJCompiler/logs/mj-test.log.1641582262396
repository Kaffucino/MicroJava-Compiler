INFO  20:01:30,580 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  20:01:30,627 - #2 program
INFO  20:01:30,627 - #16 p
INFO  20:01:30,627 - #48 const
INFO  20:01:30,627 - #16 int
INFO  20:01:30,627 - #16 size
INFO  20:01:30,628 - #13 =
INFO  20:01:30,628 - #15 10
INFO  20:01:30,628 - #5 ;
INFO  20:01:30,628 - #32 class
INFO  20:01:30,629 - #16 Table
INFO  20:01:30,629 - #3 {
INFO  20:01:30,629 - #16 int
INFO  20:01:30,629 - #16 pos
INFO  20:01:30,629 - #50 [
INFO  20:01:30,629 - #51 ]
INFO  20:01:30,629 - #8 ,
INFO  20:01:30,629 - #16 neg
INFO  20:01:30,629 - #50 [
INFO  20:01:30,630 - #51 ]
INFO  20:01:30,630 - #5 ;
INFO  20:01:30,630 - #3 {
INFO  20:01:30,631 - #14 void
INFO  20:01:30,636 - #16 putp
INFO  20:01:30,637 - #6 (
INFO  20:01:30,637 - #16 int
INFO  20:01:30,637 - #16 a
INFO  20:01:30,637 - #8 ,
INFO  20:01:30,637 - #16 int
INFO  20:01:30,637 - #16 idx
INFO  20:01:30,637 - #7 )
INFO  20:01:30,638 - #3 {
INFO  20:01:30,638 - #40 this
INFO  20:01:30,638 - #43 .
INFO  20:01:30,638 - #16 pos
INFO  20:01:30,638 - #50 [
INFO  20:01:30,638 - #16 idx
INFO  20:01:30,638 - #51 ]
INFO  20:01:30,639 - #13 =
INFO  20:01:30,640 - #16 a
INFO  20:01:30,640 - #5 ;
INFO  20:01:30,640 - #4 }
INFO  20:01:30,640 - #14 void
INFO  20:01:30,641 - #16 putn
INFO  20:01:30,641 - #6 (
INFO  20:01:30,641 - #16 int
INFO  20:01:30,641 - #16 a
INFO  20:01:30,641 - #8 ,
INFO  20:01:30,641 - #16 int
INFO  20:01:30,641 - #16 idx
INFO  20:01:30,641 - #7 )
INFO  20:01:30,641 - #3 {
INFO  20:01:30,641 - #40 this
INFO  20:01:30,641 - #43 .
INFO  20:01:30,641 - #16 neg
INFO  20:01:30,641 - #50 [
INFO  20:01:30,641 - #16 idx
INFO  20:01:30,641 - #51 ]
INFO  20:01:30,641 - #13 =
INFO  20:01:30,641 - #16 a
INFO  20:01:30,641 - #5 ;
INFO  20:01:30,641 - #4 }
INFO  20:01:30,641 - #16 int
INFO  20:01:30,642 - #16 getp
INFO  20:01:30,642 - #6 (
INFO  20:01:30,642 - #16 int
INFO  20:01:30,642 - #16 idx
INFO  20:01:30,642 - #7 )
INFO  20:01:30,642 - #3 {
INFO  20:01:30,642 - #10 return
INFO  20:01:30,642 - #16 pos
INFO  20:01:30,642 - #50 [
INFO  20:01:30,642 - #16 idx
INFO  20:01:30,642 - #51 ]
INFO  20:01:30,642 - #5 ;
INFO  20:01:30,642 - #4 }
INFO  20:01:30,642 - #16 int
INFO  20:01:30,642 - #16 getn
INFO  20:01:30,642 - #6 (
INFO  20:01:30,642 - #16 int
INFO  20:01:30,642 - #16 idx
INFO  20:01:30,642 - #7 )
INFO  20:01:30,642 - #3 {
INFO  20:01:30,642 - #10 return
INFO  20:01:30,642 - #16 neg
INFO  20:01:30,643 - #50 [
INFO  20:01:30,643 - #16 idx
INFO  20:01:30,643 - #51 ]
INFO  20:01:30,643 - #5 ;
INFO  20:01:30,643 - #4 }
INFO  20:01:30,643 - #4 }
INFO  20:01:30,644 - #4 }
INFO  20:01:30,644 - #49 record
INFO  20:01:30,644 - #16 Board
INFO  20:01:30,644 - #3 {
INFO  20:01:30,644 - #16 int
INFO  20:01:30,645 - #16 rows
INFO  20:01:30,645 - #8 ,
INFO  20:01:30,645 - #16 columns
INFO  20:01:30,645 - #5 ;
INFO  20:01:30,645 - #4 }
INFO  20:01:30,646 - #16 Table
INFO  20:01:30,646 - #16 val
INFO  20:01:30,646 - #5 ;
INFO  20:01:30,646 - #16 Board
INFO  20:01:30,646 - #16 board
INFO  20:01:30,646 - #5 ;
INFO  20:01:30,646 - #3 {
INFO  20:01:30,646 - #14 void
INFO  20:01:30,646 - #16 f
INFO  20:01:30,646 - #6 (
INFO  20:01:30,646 - #16 char
INFO  20:01:30,646 - #16 ch
INFO  20:01:30,647 - #8 ,
INFO  20:01:30,647 - #16 int
INFO  20:01:30,647 - #16 a
INFO  20:01:30,647 - #8 ,
INFO  20:01:30,647 - #16 int
INFO  20:01:30,647 - #16 arg
INFO  20:01:30,647 - #7 )
INFO  20:01:30,647 - #16 int
INFO  20:01:30,647 - #16 x
INFO  20:01:30,647 - #5 ;
INFO  20:01:30,647 - #3 {
INFO  20:01:30,647 - #16 x
INFO  20:01:30,647 - #13 =
INFO  20:01:30,647 - #16 arg
INFO  20:01:30,647 - #5 ;
INFO  20:01:30,647 - #4 }
INFO  20:01:30,647 - #14 void
INFO  20:01:30,647 - #16 main
INFO  20:01:30,647 - #6 (
INFO  20:01:30,647 - #7 )
INFO  20:01:30,649 - #16 int
INFO  20:01:30,649 - #16 x
INFO  20:01:30,649 - #8 ,
INFO  20:01:30,649 - #16 i
INFO  20:01:30,649 - #5 ;
INFO  20:01:30,650 - #16 char
INFO  20:01:30,650 - #16 c
INFO  20:01:30,650 - #5 ;
INFO  20:01:30,650 - #3 {
INFO  20:01:30,650 - #16 val
INFO  20:01:30,650 - #13 =
INFO  20:01:30,650 - #36 new
INFO  20:01:30,650 - #16 Table
INFO  20:01:30,650 - #5 ;
INFO  20:01:30,650 - #16 val
INFO  20:01:30,650 - #43 .
INFO  20:01:30,650 - #16 pos
INFO  20:01:30,650 - #13 =
INFO  20:01:30,650 - #36 new
INFO  20:01:30,650 - #16 int
INFO  20:01:30,650 - #50 [
INFO  20:01:30,650 - #16 size
INFO  20:01:30,650 - #51 ]
INFO  20:01:30,650 - #5 ;
INFO  20:01:30,650 - #16 val
INFO  20:01:30,650 - #43 .
INFO  20:01:30,650 - #16 neg
INFO  20:01:30,650 - #13 =
INFO  20:01:30,650 - #36 new
INFO  20:01:30,650 - #16 int
INFO  20:01:30,651 - #50 [
INFO  20:01:30,651 - #16 size
INFO  20:01:30,651 - #51 ]
INFO  20:01:30,651 - #5 ;
INFO  20:01:30,651 - #37 read
INFO  20:01:30,651 - #6 (
INFO  20:01:30,651 - #16 x
INFO  20:01:30,651 - #7 )
INFO  20:01:30,651 - #5 ;
INFO  20:01:30,651 - #19 if
INFO  20:01:30,651 - #6 (
INFO  20:01:30,651 - #16 x
INFO  20:01:30,651 - #24 >
INFO  20:01:30,651 - #15 5
INFO  20:01:30,652 - #7 )
INFO  20:01:30,653 - #3 {
INFO  20:01:30,653 - #42 goto
INFO  20:01:30,653 - #16 skip
INFO  20:01:30,653 - #5 ;
INFO  20:01:30,653 - #4 }
INFO  20:01:30,653 - #16 i
INFO  20:01:30,654 - #13 =
INFO  20:01:30,654 - #15 0
INFO  20:01:30,654 - #5 ;
INFO  20:01:30,654 - #34 do
INFO  20:01:30,654 - #3 {
INFO  20:01:30,654 - #16 val
INFO  20:01:30,654 - #43 .
INFO  20:01:30,654 - #16 putp
INFO  20:01:30,654 - #6 (
INFO  20:01:30,654 - #15 0
INFO  20:01:30,654 - #8 ,
INFO  20:01:30,654 - #16 i
INFO  20:01:30,654 - #7 )
INFO  20:01:30,655 - #5 ;
INFO  20:01:30,655 - #16 val
INFO  20:01:30,655 - #43 .
INFO  20:01:30,655 - #16 putn
INFO  20:01:30,655 - #6 (
INFO  20:01:30,655 - #15 0
INFO  20:01:30,655 - #8 ,
INFO  20:01:30,655 - #16 i
INFO  20:01:30,655 - #7 )
INFO  20:01:30,655 - #5 ;
INFO  20:01:30,655 - #16 i
INFO  20:01:30,655 - #46 ++
INFO  20:01:30,655 - #5 ;
INFO  20:01:30,655 - #4 }
INFO  20:01:30,655 - #35 while
INFO  20:01:30,655 - #6 (
INFO  20:01:30,655 - #16 i
INFO  20:01:30,655 - #26 <
INFO  20:01:30,655 - #16 size
INFO  20:01:30,656 - #7 )
INFO  20:01:30,656 - #5 ;
INFO  20:01:30,656 - #16 skip
INFO  20:01:30,656 - #21 :
INFO  20:01:30,656 - #16 f
INFO  20:01:30,656 - #6 (
INFO  20:01:30,656 - #16 c
INFO  20:01:30,656 - #8 ,
INFO  20:01:30,656 - #16 x
INFO  20:01:30,656 - #8 ,
ERROR 20:01:30,656 - 
Sintaksna greska na liniji 39
INFO  20:01:30,656 - #16 i
INFO  20:01:30,656 - #7 )
INFO  20:01:30,656 - #5 ;
INFO  20:01:30,656 - #16 board
INFO  20:01:30,657 - #13 =
INFO  20:01:30,657 - #36 new
ERROR 20:01:30,657 - Izvrsen oporavak do ; u liniji 39
INFO  20:01:30,657 - #16 Board
INFO  20:01:30,657 - #5 ;
INFO  20:01:30,657 - #37 read
INFO  20:01:30,657 - #6 (
INFO  20:01:30,657 - #16 board
INFO  20:01:30,657 - #43 .
INFO  20:01:30,657 - #16 rows
INFO  20:01:30,657 - #7 )
INFO  20:01:30,657 - #5 ;
INFO  20:01:30,657 - #16 x
INFO  20:01:30,657 - #13 =
INFO  20:01:30,657 - #16 board
INFO  20:01:30,657 - #43 .
INFO  20:01:30,657 - #16 rows
INFO  20:01:30,657 - #5 ;
INFO  20:01:30,657 - #34 do
INFO  20:01:30,657 - #3 {
INFO  20:01:30,657 - #19 if
INFO  20:01:30,657 - #6 (
INFO  20:01:30,657 - #16 x
INFO  20:01:30,657 - #27 <=
INFO  20:01:30,657 - #15 0
INFO  20:01:30,658 - #7 )
INFO  20:01:30,658 - #31 break
INFO  20:01:30,658 - #5 ;
INFO  20:01:30,658 - #19 if
INFO  20:01:30,659 - #6 (
INFO  20:01:30,659 - #15 0
INFO  20:01:30,659 - #27 <=
INFO  20:01:30,659 - #16 x
INFO  20:01:30,659 - #44 &&
INFO  20:01:30,659 - #16 x
INFO  20:01:30,659 - #26 <
INFO  20:01:30,659 - #16 size
INFO  20:01:30,659 - #7 )
INFO  20:01:30,659 - #3 {
INFO  20:01:30,659 - #16 val
INFO  20:01:30,659 - #43 .
INFO  20:01:30,659 - #16 putp
INFO  20:01:30,659 - #6 (
INFO  20:01:30,659 - #16 val
INFO  20:01:30,659 - #43 .
INFO  20:01:30,659 - #16 getp
INFO  20:01:30,659 - #6 (
INFO  20:01:30,659 - #16 x
INFO  20:01:30,659 - #7 )
INFO  20:01:30,660 - #11 +
INFO  20:01:30,660 - #15 1
INFO  20:01:30,660 - #7 )
INFO  20:01:30,661 - #5 ;
INFO  20:01:30,661 - #4 }
INFO  20:01:30,661 - #20 else
INFO  20:01:30,661 - #19 if
INFO  20:01:30,661 - #6 (
INFO  20:01:30,661 - #16 size
INFO  20:01:30,661 - #26 <
INFO  20:01:30,661 - #16 x
INFO  20:01:30,661 - #44 &&
INFO  20:01:30,661 - #16 x
INFO  20:01:30,661 - #26 <
INFO  20:01:30,661 - #15 0
INFO  20:01:30,661 - #7 )
INFO  20:01:30,661 - #3 {
INFO  20:01:30,661 - #16 val
INFO  20:01:30,661 - #43 .
INFO  20:01:30,661 - #16 putn
INFO  20:01:30,661 - #6 (
INFO  20:01:30,661 - #16 val
INFO  20:01:30,662 - #43 .
INFO  20:01:30,662 - #16 getn
INFO  20:01:30,662 - #6 (
INFO  20:01:30,662 - #16 x
INFO  20:01:30,662 - #7 )
INFO  20:01:30,662 - #11 +
INFO  20:01:30,662 - #15 1
INFO  20:01:30,662 - #7 )
INFO  20:01:30,662 - #5 ;
INFO  20:01:30,662 - #4 }
INFO  20:01:30,662 - #37 read
INFO  20:01:30,663 - #6 (
INFO  20:01:30,663 - #16 x
INFO  20:01:30,663 - #7 )
INFO  20:01:30,663 - #5 ;
INFO  20:01:30,663 - #4 }
INFO  20:01:30,663 - #35 while
INFO  20:01:30,663 - #6 (
INFO  20:01:30,663 - #18 true
INFO  20:01:30,663 - #7 )
INFO  20:01:30,663 - #5 ;
INFO  20:01:30,663 - #4 }
INFO  20:01:30,663 - #4 }
