INFO  00:01:02,902 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  00:01:02,931 - #2 program
INFO  00:01:02,931 - #16 test302
INFO  00:01:02,931 - #48 const
INFO  00:01:02,931 - #16 int
INFO  00:01:02,932 - #16 jedan
INFO  00:01:02,932 - #13 =
INFO  00:01:02,932 - #15 1
INFO  00:01:02,932 - #5 ;
INFO  00:01:02,932 - #16 int
INFO  00:01:02,933 - #16 i
INFO  00:01:02,933 - #5 ;
INFO  00:01:02,933 - #16 bool
INFO  00:01:02,934 - #16 ibool
INFO  00:01:02,934 - #5 ;
INFO  00:01:02,934 - #16 int
INFO  00:01:02,934 - #16 niz2
INFO  00:01:02,934 - #5 ;
INFO  00:01:02,934 - #49 record
INFO  00:01:02,934 - #16 Test
INFO  00:01:02,934 - #3 {
INFO  00:01:02,934 - #16 int
INFO  00:01:02,934 - #16 niz
INFO  00:01:02,935 - #50 [
INFO  00:01:02,935 - #51 ]
INFO  00:01:02,935 - #5 ;
INFO  00:01:02,935 - #16 int
INFO  00:01:02,935 - #16 a
INFO  00:01:02,935 - #5 ;
INFO  00:01:02,935 - #4 }
INFO  00:01:02,935 - #49 record
INFO  00:01:02,936 - #16 Test2
INFO  00:01:02,936 - #3 {
INFO  00:01:02,936 - #16 int
INFO  00:01:02,936 - #16 niz23
INFO  00:01:02,936 - #50 [
INFO  00:01:02,936 - #51 ]
INFO  00:01:02,936 - #5 ;
INFO  00:01:02,936 - #16 int
INFO  00:01:02,936 - #16 a2
INFO  00:01:02,936 - #5 ;
INFO  00:01:02,936 - #4 }
INFO  00:01:02,936 - #16 Test
INFO  00:01:02,936 - #16 t1
INFO  00:01:02,936 - #8 ,
INFO  00:01:02,936 - #16 t2
INFO  00:01:02,936 - #5 ;
INFO  00:01:02,937 - #3 {
INFO  00:01:02,937 - #16 int
INFO  00:01:02,937 - #16 sum
INFO  00:01:02,937 - #6 (
INFO  00:01:02,938 - #16 int
INFO  00:01:02,938 - #16 z
INFO  00:01:02,938 - #8 ,
INFO  00:01:02,938 - #16 int
INFO  00:01:02,938 - #16 d
INFO  00:01:02,938 - #7 )
INFO  00:01:02,939 - #3 {
INFO  00:01:02,939 - #10 return
INFO  00:01:02,939 - #16 z
INFO  00:01:02,939 - #11 +
INFO  00:01:02,940 - #16 d
INFO  00:01:02,941 - #5 ;
INFO  00:01:02,941 - #4 }
INFO  00:01:02,942 - #16 int
INFO  00:01:02,942 - #16 inkrement
INFO  00:01:02,942 - #6 (
INFO  00:01:02,942 - #16 int
INFO  00:01:02,942 - #16 a
INFO  00:01:02,945 - #8 ,
INFO  00:01:02,945 - #16 int
INFO  00:01:02,945 - #16 inc
INFO  00:01:02,945 - #7 )
INFO  00:01:02,945 - #16 int
INFO  00:01:02,945 - #16 pom
INFO  00:01:02,945 - #5 ;
INFO  00:01:02,945 - #3 {
INFO  00:01:02,945 - #16 sum
INFO  00:01:02,945 - #6 (
INFO  00:01:02,945 - #15 1
INFO  00:01:02,945 - #8 ,
INFO  00:01:02,945 - #15 2
INFO  00:01:02,945 - #7 )
INFO  00:01:02,946 - #5 ;
INFO  00:01:02,946 - #19 if
INFO  00:01:02,946 - #6 (
INFO  00:01:02,946 - #16 inc
INFO  00:01:02,946 - #22 ==
INFO  00:01:02,947 - #16 jedan
INFO  00:01:02,947 - #7 )
INFO  00:01:02,948 - #16 pom
INFO  00:01:02,948 - #13 =
INFO  00:01:02,948 - #15 1
INFO  00:01:02,949 - #5 ;
INFO  00:01:02,949 - #20 else
INFO  00:01:02,949 - #19 if
INFO  00:01:02,949 - #6 (
INFO  00:01:02,949 - #16 inc
INFO  00:01:02,949 - #22 ==
INFO  00:01:02,949 - #15 2
INFO  00:01:02,949 - #7 )
INFO  00:01:02,949 - #16 pom
INFO  00:01:02,949 - #13 =
INFO  00:01:02,949 - #16 a
INFO  00:01:02,949 - #5 ;
INFO  00:01:02,949 - #10 return
INFO  00:01:02,950 - #16 sum
INFO  00:01:02,950 - #6 (
INFO  00:01:02,950 - #16 a
INFO  00:01:02,950 - #8 ,
INFO  00:01:02,950 - #16 pom
INFO  00:01:02,950 - #7 )
INFO  00:01:02,950 - #5 ;
INFO  00:01:02,950 - #4 }
INFO  00:01:02,950 - #16 bool
INFO  00:01:02,950 - #16 verify
INFO  00:01:02,950 - #6 (
INFO  00:01:02,950 - #7 )
INFO  00:01:02,951 - #3 {
INFO  00:01:02,951 - #9 print
INFO  00:01:02,951 - #6 (
INFO  00:01:02,951 - #17 'v'
INFO  00:01:02,951 - #7 )
INFO  00:01:02,951 - #5 ;
INFO  00:01:02,951 - #10 return
INFO  00:01:02,951 - #18 false
INFO  00:01:02,951 - #5 ;
INFO  00:01:02,951 - #4 }
INFO  00:01:02,951 - #14 void
INFO  00:01:02,951 - #16 main
INFO  00:01:02,952 - #6 (
INFO  00:01:02,952 - #7 )
INFO  00:01:02,952 - #3 {
INFO  00:01:02,952 - #19 if
INFO  00:01:02,952 - #6 (
INFO  00:01:02,952 - #15 1
INFO  00:01:02,952 - #23 !=
INFO  00:01:02,952 - #15 1
INFO  00:01:02,952 - #7 )
INFO  00:01:02,952 - #9 print
INFO  00:01:02,953 - #6 (
INFO  00:01:02,953 - #12 -
INFO  00:01:02,953 - #15 6
INFO  00:01:02,953 - #7 )
INFO  00:01:02,953 - #5 ;
INFO  00:01:02,953 - #20 else
INFO  00:01:02,953 - #9 print
INFO  00:01:02,953 - #6 (
INFO  00:01:02,953 - #15 0
INFO  00:01:02,953 - #7 )
INFO  00:01:02,953 - #5 ;
INFO  00:01:02,953 - #16 ibool
INFO  00:01:02,953 - #13 =
INFO  00:01:02,953 - #18 false
INFO  00:01:02,953 - #5 ;
INFO  00:01:02,953 - #16 i
INFO  00:01:02,953 - #13 =
INFO  00:01:02,953 - #15 0
INFO  00:01:02,953 - #5 ;
INFO  00:01:02,953 - #34 do
INFO  00:01:02,953 - #3 {
INFO  00:01:02,954 - #19 if
INFO  00:01:02,954 - #6 (
INFO  00:01:02,954 - #16 i
INFO  00:01:02,954 - #22 ==
INFO  00:01:02,954 - #15 2
INFO  00:01:02,954 - #7 )
INFO  00:01:02,954 - #16 ibool
INFO  00:01:02,954 - #13 =
INFO  00:01:02,954 - #18 true
INFO  00:01:02,954 - #5 ;
INFO  00:01:02,954 - #16 i
INFO  00:01:02,954 - #46 ++
INFO  00:01:02,954 - #5 ;
INFO  00:01:02,954 - #4 }
INFO  00:01:02,954 - #35 while
INFO  00:01:02,955 - #6 (
INFO  00:01:02,955 - #16 i
INFO  00:01:02,955 - #26 <
INFO  00:01:02,955 - #15 5
INFO  00:01:02,955 - #7 )
INFO  00:01:02,955 - #5 ;
INFO  00:01:02,955 - #19 if
INFO  00:01:02,956 - #6 (
INFO  00:01:02,956 - #16 ibool
INFO  00:01:02,956 - #7 )
INFO  00:01:02,956 - #19 if
INFO  00:01:02,956 - #6 (
INFO  00:01:02,956 - #16 i
INFO  00:01:02,956 - #22 ==
INFO  00:01:02,956 - #15 5
INFO  00:01:02,956 - #7 )
INFO  00:01:02,956 - #9 print
INFO  00:01:02,956 - #6 (
INFO  00:01:02,956 - #15 1
INFO  00:01:02,956 - #7 )
INFO  00:01:02,956 - #5 ;
INFO  00:01:02,956 - #20 else
INFO  00:01:02,956 - #9 print
INFO  00:01:02,956 - #6 (
INFO  00:01:02,956 - #12 -
INFO  00:01:02,956 - #15 1
INFO  00:01:02,956 - #7 )
INFO  00:01:02,956 - #5 ;
INFO  00:01:02,956 - #16 t1
INFO  00:01:02,956 - #13 =
INFO  00:01:02,956 - #36 new
INFO  00:01:02,956 - #16 Test
INFO  00:01:02,956 - #5 ;
INFO  00:01:02,957 - #16 t1
INFO  00:01:02,957 - #43 .
INFO  00:01:02,957 - #16 a
INFO  00:01:02,957 - #13 =
INFO  00:01:02,957 - #15 2
INFO  00:01:02,957 - #5 ;
INFO  00:01:02,957 - #16 t1
INFO  00:01:02,957 - #43 .
INFO  00:01:02,957 - #16 niz
INFO  00:01:02,957 - #13 =
INFO  00:01:02,957 - #36 new
INFO  00:01:02,957 - #16 int
INFO  00:01:02,958 - #50 [
INFO  00:01:02,958 - #15 3
INFO  00:01:02,958 - #51 ]
INFO  00:01:02,958 - #5 ;
INFO  00:01:02,958 - #16 t1
INFO  00:01:02,958 - #43 .
INFO  00:01:02,958 - #16 niz
INFO  00:01:02,958 - #50 [
INFO  00:01:02,958 - #15 0
INFO  00:01:02,958 - #51 ]
INFO  00:01:02,958 - #13 =
INFO  00:01:02,958 - #15 1
INFO  00:01:02,958 - #28 *
INFO  00:01:02,958 - #16 t1
INFO  00:01:02,959 - #43 .
INFO  00:01:02,959 - #16 a
INFO  00:01:02,959 - #5 ;
INFO  00:01:02,959 - #16 t1
INFO  00:01:02,959 - #43 .
INFO  00:01:02,959 - #16 niz
INFO  00:01:02,959 - #50 [
INFO  00:01:02,960 - #15 1
INFO  00:01:02,960 - #51 ]
INFO  00:01:02,960 - #13 =
INFO  00:01:02,960 - #15 2
INFO  00:01:02,960 - #28 *
INFO  00:01:02,960 - #16 t1
INFO  00:01:02,960 - #43 .
INFO  00:01:02,960 - #16 a
INFO  00:01:02,960 - #5 ;
INFO  00:01:02,960 - #16 t1
INFO  00:01:02,960 - #43 .
INFO  00:01:02,960 - #16 niz
INFO  00:01:02,960 - #50 [
INFO  00:01:02,960 - #15 2
INFO  00:01:02,960 - #51 ]
INFO  00:01:02,960 - #13 =
INFO  00:01:02,960 - #16 sum
INFO  00:01:02,960 - #6 (
INFO  00:01:02,960 - #16 t1
INFO  00:01:02,960 - #43 .
INFO  00:01:02,960 - #16 niz
INFO  00:01:02,960 - #50 [
INFO  00:01:02,960 - #15 1
INFO  00:01:02,960 - #51 ]
INFO  00:01:02,960 - #8 ,
INFO  00:01:02,961 - #16 t1
INFO  00:01:02,961 - #43 .
INFO  00:01:02,961 - #16 niz
INFO  00:01:02,961 - #50 [
INFO  00:01:02,961 - #15 0
INFO  00:01:02,961 - #51 ]
INFO  00:01:02,961 - #7 )
INFO  00:01:02,961 - #28 *
INFO  00:01:02,961 - #16 t1
INFO  00:01:02,961 - #43 .
INFO  00:01:02,961 - #16 a
INFO  00:01:02,961 - #11 +
INFO  00:01:02,961 - #15 1
INFO  00:01:02,961 - #5 ;
INFO  00:01:02,961 - #19 if
INFO  00:01:02,961 - #6 (
INFO  00:01:02,961 - #16 verify
INFO  00:01:02,961 - #6 (
INFO  00:01:02,961 - #7 )
INFO  00:01:02,961 - #7 )
INFO  00:01:02,961 - #9 print
INFO  00:01:02,962 - #6 (
INFO  00:01:02,962 - #16 ord
INFO  00:01:02,962 - #6 (
INFO  00:01:02,962 - #17 'A'
INFO  00:01:02,962 - #7 )
INFO  00:01:02,962 - #7 )
INFO  00:01:02,962 - #5 ;
INFO  00:01:02,962 - #20 else
INFO  00:01:02,962 - #9 print
INFO  00:01:02,962 - #6 (
INFO  00:01:02,962 - #16 ord
INFO  00:01:02,962 - #6 (
INFO  00:01:02,962 - #17 'a'
INFO  00:01:02,962 - #7 )
INFO  00:01:02,962 - #7 )
INFO  00:01:02,962 - #5 ;
INFO  00:01:02,962 - #9 print
INFO  00:01:02,962 - #6 (
INFO  00:01:02,962 - #16 eol
INFO  00:01:02,962 - #7 )
INFO  00:01:02,962 - #5 ;
INFO  00:01:02,962 - #16 i
INFO  00:01:02,962 - #13 =
INFO  00:01:02,962 - #15 0
INFO  00:01:02,962 - #5 ;
INFO  00:01:02,962 - #34 do
INFO  00:01:02,962 - #3 {
INFO  00:01:02,962 - #19 if
INFO  00:01:02,962 - #6 (
INFO  00:01:02,962 - #16 i
INFO  00:01:02,962 - #22 ==
INFO  00:01:02,962 - #15 3
INFO  00:01:02,962 - #7 )
INFO  00:01:02,962 - #3 {
INFO  00:01:02,962 - #16 i
INFO  00:01:02,962 - #46 ++
INFO  00:01:02,962 - #5 ;
INFO  00:01:02,962 - #39 continue
INFO  00:01:02,962 - #5 ;
INFO  00:01:02,962 - #4 }
INFO  00:01:02,963 - #19 if
INFO  00:01:02,963 - #6 (
INFO  00:01:02,963 - #16 i
INFO  00:01:02,963 - #22 ==
INFO  00:01:02,963 - #15 4
INFO  00:01:02,963 - #7 )
INFO  00:01:02,963 - #31 break
INFO  00:01:02,963 - #5 ;
INFO  00:01:02,963 - #16 i
INFO  00:01:02,963 - #13 =
INFO  00:01:02,963 - #16 inkrement
INFO  00:01:02,963 - #6 (
INFO  00:01:02,963 - #16 i
INFO  00:01:02,963 - #8 ,
INFO  00:01:02,963 - #15 1
INFO  00:01:02,963 - #7 )
INFO  00:01:02,963 - #5 ;
INFO  00:01:02,963 - #4 }
INFO  00:01:02,964 - #35 while
INFO  00:01:02,964 - #6 (
INFO  00:01:02,964 - #16 i
INFO  00:01:02,964 - #26 <
INFO  00:01:02,964 - #15 10
INFO  00:01:02,964 - #7 )
INFO  00:01:02,964 - #5 ;
INFO  00:01:02,964 - #19 if
INFO  00:01:02,964 - #6 (
INFO  00:01:02,964 - #16 i
INFO  00:01:02,964 - #22 ==
INFO  00:01:02,964 - #15 3
INFO  00:01:02,964 - #44 &&
INFO  00:01:02,964 - #16 verify
INFO  00:01:02,964 - #6 (
INFO  00:01:02,964 - #7 )
INFO  00:01:02,964 - #7 )
INFO  00:01:02,964 - #9 print
INFO  00:01:02,964 - #6 (
INFO  00:01:02,964 - #12 -
INFO  00:01:02,964 - #15 4
INFO  00:01:02,964 - #7 )
INFO  00:01:02,964 - #5 ;
INFO  00:01:02,964 - #20 else
INFO  00:01:02,964 - #9 print
INFO  00:01:02,964 - #6 (
INFO  00:01:02,964 - #15 4
INFO  00:01:02,964 - #7 )
INFO  00:01:02,964 - #5 ;
INFO  00:01:02,964 - #37 read
INFO  00:01:02,964 - #6 (
INFO  00:01:02,964 - #16 t1
INFO  00:01:02,964 - #43 .
INFO  00:01:02,964 - #16 niz
INFO  00:01:02,964 - #50 [
INFO  00:01:02,964 - #15 0
INFO  00:01:02,964 - #51 ]
INFO  00:01:02,964 - #7 )
INFO  00:01:02,965 - #5 ;
INFO  00:01:02,965 - #37 read
INFO  00:01:02,965 - #6 (
INFO  00:01:02,965 - #16 t1
INFO  00:01:02,965 - #43 .
INFO  00:01:02,965 - #16 niz
INFO  00:01:02,965 - #50 [
INFO  00:01:02,965 - #15 1
INFO  00:01:02,965 - #51 ]
INFO  00:01:02,965 - #7 )
INFO  00:01:02,965 - #5 ;
INFO  00:01:02,965 - #37 read
INFO  00:01:02,965 - #6 (
INFO  00:01:02,965 - #16 t1
INFO  00:01:02,965 - #43 .
INFO  00:01:02,965 - #16 niz
INFO  00:01:02,965 - #50 [
INFO  00:01:02,965 - #15 2
INFO  00:01:02,965 - #51 ]
INFO  00:01:02,965 - #7 )
INFO  00:01:02,965 - #5 ;
INFO  00:01:02,965 - #9 print
INFO  00:01:02,965 - #6 (
INFO  00:01:02,965 - #16 eol
INFO  00:01:02,965 - #7 )
INFO  00:01:02,965 - #5 ;
INFO  00:01:02,965 - #16 chr
INFO  00:01:02,965 - #6 (
INFO  00:01:02,965 - #15 3
INFO  00:01:02,965 - #7 )
INFO  00:01:02,965 - #5 ;
INFO  00:01:02,965 - #9 print
INFO  00:01:02,965 - #6 (
INFO  00:01:02,965 - #16 sum
INFO  00:01:02,965 - #6 (
INFO  00:01:02,965 - #16 sum
INFO  00:01:02,965 - #6 (
INFO  00:01:02,965 - #16 t1
INFO  00:01:02,965 - #43 .
INFO  00:01:02,965 - #16 niz
INFO  00:01:02,965 - #50 [
INFO  00:01:02,965 - #15 0
INFO  00:01:02,966 - #51 ]
INFO  00:01:02,966 - #8 ,
INFO  00:01:02,966 - #16 t1
INFO  00:01:02,966 - #43 .
INFO  00:01:02,966 - #16 niz
INFO  00:01:02,966 - #50 [
INFO  00:01:02,966 - #15 1
INFO  00:01:02,966 - #51 ]
INFO  00:01:02,966 - #7 )
INFO  00:01:02,966 - #8 ,
INFO  00:01:02,966 - #16 t1
INFO  00:01:02,966 - #43 .
INFO  00:01:02,966 - #16 niz
INFO  00:01:02,966 - #50 [
INFO  00:01:02,966 - #15 2
INFO  00:01:02,966 - #51 ]
INFO  00:01:02,966 - #7 )
INFO  00:01:02,966 - #7 )
INFO  00:01:02,966 - #5 ;
INFO  00:01:02,966 - #9 print
INFO  00:01:02,966 - #6 (
INFO  00:01:02,966 - #16 eol
INFO  00:01:02,966 - #7 )
INFO  00:01:02,966 - #5 ;
INFO  00:01:02,966 - #9 print
INFO  00:01:02,966 - #6 (
INFO  00:01:02,966 - #16 inkrement
INFO  00:01:02,966 - #6 (
INFO  00:01:02,966 - #16 t1
INFO  00:01:02,966 - #43 .
INFO  00:01:02,966 - #16 niz
INFO  00:01:02,966 - #50 [
INFO  00:01:02,966 - #15 2
INFO  00:01:02,966 - #51 ]
INFO  00:01:02,966 - #8 ,
INFO  00:01:02,966 - #15 2
INFO  00:01:02,966 - #7 )
INFO  00:01:02,966 - #7 )
INFO  00:01:02,966 - #5 ;
INFO  00:01:02,966 - #16 t2
INFO  00:01:02,966 - #13 =
INFO  00:01:02,966 - #36 new
INFO  00:01:02,966 - #16 Test
INFO  00:01:02,966 - #5 ;
INFO  00:01:02,967 - #16 t2
INFO  00:01:02,967 - #43 .
INFO  00:01:02,967 - #16 a
INFO  00:01:02,967 - #13 =
INFO  00:01:02,967 - #15 3
INFO  00:01:02,967 - #5 ;
INFO  00:01:02,967 - #16 t2
INFO  00:01:02,967 - #43 .
INFO  00:01:02,967 - #16 niz
INFO  00:01:02,967 - #13 =
INFO  00:01:02,967 - #36 new
INFO  00:01:02,967 - #16 int
INFO  00:01:02,967 - #50 [
INFO  00:01:02,967 - #15 3
INFO  00:01:02,967 - #51 ]
INFO  00:01:02,967 - #5 ;
INFO  00:01:02,967 - #16 i
INFO  00:01:02,967 - #13 =
INFO  00:01:02,967 - #15 0
INFO  00:01:02,967 - #5 ;
INFO  00:01:02,967 - #34 do
INFO  00:01:02,967 - #3 {
INFO  00:01:02,967 - #16 t2
INFO  00:01:02,967 - #43 .
INFO  00:01:02,967 - #16 niz
INFO  00:01:02,967 - #50 [
INFO  00:01:02,967 - #16 i
INFO  00:01:02,968 - #51 ]
INFO  00:01:02,968 - #13 =
INFO  00:01:02,968 - #16 t1
INFO  00:01:02,968 - #43 .
INFO  00:01:02,968 - #16 niz
INFO  00:01:02,968 - #50 [
INFO  00:01:02,968 - #16 i
INFO  00:01:02,968 - #51 ]
INFO  00:01:02,968 - #28 *
INFO  00:01:02,968 - #15 2
INFO  00:01:02,968 - #28 *
INFO  00:01:02,968 - #16 t2
INFO  00:01:02,968 - #43 .
INFO  00:01:02,968 - #16 a
INFO  00:01:02,968 - #5 ;
INFO  00:01:02,969 - #16 i
INFO  00:01:02,969 - #46 ++
INFO  00:01:02,969 - #5 ;
INFO  00:01:02,969 - #4 }
INFO  00:01:02,969 - #35 while
INFO  00:01:02,969 - #6 (
INFO  00:01:02,969 - #16 i
INFO  00:01:02,969 - #26 <
INFO  00:01:02,969 - #15 3
INFO  00:01:02,969 - #7 )
INFO  00:01:02,969 - #5 ;
INFO  00:01:02,969 - #9 print
INFO  00:01:02,969 - #6 (
INFO  00:01:02,969 - #16 t2
INFO  00:01:02,969 - #43 .
INFO  00:01:02,970 - #16 niz
INFO  00:01:02,970 - #50 [
INFO  00:01:02,970 - #15 0
INFO  00:01:02,970 - #51 ]
INFO  00:01:02,970 - #7 )
INFO  00:01:02,970 - #5 ;
INFO  00:01:02,970 - #9 print
INFO  00:01:02,970 - #6 (
INFO  00:01:02,970 - #16 t2
INFO  00:01:02,970 - #43 .
INFO  00:01:02,970 - #16 niz
INFO  00:01:02,970 - #50 [
INFO  00:01:02,970 - #15 1
INFO  00:01:02,970 - #51 ]
INFO  00:01:02,970 - #7 )
INFO  00:01:02,970 - #5 ;
INFO  00:01:02,970 - #9 print
INFO  00:01:02,970 - #6 (
INFO  00:01:02,970 - #16 t2
INFO  00:01:02,970 - #43 .
INFO  00:01:02,970 - #16 niz
INFO  00:01:02,970 - #50 [
INFO  00:01:02,970 - #15 2
INFO  00:01:02,970 - #51 ]
INFO  00:01:02,970 - #7 )
INFO  00:01:02,970 - #5 ;
INFO  00:01:02,970 - #9 print
INFO  00:01:02,970 - #6 (
INFO  00:01:02,970 - #16 eol
INFO  00:01:02,970 - #7 )
INFO  00:01:02,970 - #5 ;
INFO  00:01:02,970 - #16 i
INFO  00:01:02,970 - #13 =
INFO  00:01:02,970 - #15 0
INFO  00:01:02,970 - #5 ;
INFO  00:01:02,970 - #16 niz2
INFO  00:01:02,970 - #13 =
INFO  00:01:02,970 - #15 0
INFO  00:01:02,970 - #5 ;
INFO  00:01:02,970 - #34 do
INFO  00:01:02,970 - #3 {
INFO  00:01:02,970 - #16 niz2
INFO  00:01:02,971 - #13 =
INFO  00:01:02,971 - #16 niz2
INFO  00:01:02,971 - #11 +
INFO  00:01:02,971 - #16 t1
INFO  00:01:02,971 - #43 .
INFO  00:01:02,971 - #16 niz
INFO  00:01:02,971 - #50 [
INFO  00:01:02,971 - #16 i
INFO  00:01:02,971 - #51 ]
INFO  00:01:02,971 - #11 +
INFO  00:01:02,971 - #16 t2
INFO  00:01:02,971 - #43 .
INFO  00:01:02,971 - #16 niz
INFO  00:01:02,971 - #50 [
INFO  00:01:02,971 - #16 i
INFO  00:01:02,971 - #51 ]
INFO  00:01:02,971 - #5 ;
INFO  00:01:02,971 - #16 i
INFO  00:01:02,971 - #46 ++
INFO  00:01:02,971 - #5 ;
INFO  00:01:02,971 - #4 }
INFO  00:01:02,971 - #35 while
INFO  00:01:02,971 - #6 (
INFO  00:01:02,971 - #16 i
INFO  00:01:02,971 - #26 <
INFO  00:01:02,971 - #15 3
INFO  00:01:02,971 - #7 )
INFO  00:01:02,971 - #5 ;
INFO  00:01:02,971 - #9 print
INFO  00:01:02,971 - #6 (
INFO  00:01:02,971 - #16 niz2
INFO  00:01:02,971 - #7 )
INFO  00:01:02,971 - #5 ;
INFO  00:01:02,971 - #9 print
INFO  00:01:02,971 - #6 (
INFO  00:01:02,971 - #16 eol
INFO  00:01:02,971 - #7 )
INFO  00:01:02,971 - #5 ;
INFO  00:01:02,971 - #4 }
INFO  00:01:02,971 - #4 }
INFO  00:01:02,978 - Trenutan tip konstante je:  int na liniji 5
INFO  00:01:02,978 - Deklarisana promenljiva i na liniji 7
INFO  00:01:02,978 - Deklarisana promenljiva ibool na liniji 10
INFO  00:01:02,978 - Deklarisana promenljiva niz2 na liniji 12
INFO  00:01:02,979 - Deklarisana promenljiva niz na liniji 15
INFO  00:01:02,979 - Deklarisana promenljiva a na liniji 16
INFO  00:01:02,979 - Deklarisana je rekord :  Test na liniji 14
INFO  00:01:02,979 - Deklarisana promenljiva niz23 na liniji 20
INFO  00:01:02,979 - Deklarisana promenljiva a2 na liniji 21
INFO  00:01:02,979 - Deklarisana je rekord :  Test2 na liniji 19
INFO  00:01:02,979 - Deklarisana promenljiva t2 na liniji 24
INFO  00:01:02,979 - Deklarisana promenljiva t1 na liniji 24
INFO  00:01:02,979 - Obradjuje se funkcija sum na liniji 28
INFO  00:01:02,979 - Naveden argument d na liniji 28
INFO  00:01:02,979 - Naveden argument z na liniji 28
INFO  00:01:02,979 - Obradjuje se funkcija inkrement na liniji 34
INFO  00:01:02,979 - Naveden argument inc na liniji 34
INFO  00:01:02,979 - Naveden argument a na liniji 34
INFO  00:01:02,979 - Deklarisana promenljiva pom na liniji 35
INFO  00:01:02,980 - Pronadjen poziv funkcije sum na liniji 37
INFO  00:01:02,980 - Obradjuje se funkcija verify na liniji 44
INFO  00:01:02,980 - Obradjuje se funkcija main na liniji 49
ERROR 00:01:02,980 - Semanticka greska na liniji 71 print prima samo num, char ili bool!
ERROR 00:01:02,980 - Semanticka greska na liniji 72 print prima samo num, char ili bool!
ERROR 00:01:02,980 - Semanticka greska na liniji 89  t1 mora biti int, char ili bool!
ERROR 00:01:02,980 - Semanticka greska na liniji 90  t1 mora biti int, char ili bool!
ERROR 00:01:02,980 - Semanticka greska na liniji 91  t1 mora biti int, char ili bool!
INFO  00:01:02,980 - Pronadjen poziv funkcije chr na liniji 94
ERROR 00:01:02,980 - Semanticka greska na liniji 96 print prima samo num, char ili bool!
ERROR 00:01:02,980 - Semanticka greska na liniji 99 print prima samo num, char ili bool!
ERROR 00:01:02,980 - Semanticka greska na liniji 109  t2 mora biti int, char ili bool!
ERROR 00:01:02,980 - Semanticka greska na liniji 110  t2 mora biti int, char ili bool!
ERROR 00:01:02,980 - Semanticka greska na liniji 111  t2 mora biti int, char ili bool!
ERROR 00:01:02,981 - Parsiranje NIJE uspesno zavrseno!
