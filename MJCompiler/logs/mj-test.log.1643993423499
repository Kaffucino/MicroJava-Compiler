INFO  16:39:46,056 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  16:39:46,091 - #2 program
INFO  16:39:46,091 - #16 test302
INFO  16:39:46,091 - #48 const
INFO  16:39:46,092 - #16 int
INFO  16:39:46,092 - #16 jedan
INFO  16:39:46,093 - #13 =
INFO  16:39:46,093 - #15 1
INFO  16:39:46,093 - #5 ;
INFO  16:39:46,094 - #16 int
INFO  16:39:46,094 - #16 i
INFO  16:39:46,094 - #5 ;
INFO  16:39:46,094 - #16 bool
INFO  16:39:46,095 - #16 ibool
INFO  16:39:46,095 - #5 ;
INFO  16:39:46,095 - #16 int
INFO  16:39:46,095 - #16 niz2
INFO  16:39:46,095 - #5 ;
INFO  16:39:46,095 - #49 record
INFO  16:39:46,095 - #16 Test
INFO  16:39:46,095 - #3 {
INFO  16:39:46,095 - #16 int
INFO  16:39:46,095 - #16 niz
INFO  16:39:46,096 - #50 [
INFO  16:39:46,096 - #51 ]
INFO  16:39:46,096 - #5 ;
INFO  16:39:46,096 - #16 int
INFO  16:39:46,096 - #16 a
INFO  16:39:46,096 - #5 ;
INFO  16:39:46,096 - #4 }
INFO  16:39:46,097 - #49 record
INFO  16:39:46,097 - #16 Test2
INFO  16:39:46,097 - #3 {
INFO  16:39:46,097 - #16 int
INFO  16:39:46,097 - #16 niz23
INFO  16:39:46,097 - #50 [
INFO  16:39:46,098 - #51 ]
INFO  16:39:46,098 - #5 ;
INFO  16:39:46,098 - #16 int
INFO  16:39:46,098 - #16 a2
INFO  16:39:46,098 - #5 ;
INFO  16:39:46,098 - #4 }
INFO  16:39:46,098 - #16 Test
INFO  16:39:46,098 - #16 t1
INFO  16:39:46,098 - #8 ,
INFO  16:39:46,098 - #16 t2
INFO  16:39:46,098 - #5 ;
INFO  16:39:46,098 - #3 {
INFO  16:39:46,099 - #16 int
INFO  16:39:46,099 - #16 sum
INFO  16:39:46,099 - #6 (
INFO  16:39:46,099 - #16 int
INFO  16:39:46,100 - #16 z
INFO  16:39:46,100 - #8 ,
INFO  16:39:46,100 - #16 int
INFO  16:39:46,100 - #16 d
INFO  16:39:46,100 - #7 )
INFO  16:39:46,101 - #3 {
INFO  16:39:46,101 - #10 return
INFO  16:39:46,102 - #16 z
INFO  16:39:46,102 - #11 +
INFO  16:39:46,103 - #16 d
INFO  16:39:46,103 - #5 ;
INFO  16:39:46,104 - #4 }
INFO  16:39:46,105 - #16 int
INFO  16:39:46,105 - #16 inkrement
INFO  16:39:46,105 - #6 (
INFO  16:39:46,105 - #16 int
INFO  16:39:46,105 - #16 a
INFO  16:39:46,108 - #8 ,
INFO  16:39:46,108 - #16 int
INFO  16:39:46,108 - #16 inc
INFO  16:39:46,108 - #7 )
INFO  16:39:46,108 - #16 int
INFO  16:39:46,108 - #16 pom
INFO  16:39:46,108 - #5 ;
INFO  16:39:46,108 - #3 {
INFO  16:39:46,108 - #19 if
INFO  16:39:46,108 - #6 (
INFO  16:39:46,108 - #16 inc
INFO  16:39:46,108 - #22 ==
INFO  16:39:46,108 - #16 jedan
INFO  16:39:46,109 - #7 )
INFO  16:39:46,111 - #16 pom
INFO  16:39:46,111 - #13 =
INFO  16:39:46,111 - #15 1
INFO  16:39:46,111 - #5 ;
INFO  16:39:46,112 - #20 else
INFO  16:39:46,112 - #19 if
INFO  16:39:46,112 - #6 (
INFO  16:39:46,112 - #16 inc
INFO  16:39:46,112 - #22 ==
INFO  16:39:46,112 - #15 2
INFO  16:39:46,112 - #7 )
INFO  16:39:46,112 - #16 pom
INFO  16:39:46,112 - #13 =
INFO  16:39:46,112 - #16 a
INFO  16:39:46,112 - #5 ;
INFO  16:39:46,112 - #10 return
INFO  16:39:46,113 - #16 sum
INFO  16:39:46,113 - #6 (
INFO  16:39:46,113 - #16 a
INFO  16:39:46,113 - #8 ,
INFO  16:39:46,113 - #16 pom
INFO  16:39:46,113 - #7 )
INFO  16:39:46,114 - #5 ;
INFO  16:39:46,114 - #4 }
INFO  16:39:46,114 - #16 bool
INFO  16:39:46,114 - #16 verify
INFO  16:39:46,114 - #6 (
INFO  16:39:46,114 - #7 )
INFO  16:39:46,114 - #3 {
INFO  16:39:46,115 - #16 sum
INFO  16:39:46,115 - #6 (
INFO  16:39:46,115 - #12 -
INFO  16:39:46,115 - #15 1
INFO  16:39:46,115 - #8 ,
INFO  16:39:46,115 - #15 1
INFO  16:39:46,115 - #7 )
INFO  16:39:46,115 - #5 ;
INFO  16:39:46,115 - #16 inkrement
INFO  16:39:46,115 - #6 (
INFO  16:39:46,115 - #15 2
INFO  16:39:46,115 - #8 ,
INFO  16:39:46,115 - #15 2
INFO  16:39:46,115 - #7 )
INFO  16:39:46,115 - #5 ;
INFO  16:39:46,115 - #9 print
INFO  16:39:46,115 - #6 (
INFO  16:39:46,115 - #17 'v'
INFO  16:39:46,115 - #7 )
INFO  16:39:46,116 - #5 ;
INFO  16:39:46,116 - #10 return
INFO  16:39:46,116 - #18 false
INFO  16:39:46,116 - #5 ;
INFO  16:39:46,116 - #4 }
INFO  16:39:46,116 - #14 void
INFO  16:39:46,116 - #16 main
INFO  16:39:46,116 - #6 (
INFO  16:39:46,116 - #7 )
INFO  16:39:46,116 - #3 {
INFO  16:39:46,116 - #19 if
INFO  16:39:46,116 - #6 (
INFO  16:39:46,117 - #15 1
INFO  16:39:46,117 - #23 !=
INFO  16:39:46,117 - #15 1
INFO  16:39:46,117 - #7 )
INFO  16:39:46,117 - #9 print
INFO  16:39:46,117 - #6 (
INFO  16:39:46,117 - #12 -
INFO  16:39:46,117 - #15 6
INFO  16:39:46,117 - #7 )
INFO  16:39:46,118 - #5 ;
INFO  16:39:46,118 - #20 else
INFO  16:39:46,118 - #9 print
INFO  16:39:46,118 - #6 (
INFO  16:39:46,118 - #15 0
INFO  16:39:46,118 - #7 )
INFO  16:39:46,118 - #5 ;
INFO  16:39:46,118 - #16 ibool
INFO  16:39:46,118 - #13 =
INFO  16:39:46,118 - #18 false
INFO  16:39:46,118 - #5 ;
INFO  16:39:46,118 - #16 i
INFO  16:39:46,118 - #13 =
INFO  16:39:46,118 - #15 0
INFO  16:39:46,118 - #5 ;
INFO  16:39:46,118 - #34 do
INFO  16:39:46,118 - #3 {
INFO  16:39:46,118 - #19 if
INFO  16:39:46,119 - #6 (
INFO  16:39:46,119 - #16 i
INFO  16:39:46,119 - #22 ==
INFO  16:39:46,119 - #15 2
INFO  16:39:46,119 - #7 )
INFO  16:39:46,119 - #16 ibool
INFO  16:39:46,119 - #13 =
INFO  16:39:46,119 - #18 true
INFO  16:39:46,119 - #5 ;
INFO  16:39:46,119 - #16 i
INFO  16:39:46,119 - #46 ++
INFO  16:39:46,119 - #5 ;
INFO  16:39:46,119 - #4 }
INFO  16:39:46,119 - #35 while
INFO  16:39:46,120 - #6 (
INFO  16:39:46,120 - #16 i
INFO  16:39:46,120 - #26 <
INFO  16:39:46,120 - #15 5
INFO  16:39:46,120 - #7 )
INFO  16:39:46,120 - #5 ;
INFO  16:39:46,120 - #19 if
INFO  16:39:46,120 - #6 (
INFO  16:39:46,120 - #16 ibool
INFO  16:39:46,120 - #7 )
INFO  16:39:46,120 - #19 if
INFO  16:39:46,120 - #6 (
INFO  16:39:46,120 - #16 i
INFO  16:39:46,120 - #22 ==
INFO  16:39:46,120 - #15 5
INFO  16:39:46,120 - #7 )
INFO  16:39:46,121 - #9 print
INFO  16:39:46,121 - #6 (
INFO  16:39:46,121 - #15 1
INFO  16:39:46,121 - #7 )
INFO  16:39:46,121 - #5 ;
INFO  16:39:46,121 - #20 else
INFO  16:39:46,121 - #9 print
INFO  16:39:46,121 - #6 (
INFO  16:39:46,121 - #12 -
INFO  16:39:46,121 - #15 1
INFO  16:39:46,121 - #7 )
INFO  16:39:46,121 - #5 ;
INFO  16:39:46,121 - #16 t1
INFO  16:39:46,121 - #13 =
INFO  16:39:46,121 - #36 new
INFO  16:39:46,121 - #16 Test
INFO  16:39:46,121 - #5 ;
INFO  16:39:46,121 - #16 t1
INFO  16:39:46,121 - #43 .
INFO  16:39:46,121 - #16 a
INFO  16:39:46,121 - #13 =
INFO  16:39:46,121 - #15 2
INFO  16:39:46,121 - #5 ;
INFO  16:39:46,121 - #16 t1
INFO  16:39:46,121 - #43 .
INFO  16:39:46,121 - #16 niz
INFO  16:39:46,121 - #13 =
INFO  16:39:46,121 - #36 new
INFO  16:39:46,121 - #16 int
INFO  16:39:46,121 - #50 [
INFO  16:39:46,121 - #15 3
INFO  16:39:46,121 - #51 ]
INFO  16:39:46,121 - #5 ;
INFO  16:39:46,122 - #16 t1
INFO  16:39:46,122 - #43 .
INFO  16:39:46,122 - #16 niz
INFO  16:39:46,122 - #50 [
INFO  16:39:46,122 - #15 0
INFO  16:39:46,122 - #51 ]
INFO  16:39:46,122 - #13 =
INFO  16:39:46,122 - #15 1
INFO  16:39:46,122 - #28 *
INFO  16:39:46,122 - #16 t1
INFO  16:39:46,122 - #43 .
INFO  16:39:46,122 - #16 a
INFO  16:39:46,122 - #5 ;
INFO  16:39:46,123 - #16 t1
INFO  16:39:46,123 - #43 .
INFO  16:39:46,123 - #16 niz
INFO  16:39:46,123 - #50 [
INFO  16:39:46,123 - #15 1
INFO  16:39:46,123 - #51 ]
INFO  16:39:46,123 - #13 =
INFO  16:39:46,123 - #15 2
INFO  16:39:46,123 - #28 *
INFO  16:39:46,123 - #16 t1
INFO  16:39:46,124 - #43 .
INFO  16:39:46,124 - #16 a
INFO  16:39:46,124 - #5 ;
INFO  16:39:46,124 - #16 t1
INFO  16:39:46,124 - #43 .
INFO  16:39:46,124 - #16 niz
INFO  16:39:46,124 - #50 [
INFO  16:39:46,124 - #15 2
INFO  16:39:46,124 - #51 ]
INFO  16:39:46,124 - #13 =
INFO  16:39:46,124 - #16 sum
INFO  16:39:46,124 - #6 (
INFO  16:39:46,124 - #16 t1
INFO  16:39:46,124 - #43 .
INFO  16:39:46,124 - #16 niz
INFO  16:39:46,124 - #50 [
INFO  16:39:46,124 - #15 1
INFO  16:39:46,124 - #51 ]
INFO  16:39:46,124 - #8 ,
INFO  16:39:46,124 - #16 t1
INFO  16:39:46,124 - #43 .
INFO  16:39:46,124 - #16 niz
INFO  16:39:46,124 - #50 [
INFO  16:39:46,124 - #15 0
INFO  16:39:46,124 - #51 ]
INFO  16:39:46,124 - #7 )
INFO  16:39:46,124 - #28 *
INFO  16:39:46,124 - #16 t1
INFO  16:39:46,125 - #43 .
INFO  16:39:46,125 - #16 a
INFO  16:39:46,125 - #11 +
INFO  16:39:46,125 - #15 1
INFO  16:39:46,125 - #5 ;
INFO  16:39:46,125 - #19 if
INFO  16:39:46,125 - #6 (
INFO  16:39:46,125 - #16 verify
INFO  16:39:46,125 - #6 (
INFO  16:39:46,125 - #7 )
INFO  16:39:46,125 - #7 )
INFO  16:39:46,125 - #9 print
INFO  16:39:46,125 - #6 (
INFO  16:39:46,125 - #16 ord
INFO  16:39:46,125 - #6 (
INFO  16:39:46,125 - #17 'A'
INFO  16:39:46,125 - #7 )
INFO  16:39:46,125 - #7 )
INFO  16:39:46,125 - #5 ;
INFO  16:39:46,125 - #20 else
INFO  16:39:46,125 - #9 print
INFO  16:39:46,125 - #6 (
INFO  16:39:46,125 - #16 ord
INFO  16:39:46,125 - #6 (
INFO  16:39:46,126 - #17 'a'
INFO  16:39:46,126 - #7 )
INFO  16:39:46,126 - #7 )
INFO  16:39:46,126 - #5 ;
INFO  16:39:46,126 - #9 print
INFO  16:39:46,126 - #6 (
INFO  16:39:46,126 - #16 eol
INFO  16:39:46,126 - #7 )
INFO  16:39:46,126 - #5 ;
INFO  16:39:46,126 - #16 i
INFO  16:39:46,126 - #13 =
INFO  16:39:46,126 - #15 0
INFO  16:39:46,126 - #5 ;
INFO  16:39:46,126 - #34 do
INFO  16:39:46,126 - #3 {
INFO  16:39:46,126 - #19 if
INFO  16:39:46,126 - #6 (
INFO  16:39:46,126 - #16 i
INFO  16:39:46,126 - #22 ==
INFO  16:39:46,126 - #15 3
INFO  16:39:46,126 - #7 )
INFO  16:39:46,126 - #3 {
INFO  16:39:46,126 - #16 i
INFO  16:39:46,126 - #46 ++
INFO  16:39:46,126 - #5 ;
INFO  16:39:46,126 - #39 continue
INFO  16:39:46,126 - #5 ;
INFO  16:39:46,126 - #4 }
INFO  16:39:46,126 - #19 if
INFO  16:39:46,127 - #6 (
INFO  16:39:46,127 - #16 i
INFO  16:39:46,127 - #22 ==
INFO  16:39:46,127 - #15 4
INFO  16:39:46,127 - #7 )
INFO  16:39:46,127 - #31 break
INFO  16:39:46,127 - #5 ;
INFO  16:39:46,127 - #16 i
INFO  16:39:46,127 - #13 =
INFO  16:39:46,127 - #16 inkrement
INFO  16:39:46,127 - #6 (
INFO  16:39:46,127 - #16 i
INFO  16:39:46,127 - #8 ,
INFO  16:39:46,127 - #15 1
INFO  16:39:46,127 - #7 )
INFO  16:39:46,127 - #5 ;
INFO  16:39:46,127 - #4 }
INFO  16:39:46,127 - #35 while
INFO  16:39:46,127 - #6 (
INFO  16:39:46,127 - #16 i
INFO  16:39:46,127 - #26 <
INFO  16:39:46,127 - #15 10
INFO  16:39:46,127 - #7 )
INFO  16:39:46,127 - #5 ;
INFO  16:39:46,127 - #19 if
INFO  16:39:46,127 - #6 (
INFO  16:39:46,127 - #16 i
INFO  16:39:46,127 - #22 ==
INFO  16:39:46,127 - #15 3
INFO  16:39:46,127 - #44 &&
INFO  16:39:46,128 - #16 verify
INFO  16:39:46,128 - #6 (
INFO  16:39:46,128 - #7 )
INFO  16:39:46,128 - #7 )
INFO  16:39:46,128 - #9 print
INFO  16:39:46,128 - #6 (
INFO  16:39:46,128 - #12 -
INFO  16:39:46,128 - #15 4
INFO  16:39:46,128 - #7 )
INFO  16:39:46,128 - #5 ;
INFO  16:39:46,128 - #20 else
INFO  16:39:46,128 - #9 print
INFO  16:39:46,128 - #6 (
INFO  16:39:46,128 - #15 4
INFO  16:39:46,128 - #7 )
INFO  16:39:46,128 - #5 ;
INFO  16:39:46,128 - #37 read
INFO  16:39:46,128 - #6 (
INFO  16:39:46,128 - #16 t1
INFO  16:39:46,128 - #43 .
INFO  16:39:46,128 - #16 niz
INFO  16:39:46,128 - #50 [
INFO  16:39:46,128 - #15 0
INFO  16:39:46,128 - #51 ]
INFO  16:39:46,128 - #7 )
INFO  16:39:46,128 - #5 ;
INFO  16:39:46,128 - #37 read
INFO  16:39:46,128 - #6 (
INFO  16:39:46,128 - #16 t1
INFO  16:39:46,128 - #43 .
INFO  16:39:46,128 - #16 niz
INFO  16:39:46,128 - #50 [
INFO  16:39:46,128 - #15 1
INFO  16:39:46,128 - #51 ]
INFO  16:39:46,128 - #7 )
INFO  16:39:46,129 - #5 ;
INFO  16:39:46,129 - #37 read
INFO  16:39:46,129 - #6 (
INFO  16:39:46,129 - #16 t1
INFO  16:39:46,129 - #43 .
INFO  16:39:46,129 - #16 niz
INFO  16:39:46,129 - #50 [
INFO  16:39:46,129 - #15 2
INFO  16:39:46,129 - #51 ]
INFO  16:39:46,129 - #7 )
INFO  16:39:46,129 - #5 ;
INFO  16:39:46,129 - #9 print
INFO  16:39:46,129 - #6 (
INFO  16:39:46,129 - #16 eol
INFO  16:39:46,129 - #7 )
INFO  16:39:46,129 - #5 ;
INFO  16:39:46,129 - #16 chr
INFO  16:39:46,129 - #6 (
INFO  16:39:46,129 - #15 3
INFO  16:39:46,129 - #7 )
INFO  16:39:46,129 - #5 ;
INFO  16:39:46,129 - #9 print
INFO  16:39:46,129 - #6 (
INFO  16:39:46,129 - #16 sum
INFO  16:39:46,129 - #6 (
INFO  16:39:46,129 - #16 sum
INFO  16:39:46,129 - #6 (
INFO  16:39:46,129 - #16 t1
INFO  16:39:46,129 - #43 .
INFO  16:39:46,129 - #16 niz
INFO  16:39:46,129 - #50 [
INFO  16:39:46,129 - #15 0
INFO  16:39:46,129 - #51 ]
INFO  16:39:46,129 - #8 ,
INFO  16:39:46,129 - #16 t1
INFO  16:39:46,129 - #43 .
INFO  16:39:46,129 - #16 niz
INFO  16:39:46,129 - #50 [
INFO  16:39:46,129 - #15 1
INFO  16:39:46,129 - #51 ]
INFO  16:39:46,129 - #7 )
INFO  16:39:46,129 - #8 ,
INFO  16:39:46,129 - #16 t1
INFO  16:39:46,129 - #43 .
INFO  16:39:46,129 - #16 niz
INFO  16:39:46,129 - #50 [
INFO  16:39:46,129 - #15 2
INFO  16:39:46,129 - #51 ]
INFO  16:39:46,130 - #7 )
INFO  16:39:46,130 - #7 )
INFO  16:39:46,130 - #5 ;
INFO  16:39:46,130 - #9 print
INFO  16:39:46,130 - #6 (
INFO  16:39:46,130 - #16 eol
INFO  16:39:46,130 - #7 )
INFO  16:39:46,130 - #5 ;
INFO  16:39:46,130 - #9 print
INFO  16:39:46,130 - #6 (
INFO  16:39:46,130 - #16 inkrement
INFO  16:39:46,130 - #6 (
INFO  16:39:46,130 - #16 t1
INFO  16:39:46,130 - #43 .
INFO  16:39:46,130 - #16 niz
INFO  16:39:46,130 - #50 [
INFO  16:39:46,130 - #15 2
INFO  16:39:46,130 - #51 ]
INFO  16:39:46,130 - #8 ,
INFO  16:39:46,130 - #15 2
INFO  16:39:46,130 - #7 )
INFO  16:39:46,130 - #7 )
INFO  16:39:46,130 - #5 ;
INFO  16:39:46,130 - #16 t2
INFO  16:39:46,130 - #13 =
INFO  16:39:46,130 - #36 new
INFO  16:39:46,130 - #16 Test
INFO  16:39:46,130 - #5 ;
INFO  16:39:46,130 - #16 t2
INFO  16:39:46,130 - #43 .
INFO  16:39:46,130 - #16 a
INFO  16:39:46,130 - #13 =
INFO  16:39:46,130 - #15 3
INFO  16:39:46,130 - #5 ;
INFO  16:39:46,130 - #16 t2
INFO  16:39:46,130 - #43 .
INFO  16:39:46,131 - #16 niz
INFO  16:39:46,131 - #13 =
INFO  16:39:46,132 - #36 new
INFO  16:39:46,132 - #16 int
INFO  16:39:46,132 - #50 [
INFO  16:39:46,132 - #15 3
INFO  16:39:46,132 - #51 ]
INFO  16:39:46,132 - #5 ;
INFO  16:39:46,132 - #16 i
INFO  16:39:46,132 - #13 =
INFO  16:39:46,132 - #15 0
INFO  16:39:46,132 - #5 ;
INFO  16:39:46,133 - #34 do
INFO  16:39:46,133 - #3 {
INFO  16:39:46,133 - #16 t2
INFO  16:39:46,133 - #43 .
INFO  16:39:46,133 - #16 niz
INFO  16:39:46,133 - #50 [
INFO  16:39:46,133 - #16 i
INFO  16:39:46,133 - #51 ]
INFO  16:39:46,133 - #13 =
INFO  16:39:46,133 - #16 t1
INFO  16:39:46,133 - #43 .
INFO  16:39:46,133 - #16 niz
INFO  16:39:46,133 - #50 [
INFO  16:39:46,133 - #16 i
INFO  16:39:46,133 - #51 ]
INFO  16:39:46,133 - #28 *
INFO  16:39:46,134 - #15 2
INFO  16:39:46,135 - #28 *
INFO  16:39:46,135 - #16 t2
INFO  16:39:46,135 - #43 .
INFO  16:39:46,135 - #16 a
INFO  16:39:46,135 - #5 ;
INFO  16:39:46,135 - #16 i
INFO  16:39:46,135 - #46 ++
INFO  16:39:46,135 - #5 ;
INFO  16:39:46,135 - #4 }
INFO  16:39:46,135 - #35 while
INFO  16:39:46,135 - #6 (
INFO  16:39:46,135 - #16 i
INFO  16:39:46,135 - #26 <
INFO  16:39:46,135 - #15 3
INFO  16:39:46,135 - #7 )
INFO  16:39:46,135 - #5 ;
INFO  16:39:46,135 - #9 print
INFO  16:39:46,135 - #6 (
INFO  16:39:46,135 - #16 t2
INFO  16:39:46,135 - #43 .
INFO  16:39:46,135 - #16 niz
INFO  16:39:46,135 - #50 [
INFO  16:39:46,135 - #15 0
INFO  16:39:46,135 - #51 ]
INFO  16:39:46,135 - #7 )
INFO  16:39:46,135 - #5 ;
INFO  16:39:46,135 - #9 print
INFO  16:39:46,135 - #6 (
INFO  16:39:46,135 - #16 t2
INFO  16:39:46,135 - #43 .
INFO  16:39:46,135 - #16 niz
INFO  16:39:46,135 - #50 [
INFO  16:39:46,135 - #15 1
INFO  16:39:46,135 - #51 ]
INFO  16:39:46,135 - #7 )
INFO  16:39:46,135 - #5 ;
INFO  16:39:46,135 - #9 print
INFO  16:39:46,135 - #6 (
INFO  16:39:46,135 - #16 t2
INFO  16:39:46,135 - #43 .
INFO  16:39:46,135 - #16 niz
INFO  16:39:46,135 - #50 [
INFO  16:39:46,135 - #15 2
INFO  16:39:46,135 - #51 ]
INFO  16:39:46,135 - #7 )
INFO  16:39:46,136 - #5 ;
INFO  16:39:46,136 - #9 print
INFO  16:39:46,136 - #6 (
INFO  16:39:46,136 - #16 eol
INFO  16:39:46,136 - #7 )
INFO  16:39:46,136 - #5 ;
INFO  16:39:46,136 - #16 i
INFO  16:39:46,136 - #13 =
INFO  16:39:46,136 - #15 0
INFO  16:39:46,136 - #5 ;
INFO  16:39:46,136 - #16 niz2
INFO  16:39:46,136 - #13 =
INFO  16:39:46,136 - #15 0
INFO  16:39:46,136 - #5 ;
INFO  16:39:46,136 - #34 do
INFO  16:39:46,136 - #3 {
INFO  16:39:46,136 - #16 niz2
INFO  16:39:46,136 - #13 =
INFO  16:39:46,136 - #16 niz2
INFO  16:39:46,136 - #11 +
INFO  16:39:46,136 - #16 t1
INFO  16:39:46,136 - #43 .
INFO  16:39:46,136 - #16 niz
INFO  16:39:46,136 - #50 [
INFO  16:39:46,136 - #16 i
INFO  16:39:46,136 - #51 ]
INFO  16:39:46,136 - #11 +
INFO  16:39:46,136 - #16 t2
INFO  16:39:46,136 - #43 .
INFO  16:39:46,136 - #16 niz
INFO  16:39:46,136 - #50 [
INFO  16:39:46,136 - #16 i
INFO  16:39:46,136 - #51 ]
INFO  16:39:46,136 - #5 ;
INFO  16:39:46,136 - #16 i
INFO  16:39:46,136 - #46 ++
INFO  16:39:46,136 - #5 ;
INFO  16:39:46,136 - #4 }
INFO  16:39:46,136 - #35 while
INFO  16:39:46,136 - #6 (
INFO  16:39:46,136 - #16 i
INFO  16:39:46,136 - #26 <
INFO  16:39:46,136 - #15 3
INFO  16:39:46,136 - #7 )
INFO  16:39:46,136 - #5 ;
INFO  16:39:46,136 - #9 print
INFO  16:39:46,136 - #6 (
INFO  16:39:46,136 - #16 niz2
INFO  16:39:46,136 - #7 )
INFO  16:39:46,136 - #5 ;
INFO  16:39:46,136 - #9 print
INFO  16:39:46,136 - #6 (
INFO  16:39:46,136 - #16 eol
INFO  16:39:46,136 - #7 )
INFO  16:39:46,136 - #5 ;
INFO  16:39:46,136 - #4 }
INFO  16:39:46,136 - #4 }
INFO  16:39:46,143 - Trenutan tip konstante je:  int na liniji 5
INFO  16:39:46,143 - Deklarisana promenljiva i na liniji 7
INFO  16:39:46,143 - Deklarisana promenljiva ibool na liniji 10
INFO  16:39:46,143 - Deklarisana promenljiva niz2 na liniji 12
INFO  16:39:46,143 - Deklarisana je rekord :  Test na liniji 14
INFO  16:39:46,143 - Deklarisana promenljiva niz na liniji 15
INFO  16:39:46,143 - Deklarisana promenljiva a na liniji 16
INFO  16:39:46,144 - Deklarisana je rekord :  Test2 na liniji 19
INFO  16:39:46,144 - Deklarisana promenljiva niz23 na liniji 20
INFO  16:39:46,144 - Deklarisana promenljiva a2 na liniji 21
INFO  16:39:46,144 - Deklarisana promenljiva t2 na liniji 24
INFO  16:39:46,144 - Deklarisana promenljiva t1 na liniji 24
INFO  16:39:46,144 - Obradjuje se funkcija sum na liniji 28
INFO  16:39:46,144 - Naveden argument d na liniji 28
INFO  16:39:46,144 - TypeNAME: int
INFO  16:39:46,144 - Naveden argument z na liniji 28
INFO  16:39:46,144 - TypeNAME: int
INFO  16:39:46,145 - Obradjuje se funkcija inkrement na liniji 34
INFO  16:39:46,145 - Naveden argument inc na liniji 34
INFO  16:39:46,145 - TypeNAME: int
INFO  16:39:46,145 - Naveden argument a na liniji 34
INFO  16:39:46,145 - TypeNAME: int
INFO  16:39:46,145 - Deklarisana promenljiva pom na liniji 35
INFO  16:39:46,145 - Obradjuje se funkcija verify na liniji 44
INFO  16:39:46,145 - Pronadjen poziv funkcije sum na liniji 46
INFO  16:39:46,145 - Pronadjen poziv funkcije inkrement na liniji 47
INFO  16:39:46,145 - Obradjuje se funkcija main na liniji 53
ERROR 16:39:46,145 - Semanticka greska na liniji 75 print prima samo num, char ili bool!
ERROR 16:39:46,145 - Semanticka greska na liniji 76 print prima samo num, char ili bool!
ERROR 16:39:46,145 - Semanticka greska na liniji 93  t1 mora biti int, char ili bool!
ERROR 16:39:46,145 - Semanticka greska na liniji 94  t1 mora biti int, char ili bool!
ERROR 16:39:46,145 - Semanticka greska na liniji 95  t1 mora biti int, char ili bool!
INFO  16:39:46,145 - Pronadjen poziv funkcije chr na liniji 98
ERROR 16:39:46,145 - Semanticka greska na liniji 100 print prima samo num, char ili bool!
ERROR 16:39:46,145 - Semanticka greska na liniji 103 print prima samo num, char ili bool!
ERROR 16:39:46,146 - Semanticka greska na liniji 113  t2 mora biti int, char ili bool!
ERROR 16:39:46,146 - Semanticka greska na liniji 114  t2 mora biti int, char ili bool!
ERROR 16:39:46,146 - Semanticka greska na liniji 115  t2 mora biti int, char ili bool!
ERROR 16:39:46,146 - Parsiranje NIJE uspesno zavrseno!
