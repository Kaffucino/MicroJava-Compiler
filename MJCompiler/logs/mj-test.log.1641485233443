INFO  17:06:14,949 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  17:06:14,975 - #2 program
INFO  17:06:14,975 - #16 Ime
INFO  17:06:14,976 - #48 const
INFO  17:06:14,976 - #16 tip
INFO  17:06:14,976 - #16 x
INFO  17:06:14,977 - #13 =
INFO  17:06:14,977 - #15 8
INFO  17:06:14,977 - #8 ,
INFO  17:06:14,977 - #16 y
INFO  17:06:14,977 - #13 =
INFO  17:06:14,977 - #17 'i'
INFO  17:06:14,977 - #8 ,
INFO  17:06:14,977 - #16 z
INFO  17:06:14,977 - #13 =
INFO  17:06:14,977 - #18 true
INFO  17:06:14,977 - #5 ;
INFO  17:06:14,978 - #16 int
INFO  17:06:14,978 - #16 x
INFO  17:06:14,979 - #50 [
INFO  17:06:14,979 - #51 ]
INFO  17:06:14,979 - #8 ,
INFO  17:06:14,979 - #16 y
INFO  17:06:14,979 - #8 ,
INFO  17:06:14,981 - #16 a
INFO  17:06:14,981 - #50 [
INFO  17:06:14,981 - #51 ]
INFO  17:06:14,981 - #8 ,
INFO  17:06:14,981 - #16 f
INFO  17:06:14,981 - #5 ;
INFO  17:06:14,981 - #32 class
INFO  17:06:14,981 - #16 Board
INFO  17:06:14,981 - #38 extends
INFO  17:06:14,982 - #16 Polje
INFO  17:06:14,982 - #3 {
INFO  17:06:14,982 - #16 int
INFO  17:06:14,982 - #16 a
INFO  17:06:14,982 - #5 ;
INFO  17:06:14,982 - #3 {
INFO  17:06:14,982 - #14 void
INFO  17:06:14,983 - #16 funckija
INFO  17:06:14,983 - #6 (
INFO  17:06:14,983 - #16 bool
INFO  17:06:14,983 - #16 a
INFO  17:06:14,984 - #50 [
INFO  17:06:14,984 - #51 ]
INFO  17:06:14,984 - #8 ,
INFO  17:06:14,984 - #16 int
INFO  17:06:14,984 - #16 aa
INFO  17:06:14,984 - #8 ,
INFO  17:06:14,984 - #16 char
INFO  17:06:14,984 - #16 c
INFO  17:06:14,984 - #7 )
INFO  17:06:14,985 - #16 int
INFO  17:06:14,985 - #16 y
INFO  17:06:14,985 - #5 ;
INFO  17:06:14,985 - #3 {
INFO  17:06:14,985 - #3 {
INFO  17:06:14,985 - #39 continue
INFO  17:06:14,985 - #5 ;
INFO  17:06:14,985 - #10 return
INFO  17:06:14,986 - #12 -
INFO  17:06:14,986 - #15 5
INFO  17:06:14,986 - #11 +
INFO  17:06:14,987 - #15 7
INFO  17:06:14,988 - #28 *
INFO  17:06:14,988 - #15 2
INFO  17:06:14,988 - #12 -
INFO  17:06:14,988 - #6 (
INFO  17:06:14,991 - #15 13
INFO  17:06:14,991 - #28 *
INFO  17:06:14,991 - #15 7
INFO  17:06:14,991 - #7 )
INFO  17:06:14,992 - #11 +
INFO  17:06:14,992 - #36 new
INFO  17:06:14,992 - #16 int
INFO  17:06:14,992 - #50 [
INFO  17:06:14,992 - #15 5
INFO  17:06:14,992 - #51 ]
INFO  17:06:14,992 - #5 ;
INFO  17:06:14,993 - #16 a
INFO  17:06:14,993 - #43 .
INFO  17:06:14,993 - #16 b
INFO  17:06:14,994 - #50 [
INFO  17:06:14,994 - #15 3
INFO  17:06:14,994 - #51 ]
INFO  17:06:14,994 - #43 .
INFO  17:06:14,994 - #16 c
INFO  17:06:14,994 - #6 (
INFO  17:06:14,995 - #15 5
INFO  17:06:14,995 - #8 ,
INFO  17:06:14,995 - #15 17
INFO  17:06:14,995 - #7 )
INFO  17:06:14,996 - #5 ;
INFO  17:06:14,996 - #34 do
INFO  17:06:14,996 - #3 {
INFO  17:06:14,996 - #10 return
INFO  17:06:14,996 - #5 ;
INFO  17:06:14,996 - #4 }
INFO  17:06:14,997 - #35 while
INFO  17:06:14,997 - #6 (
INFO  17:06:14,997 - #15 5
INFO  17:06:14,997 - #22 ==
INFO  17:06:14,998 - #15 7
INFO  17:06:14,998 - #45 ||
INFO  17:06:14,999 - #15 5
INFO  17:06:14,999 - #27 <=
INFO  17:06:14,999 - #15 3
INFO  17:06:14,999 - #44 &&
INFO  17:06:14,999 - #15 7
INFO  17:06:14,999 - #23 !=
INFO  17:06:14,999 - #15 2
INFO  17:06:15,000 - #7 )
INFO  17:06:15,001 - #5 ;
INFO  17:06:15,001 - #19 if
INFO  17:06:15,001 - #6 (
INFO  17:06:15,001 - #15 5
INFO  17:06:15,001 - #22 ==
INFO  17:06:15,001 - #15 6
INFO  17:06:15,001 - #7 )
INFO  17:06:15,001 - #3 {
INFO  17:06:15,001 - #16 x
INFO  17:06:15,001 - #13 =
INFO  17:06:15,001 - #15 3
INFO  17:06:15,002 - #5 ;
INFO  17:06:15,002 - #4 }
INFO  17:06:15,002 - #4 }
INFO  17:06:15,002 - #4 }
INFO  17:06:15,003 - #4 }
INFO  17:06:15,003 - #4 }
INFO  17:06:15,003 - #49 record
INFO  17:06:15,004 - #16 rekord
INFO  17:06:15,004 - #3 {
INFO  17:06:15,004 - #16 int
INFO  17:06:15,004 - #16 a
INFO  17:06:15,004 - #5 ;
INFO  17:06:15,004 - #16 char
INFO  17:06:15,004 - #16 b
INFO  17:06:15,004 - #5 ;
INFO  17:06:15,004 - #4 }
INFO  17:06:15,004 - #3 {
INFO  17:06:15,005 - #4 }
