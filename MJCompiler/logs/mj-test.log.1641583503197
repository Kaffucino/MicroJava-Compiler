INFO  20:24:51,705 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  20:24:51,737 - #2 program
INFO  20:24:51,737 - #16 Ime
INFO  20:24:51,737 - #48 const
INFO  20:24:51,737 - #16 tip
INFO  20:24:51,737 - #16 x
INFO  20:24:51,737 - #13 =
INFO  20:24:51,737 - #15 8
INFO  20:24:51,737 - #8 ,
INFO  20:24:51,737 - #16 y
INFO  20:24:51,738 - #13 =
INFO  20:24:51,738 - #17 'i'
INFO  20:24:51,738 - #8 ,
INFO  20:24:51,738 - #16 z
INFO  20:24:51,738 - #13 =
INFO  20:24:51,738 - #18 true
INFO  20:24:51,738 - #5 ;
INFO  20:24:51,738 - #16 int
INFO  20:24:51,739 - #16 x
INFO  20:24:51,739 - #50 [
INFO  20:24:51,739 - #51 ]
INFO  20:24:51,739 - #8 ,
INFO  20:24:51,739 - #16 y
INFO  20:24:51,739 - #8 ,
INFO  20:24:51,742 - #16 a
INFO  20:24:51,742 - #50 [
INFO  20:24:51,742 - #51 ]
INFO  20:24:51,742 - #8 ,
INFO  20:24:51,742 - #16 f
INFO  20:24:51,742 - #5 ;
INFO  20:24:51,742 - #32 class
INFO  20:24:51,743 - #16 Board
INFO  20:24:51,743 - #38 extends
INFO  20:24:51,743 - #16 Polje
INFO  20:24:51,743 - #3 {
INFO  20:24:51,743 - #16 int
INFO  20:24:51,743 - #16 a
INFO  20:24:51,743 - #5 ;
INFO  20:24:51,743 - #3 {
INFO  20:24:51,743 - #14 void
INFO  20:24:51,744 - #16 funckija
INFO  20:24:51,744 - #6 (
INFO  20:24:51,744 - #16 bool
INFO  20:24:51,744 - #16 a
INFO  20:24:51,745 - #50 [
INFO  20:24:51,745 - #51 ]
INFO  20:24:51,745 - #8 ,
INFO  20:24:51,745 - #16 int
INFO  20:24:51,745 - #16 aa
INFO  20:24:51,745 - #8 ,
INFO  20:24:51,745 - #16 char
INFO  20:24:51,745 - #16 c
INFO  20:24:51,745 - #7 )
INFO  20:24:51,746 - #16 int
INFO  20:24:51,746 - #16 y
INFO  20:24:51,746 - #5 ;
INFO  20:24:51,746 - #3 {
INFO  20:24:51,746 - #3 {
INFO  20:24:51,746 - #39 continue
INFO  20:24:51,746 - #5 ;
INFO  20:24:51,746 - #10 return
INFO  20:24:51,747 - #12 -
INFO  20:24:51,747 - #15 5
INFO  20:24:51,747 - #11 +
INFO  20:24:51,748 - #15 7
INFO  20:24:51,748 - #28 *
INFO  20:24:51,748 - #15 2
INFO  20:24:51,749 - #12 -
INFO  20:24:51,749 - #6 (
INFO  20:24:51,752 - #15 13
INFO  20:24:51,752 - #28 *
INFO  20:24:51,752 - #15 7
INFO  20:24:51,752 - #7 )
INFO  20:24:51,753 - #11 +
INFO  20:24:51,753 - #36 new
INFO  20:24:51,753 - #16 int
INFO  20:24:51,753 - #50 [
INFO  20:24:51,753 - #15 5
INFO  20:24:51,753 - #51 ]
INFO  20:24:51,753 - #5 ;
INFO  20:24:51,753 - #16 a
INFO  20:24:51,754 - #43 .
INFO  20:24:51,754 - #16 b
INFO  20:24:51,754 - #50 [
INFO  20:24:51,754 - #15 3
INFO  20:24:51,754 - #51 ]
INFO  20:24:51,754 - #43 .
INFO  20:24:51,754 - #16 c
INFO  20:24:51,754 - #6 (
INFO  20:24:51,754 - #15 5
INFO  20:24:51,754 - #8 ,
INFO  20:24:51,754 - #15 17
INFO  20:24:51,754 - #7 )
INFO  20:24:51,755 - #5 ;
INFO  20:24:51,755 - #34 do
INFO  20:24:51,755 - #3 {
INFO  20:24:51,755 - #10 return
INFO  20:24:51,755 - #5 ;
INFO  20:24:51,755 - #4 }
INFO  20:24:51,756 - #35 while
INFO  20:24:51,756 - #6 (
INFO  20:24:51,757 - #15 5
INFO  20:24:51,757 - #22 ==
INFO  20:24:51,757 - #15 7
INFO  20:24:51,757 - #45 ||
INFO  20:24:51,758 - #15 5
INFO  20:24:51,758 - #27 <=
INFO  20:24:51,758 - #15 3
INFO  20:24:51,758 - #44 &&
INFO  20:24:51,759 - #15 7
INFO  20:24:51,759 - #23 !=
INFO  20:24:51,759 - #15 2
INFO  20:24:51,759 - #7 )
INFO  20:24:51,760 - #5 ;
INFO  20:24:51,761 - #19 if
INFO  20:24:51,761 - #6 (
INFO  20:24:51,761 - #15 5
INFO  20:24:51,761 - #22 ==
INFO  20:24:51,761 - #15 6
INFO  20:24:51,761 - #7 )
INFO  20:24:51,761 - #3 {
INFO  20:24:51,762 - #16 x
INFO  20:24:51,762 - #13 =
INFO  20:24:51,762 - #15 3
INFO  20:24:51,763 - #5 ;
INFO  20:24:51,763 - #4 }
INFO  20:24:51,764 - #4 }
INFO  20:24:51,764 - #4 }
INFO  20:24:51,764 - #4 }
INFO  20:24:51,764 - #4 }
INFO  20:24:51,765 - #49 record
INFO  20:24:51,765 - #16 rekord
INFO  20:24:51,765 - #3 {
INFO  20:24:51,765 - #16 int
INFO  20:24:51,765 - #16 a
INFO  20:24:51,765 - #5 ;
INFO  20:24:51,765 - #16 char
INFO  20:24:51,765 - #16 b
INFO  20:24:51,765 - #5 ;
INFO  20:24:51,765 - #4 }
INFO  20:24:51,765 - #3 {
INFO  20:24:51,766 - #4 }
