INFO  16:16:22,099 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  16:16:22,130 - #2 program
INFO  16:16:22,131 - #16 test302
INFO  16:16:22,131 - #48 const
INFO  16:16:22,131 - #16 int
INFO  16:16:22,131 - #16 jedan
INFO  16:16:22,131 - #13 =
INFO  16:16:22,132 - #15 1
INFO  16:16:22,132 - #5 ;
INFO  16:16:22,132 - #16 int
INFO  16:16:22,133 - #16 i
INFO  16:16:22,133 - #5 ;
INFO  16:16:22,133 - #16 bool
INFO  16:16:22,133 - #16 ibool
INFO  16:16:22,133 - #5 ;
INFO  16:16:22,133 - #16 int
INFO  16:16:22,133 - #16 niz2
INFO  16:16:22,133 - #5 ;
INFO  16:16:22,133 - #49 record
INFO  16:16:22,133 - #16 Test
INFO  16:16:22,133 - #3 {
INFO  16:16:22,134 - #16 int
INFO  16:16:22,134 - #16 niz
INFO  16:16:22,134 - #50 [
INFO  16:16:22,134 - #51 ]
INFO  16:16:22,134 - #5 ;
INFO  16:16:22,134 - #16 int
INFO  16:16:22,134 - #16 a
INFO  16:16:22,134 - #5 ;
INFO  16:16:22,134 - #4 }
INFO  16:16:22,135 - #16 Test
INFO  16:16:22,135 - #16 t1
INFO  16:16:22,135 - #8 ,
INFO  16:16:22,135 - #16 t2
INFO  16:16:22,135 - #5 ;
INFO  16:16:22,136 - #3 {
INFO  16:16:22,136 - #16 int
INFO  16:16:22,136 - #16 sum
INFO  16:16:22,136 - #6 (
INFO  16:16:22,137 - #16 int
INFO  16:16:22,137 - #16 z
INFO  16:16:22,137 - #8 ,
INFO  16:16:22,137 - #16 int
INFO  16:16:22,137 - #16 d
INFO  16:16:22,137 - #7 )
INFO  16:16:22,137 - #3 {
INFO  16:16:22,138 - #10 return
INFO  16:16:22,138 - #16 z
INFO  16:16:22,138 - #11 +
INFO  16:16:22,139 - #16 d
INFO  16:16:22,140 - #5 ;
INFO  16:16:22,140 - #4 }
INFO  16:16:22,141 - #16 int
INFO  16:16:22,141 - #16 inkrement
INFO  16:16:22,141 - #6 (
INFO  16:16:22,141 - #16 int
INFO  16:16:22,141 - #16 a
INFO  16:16:22,141 - #8 ,
INFO  16:16:22,141 - #16 int
INFO  16:16:22,141 - #16 inc
INFO  16:16:22,141 - #7 )
INFO  16:16:22,141 - #16 int
INFO  16:16:22,142 - #16 pom
INFO  16:16:22,142 - #5 ;
INFO  16:16:22,142 - #3 {
INFO  16:16:22,142 - #19 if
INFO  16:16:22,142 - #6 (
INFO  16:16:22,142 - #16 inc
INFO  16:16:22,142 - #22 ==
INFO  16:16:22,145 - #16 jedan
INFO  16:16:22,145 - #7 )
INFO  16:16:22,147 - #16 pom
INFO  16:16:22,147 - #13 =
INFO  16:16:22,147 - #15 1
INFO  16:16:22,147 - #5 ;
INFO  16:16:22,147 - #20 else
INFO  16:16:22,147 - #19 if
INFO  16:16:22,147 - #6 (
INFO  16:16:22,147 - #16 inc
INFO  16:16:22,147 - #22 ==
INFO  16:16:22,148 - #15 2
INFO  16:16:22,148 - #7 )
INFO  16:16:22,148 - #16 pom
INFO  16:16:22,148 - #13 =
INFO  16:16:22,148 - #16 a
INFO  16:16:22,148 - #5 ;
INFO  16:16:22,148 - #10 return
INFO  16:16:22,148 - #16 sum
INFO  16:16:22,148 - #6 (
INFO  16:16:22,148 - #16 a
INFO  16:16:22,148 - #8 ,
INFO  16:16:22,149 - #16 pom
INFO  16:16:22,149 - #7 )
INFO  16:16:22,150 - #5 ;
INFO  16:16:22,150 - #4 }
INFO  16:16:22,150 - #16 bool
INFO  16:16:22,150 - #16 verify
INFO  16:16:22,150 - #6 (
INFO  16:16:22,150 - #7 )
INFO  16:16:22,150 - #3 {
INFO  16:16:22,151 - #9 print
INFO  16:16:22,151 - #6 (
INFO  16:16:22,151 - #17 'v'
INFO  16:16:22,151 - #7 )
INFO  16:16:22,151 - #5 ;
INFO  16:16:22,151 - #10 return
INFO  16:16:22,151 - #18 false
INFO  16:16:22,151 - #5 ;
INFO  16:16:22,151 - #4 }
INFO  16:16:22,151 - #14 void
INFO  16:16:22,151 - #16 main
INFO  16:16:22,151 - #6 (
INFO  16:16:22,152 - #7 )
INFO  16:16:22,152 - #3 {
INFO  16:16:22,152 - #19 if
INFO  16:16:22,152 - #6 (
INFO  16:16:22,152 - #15 1
INFO  16:16:22,152 - #23 !=
INFO  16:16:22,152 - #15 1
INFO  16:16:22,152 - #7 )
INFO  16:16:22,152 - #9 print
INFO  16:16:22,152 - #6 (
INFO  16:16:22,152 - #12 -
INFO  16:16:22,152 - #15 6
INFO  16:16:22,152 - #7 )
INFO  16:16:22,152 - #5 ;
INFO  16:16:22,153 - #20 else
INFO  16:16:22,153 - #9 print
INFO  16:16:22,153 - #6 (
INFO  16:16:22,153 - #15 0
INFO  16:16:22,153 - #7 )
INFO  16:16:22,153 - #5 ;
INFO  16:16:22,153 - #16 ibool
INFO  16:16:22,153 - #13 =
INFO  16:16:22,153 - #18 false
INFO  16:16:22,153 - #5 ;
INFO  16:16:22,153 - #16 i
INFO  16:16:22,153 - #13 =
INFO  16:16:22,153 - #15 0
INFO  16:16:22,153 - #5 ;
INFO  16:16:22,153 - #34 do
INFO  16:16:22,153 - #3 {
INFO  16:16:22,153 - #19 if
INFO  16:16:22,154 - #6 (
INFO  16:16:22,154 - #16 i
INFO  16:16:22,154 - #22 ==
INFO  16:16:22,154 - #15 2
INFO  16:16:22,154 - #7 )
INFO  16:16:22,154 - #16 ibool
INFO  16:16:22,154 - #13 =
INFO  16:16:22,154 - #18 true
INFO  16:16:22,154 - #5 ;
INFO  16:16:22,154 - #16 i
INFO  16:16:22,154 - #46 ++
INFO  16:16:22,154 - #5 ;
INFO  16:16:22,154 - #4 }
INFO  16:16:22,154 - #35 while
INFO  16:16:22,155 - #6 (
INFO  16:16:22,155 - #16 i
INFO  16:16:22,155 - #26 <
INFO  16:16:22,155 - #15 5
INFO  16:16:22,155 - #7 )
INFO  16:16:22,155 - #5 ;
INFO  16:16:22,155 - #19 if
INFO  16:16:22,155 - #6 (
INFO  16:16:22,155 - #16 ibool
INFO  16:16:22,155 - #7 )
INFO  16:16:22,155 - #19 if
INFO  16:16:22,155 - #6 (
INFO  16:16:22,156 - #16 i
INFO  16:16:22,156 - #22 ==
INFO  16:16:22,156 - #15 5
INFO  16:16:22,156 - #7 )
INFO  16:16:22,156 - #9 print
INFO  16:16:22,156 - #6 (
INFO  16:16:22,156 - #15 1
INFO  16:16:22,156 - #7 )
INFO  16:16:22,156 - #5 ;
INFO  16:16:22,156 - #20 else
INFO  16:16:22,156 - #9 print
INFO  16:16:22,156 - #6 (
INFO  16:16:22,156 - #12 -
INFO  16:16:22,156 - #15 1
INFO  16:16:22,156 - #7 )
INFO  16:16:22,156 - #5 ;
INFO  16:16:22,156 - #16 t1
INFO  16:16:22,156 - #13 =
INFO  16:16:22,156 - #36 new
INFO  16:16:22,156 - #16 Test
INFO  16:16:22,156 - #5 ;
INFO  16:16:22,156 - #16 t1
INFO  16:16:22,156 - #43 .
INFO  16:16:22,156 - #16 a
INFO  16:16:22,156 - #13 =
INFO  16:16:22,156 - #15 2
INFO  16:16:22,157 - #5 ;
INFO  16:16:22,157 - #16 t1
INFO  16:16:22,157 - #43 .
INFO  16:16:22,157 - #16 niz
INFO  16:16:22,157 - #13 =
INFO  16:16:22,157 - #36 new
INFO  16:16:22,157 - #16 int
INFO  16:16:22,157 - #50 [
INFO  16:16:22,157 - #15 3
INFO  16:16:22,157 - #51 ]
INFO  16:16:22,157 - #5 ;
INFO  16:16:22,157 - #16 t1
INFO  16:16:22,157 - #43 .
INFO  16:16:22,157 - #16 niz
INFO  16:16:22,157 - #50 [
INFO  16:16:22,157 - #15 0
INFO  16:16:22,157 - #51 ]
INFO  16:16:22,157 - #13 =
INFO  16:16:22,157 - #15 1
INFO  16:16:22,157 - #28 *
INFO  16:16:22,157 - #16 t1
INFO  16:16:22,158 - #43 .
INFO  16:16:22,158 - #16 a
INFO  16:16:22,158 - #5 ;
INFO  16:16:22,158 - #16 t1
INFO  16:16:22,158 - #43 .
INFO  16:16:22,158 - #16 niz
INFO  16:16:22,158 - #50 [
INFO  16:16:22,158 - #15 1
INFO  16:16:22,158 - #51 ]
INFO  16:16:22,158 - #13 =
INFO  16:16:22,158 - #15 2
INFO  16:16:22,158 - #28 *
INFO  16:16:22,158 - #16 t1
INFO  16:16:22,158 - #43 .
INFO  16:16:22,158 - #16 a
INFO  16:16:22,158 - #5 ;
INFO  16:16:22,158 - #16 t1
INFO  16:16:22,158 - #43 .
INFO  16:16:22,158 - #16 niz
INFO  16:16:22,158 - #50 [
INFO  16:16:22,159 - #15 2
INFO  16:16:22,159 - #51 ]
INFO  16:16:22,159 - #13 =
INFO  16:16:22,159 - #16 sum
INFO  16:16:22,159 - #6 (
INFO  16:16:22,159 - #16 t1
INFO  16:16:22,159 - #43 .
INFO  16:16:22,159 - #16 niz
INFO  16:16:22,159 - #50 [
INFO  16:16:22,159 - #15 1
INFO  16:16:22,159 - #51 ]
INFO  16:16:22,159 - #8 ,
INFO  16:16:22,159 - #16 t1
INFO  16:16:22,159 - #43 .
INFO  16:16:22,159 - #16 niz
INFO  16:16:22,159 - #50 [
INFO  16:16:22,159 - #15 0
INFO  16:16:22,159 - #51 ]
INFO  16:16:22,159 - #7 )
INFO  16:16:22,159 - #28 *
INFO  16:16:22,159 - #16 t1
INFO  16:16:22,159 - #43 .
INFO  16:16:22,159 - #16 a
INFO  16:16:22,159 - #11 +
INFO  16:16:22,159 - #15 1
INFO  16:16:22,159 - #5 ;
INFO  16:16:22,160 - #19 if
INFO  16:16:22,160 - #6 (
INFO  16:16:22,160 - #16 verify
INFO  16:16:22,160 - #6 (
INFO  16:16:22,160 - #7 )
INFO  16:16:22,160 - #45 ||
INFO  16:16:22,160 - #16 t1
INFO  16:16:22,160 - #43 .
INFO  16:16:22,160 - #16 niz
INFO  16:16:22,160 - #50 [
INFO  16:16:22,160 - #15 2
INFO  16:16:22,160 - #51 ]
INFO  16:16:22,160 - #22 ==
INFO  16:16:22,160 - #15 4
INFO  16:16:22,160 - #7 )
INFO  16:16:22,160 - #9 print
INFO  16:16:22,160 - #6 (
INFO  16:16:22,160 - #16 ord
INFO  16:16:22,160 - #6 (
INFO  16:16:22,160 - #17 'A'
INFO  16:16:22,160 - #7 )
INFO  16:16:22,160 - #7 )
INFO  16:16:22,160 - #5 ;
INFO  16:16:22,160 - #20 else
INFO  16:16:22,160 - #9 print
INFO  16:16:22,160 - #6 (
INFO  16:16:22,160 - #16 ord
INFO  16:16:22,160 - #6 (
INFO  16:16:22,160 - #17 'a'
INFO  16:16:22,160 - #7 )
INFO  16:16:22,160 - #7 )
INFO  16:16:22,160 - #5 ;
INFO  16:16:22,160 - #9 print
INFO  16:16:22,161 - #6 (
INFO  16:16:22,161 - #16 eol
INFO  16:16:22,161 - #7 )
INFO  16:16:22,161 - #5 ;
INFO  16:16:22,161 - #16 i
INFO  16:16:22,161 - #13 =
INFO  16:16:22,161 - #15 0
INFO  16:16:22,161 - #5 ;
INFO  16:16:22,161 - #34 do
INFO  16:16:22,161 - #3 {
INFO  16:16:22,161 - #19 if
INFO  16:16:22,161 - #6 (
INFO  16:16:22,161 - #16 i
INFO  16:16:22,161 - #22 ==
INFO  16:16:22,161 - #15 3
INFO  16:16:22,161 - #7 )
INFO  16:16:22,161 - #3 {
INFO  16:16:22,161 - #16 i
INFO  16:16:22,161 - #46 ++
INFO  16:16:22,161 - #5 ;
INFO  16:16:22,161 - #39 continue
INFO  16:16:22,161 - #5 ;
INFO  16:16:22,161 - #4 }
INFO  16:16:22,161 - #19 if
INFO  16:16:22,162 - #6 (
INFO  16:16:22,162 - #16 i
INFO  16:16:22,162 - #22 ==
INFO  16:16:22,162 - #15 4
INFO  16:16:22,162 - #7 )
INFO  16:16:22,162 - #31 break
INFO  16:16:22,162 - #5 ;
INFO  16:16:22,162 - #16 i
INFO  16:16:22,162 - #13 =
INFO  16:16:22,162 - #16 inkrement
INFO  16:16:22,162 - #6 (
INFO  16:16:22,162 - #16 i
INFO  16:16:22,162 - #8 ,
INFO  16:16:22,162 - #15 1
INFO  16:16:22,162 - #7 )
INFO  16:16:22,162 - #5 ;
INFO  16:16:22,162 - #4 }
INFO  16:16:22,162 - #35 while
INFO  16:16:22,162 - #6 (
INFO  16:16:22,162 - #16 i
INFO  16:16:22,162 - #26 <
INFO  16:16:22,162 - #15 10
INFO  16:16:22,162 - #7 )
INFO  16:16:22,163 - #5 ;
INFO  16:16:22,163 - #19 if
INFO  16:16:22,163 - #6 (
INFO  16:16:22,163 - #16 i
INFO  16:16:22,163 - #22 ==
INFO  16:16:22,163 - #15 3
INFO  16:16:22,163 - #44 &&
INFO  16:16:22,163 - #16 verify
INFO  16:16:22,163 - #6 (
INFO  16:16:22,163 - #7 )
INFO  16:16:22,163 - #7 )
INFO  16:16:22,163 - #9 print
INFO  16:16:22,163 - #6 (
INFO  16:16:22,163 - #12 -
INFO  16:16:22,163 - #15 4
INFO  16:16:22,163 - #7 )
INFO  16:16:22,163 - #5 ;
INFO  16:16:22,163 - #20 else
INFO  16:16:22,163 - #9 print
INFO  16:16:22,163 - #6 (
INFO  16:16:22,163 - #15 4
INFO  16:16:22,163 - #7 )
INFO  16:16:22,163 - #5 ;
INFO  16:16:22,163 - #9 print
INFO  16:16:22,163 - #6 (
INFO  16:16:22,163 - #16 eol
INFO  16:16:22,163 - #7 )
INFO  16:16:22,163 - #5 ;
INFO  16:16:22,163 - #9 print
INFO  16:16:22,163 - #6 (
INFO  16:16:22,163 - #16 sum
INFO  16:16:22,163 - #6 (
INFO  16:16:22,163 - #16 sum
INFO  16:16:22,163 - #6 (
INFO  16:16:22,163 - #16 t1
INFO  16:16:22,163 - #43 .
INFO  16:16:22,163 - #16 niz
INFO  16:16:22,163 - #50 [
INFO  16:16:22,163 - #15 0
INFO  16:16:22,163 - #51 ]
INFO  16:16:22,163 - #8 ,
INFO  16:16:22,164 - #16 t1
INFO  16:16:22,164 - #43 .
INFO  16:16:22,164 - #16 niz
INFO  16:16:22,164 - #50 [
INFO  16:16:22,164 - #15 1
INFO  16:16:22,164 - #51 ]
INFO  16:16:22,164 - #7 )
INFO  16:16:22,164 - #8 ,
INFO  16:16:22,164 - #16 t1
INFO  16:16:22,164 - #43 .
INFO  16:16:22,164 - #16 niz
INFO  16:16:22,164 - #50 [
INFO  16:16:22,164 - #15 2
INFO  16:16:22,164 - #51 ]
INFO  16:16:22,164 - #7 )
INFO  16:16:22,164 - #7 )
INFO  16:16:22,164 - #5 ;
INFO  16:16:22,164 - #9 print
INFO  16:16:22,164 - #6 (
INFO  16:16:22,164 - #16 eol
INFO  16:16:22,164 - #7 )
INFO  16:16:22,164 - #5 ;
INFO  16:16:22,164 - #9 print
INFO  16:16:22,164 - #6 (
INFO  16:16:22,164 - #16 inkrement
INFO  16:16:22,164 - #6 (
INFO  16:16:22,164 - #16 t1
INFO  16:16:22,164 - #43 .
INFO  16:16:22,164 - #16 niz
INFO  16:16:22,164 - #50 [
INFO  16:16:22,164 - #15 2
INFO  16:16:22,164 - #51 ]
INFO  16:16:22,164 - #8 ,
INFO  16:16:22,164 - #15 2
INFO  16:16:22,164 - #7 )
INFO  16:16:22,164 - #7 )
INFO  16:16:22,164 - #5 ;
INFO  16:16:22,164 - #16 t2
INFO  16:16:22,164 - #13 =
INFO  16:16:22,164 - #36 new
INFO  16:16:22,164 - #16 Test
INFO  16:16:22,164 - #5 ;
INFO  16:16:22,164 - #16 t2
INFO  16:16:22,164 - #43 .
INFO  16:16:22,164 - #16 a
INFO  16:16:22,164 - #13 =
INFO  16:16:22,164 - #15 3
INFO  16:16:22,165 - #5 ;
INFO  16:16:22,165 - #16 t2
INFO  16:16:22,165 - #43 .
INFO  16:16:22,165 - #16 niz
INFO  16:16:22,165 - #13 =
INFO  16:16:22,165 - #36 new
INFO  16:16:22,165 - #16 int
INFO  16:16:22,165 - #50 [
INFO  16:16:22,165 - #15 3
INFO  16:16:22,165 - #51 ]
INFO  16:16:22,165 - #5 ;
INFO  16:16:22,165 - #16 i
INFO  16:16:22,165 - #13 =
INFO  16:16:22,165 - #15 0
INFO  16:16:22,165 - #5 ;
INFO  16:16:22,165 - #34 do
INFO  16:16:22,165 - #3 {
INFO  16:16:22,165 - #16 t2
INFO  16:16:22,165 - #43 .
INFO  16:16:22,165 - #16 niz
INFO  16:16:22,165 - #50 [
INFO  16:16:22,165 - #16 i
INFO  16:16:22,165 - #51 ]
INFO  16:16:22,165 - #13 =
INFO  16:16:22,165 - #16 t1
INFO  16:16:22,165 - #43 .
INFO  16:16:22,165 - #16 niz
INFO  16:16:22,165 - #50 [
INFO  16:16:22,165 - #16 i
INFO  16:16:22,165 - #51 ]
INFO  16:16:22,165 - #28 *
INFO  16:16:22,165 - #15 2
INFO  16:16:22,165 - #28 *
INFO  16:16:22,165 - #16 t2
INFO  16:16:22,165 - #43 .
INFO  16:16:22,165 - #16 a
INFO  16:16:22,165 - #5 ;
INFO  16:16:22,165 - #16 i
INFO  16:16:22,165 - #46 ++
INFO  16:16:22,165 - #5 ;
INFO  16:16:22,165 - #4 }
INFO  16:16:22,165 - #35 while
INFO  16:16:22,165 - #6 (
INFO  16:16:22,165 - #16 i
INFO  16:16:22,165 - #26 <
INFO  16:16:22,165 - #15 3
INFO  16:16:22,165 - #7 )
INFO  16:16:22,165 - #5 ;
INFO  16:16:22,165 - #9 print
INFO  16:16:22,166 - #6 (
INFO  16:16:22,166 - #16 t2
INFO  16:16:22,166 - #43 .
INFO  16:16:22,166 - #16 niz
INFO  16:16:22,166 - #50 [
INFO  16:16:22,166 - #15 0
INFO  16:16:22,166 - #51 ]
INFO  16:16:22,166 - #7 )
INFO  16:16:22,166 - #5 ;
INFO  16:16:22,166 - #9 print
INFO  16:16:22,166 - #6 (
INFO  16:16:22,166 - #16 t2
INFO  16:16:22,166 - #43 .
INFO  16:16:22,166 - #16 niz
INFO  16:16:22,166 - #50 [
INFO  16:16:22,166 - #15 1
INFO  16:16:22,166 - #51 ]
INFO  16:16:22,166 - #7 )
INFO  16:16:22,166 - #5 ;
INFO  16:16:22,166 - #9 print
INFO  16:16:22,166 - #6 (
INFO  16:16:22,166 - #16 t2
INFO  16:16:22,166 - #43 .
INFO  16:16:22,166 - #16 niz
INFO  16:16:22,166 - #50 [
INFO  16:16:22,166 - #15 2
INFO  16:16:22,166 - #51 ]
INFO  16:16:22,166 - #7 )
INFO  16:16:22,166 - #5 ;
INFO  16:16:22,166 - #9 print
INFO  16:16:22,166 - #6 (
INFO  16:16:22,166 - #16 eol
INFO  16:16:22,166 - #7 )
INFO  16:16:22,166 - #5 ;
INFO  16:16:22,166 - #16 i
INFO  16:16:22,166 - #13 =
INFO  16:16:22,166 - #15 0
INFO  16:16:22,166 - #5 ;
INFO  16:16:22,166 - #16 niz2
INFO  16:16:22,166 - #13 =
INFO  16:16:22,166 - #15 0
INFO  16:16:22,166 - #5 ;
INFO  16:16:22,167 - #34 do
INFO  16:16:22,167 - #3 {
INFO  16:16:22,167 - #16 niz2
INFO  16:16:22,167 - #13 =
INFO  16:16:22,167 - #16 niz2
INFO  16:16:22,167 - #11 +
INFO  16:16:22,167 - #16 t1
INFO  16:16:22,167 - #43 .
INFO  16:16:22,167 - #16 niz
INFO  16:16:22,167 - #50 [
INFO  16:16:22,167 - #16 i
INFO  16:16:22,167 - #51 ]
INFO  16:16:22,167 - #28 *
INFO  16:16:22,167 - #16 t2
INFO  16:16:22,167 - #43 .
INFO  16:16:22,167 - #16 niz
INFO  16:16:22,167 - #50 [
INFO  16:16:22,167 - #16 i
INFO  16:16:22,167 - #51 ]
INFO  16:16:22,167 - #5 ;
INFO  16:16:22,167 - #16 i
INFO  16:16:22,167 - #46 ++
INFO  16:16:22,167 - #5 ;
INFO  16:16:22,167 - #4 }
INFO  16:16:22,167 - #35 while
INFO  16:16:22,167 - #6 (
INFO  16:16:22,167 - #16 i
INFO  16:16:22,167 - #26 <
INFO  16:16:22,167 - #15 3
INFO  16:16:22,167 - #7 )
INFO  16:16:22,167 - #5 ;
INFO  16:16:22,167 - #9 print
INFO  16:16:22,167 - #6 (
INFO  16:16:22,167 - #16 niz2
INFO  16:16:22,167 - #7 )
INFO  16:16:22,167 - #5 ;
INFO  16:16:22,167 - #9 print
INFO  16:16:22,167 - #6 (
INFO  16:16:22,167 - #16 eol
INFO  16:16:22,167 - #7 )
INFO  16:16:22,167 - #5 ;
INFO  16:16:22,167 - #4 }
INFO  16:16:22,167 - #4 }
INFO  16:16:22,176 - Trenutan tip konstante je:  int na liniji 5
INFO  16:16:22,176 - Deklarisana promenljiva i na liniji 7
INFO  16:16:22,176 - Deklarisana promenljiva ibool na liniji 8
INFO  16:16:22,176 - Deklarisana promenljiva niz2 na liniji 10
INFO  16:16:22,176 - Deklarisana je rekord :  Test na liniji 12
INFO  16:16:22,176 - Deklarisana promenljiva niz na liniji 13
INFO  16:16:22,176 - Deklarisana promenljiva a na liniji 14
INFO  16:16:22,176 - Deklarisana promenljiva t2 na liniji 17
INFO  16:16:22,176 - Deklarisana promenljiva t1 na liniji 17
INFO  16:16:22,176 - Obradjuje se funkcija sum na liniji 21
INFO  16:16:22,176 - Naveden argument d na liniji 21
INFO  16:16:22,176 - Naveden argument z na liniji 21
INFO  16:16:22,177 - Obradjuje se funkcija inkrement na liniji 26
INFO  16:16:22,177 - Naveden argument inc na liniji 26
INFO  16:16:22,177 - Naveden argument a na liniji 26
INFO  16:16:22,177 - Deklarisana promenljiva pom na liniji 27
INFO  16:16:22,177 - Pronadjen poziv funkcije sum na liniji 32
INFO  16:16:22,177 - Obradjuje se funkcija verify na liniji 35
INFO  16:16:22,177 - Obradjuje se funkcija main na liniji 40
INFO  16:16:22,177 - Pronadjen poziv funkcije sum na liniji 60
INFO  16:16:22,177 - Pronadjen poziv funkcije ord na liniji 61
INFO  16:16:22,177 - Pronadjen poziv funkcije ord na liniji 62
INFO  16:16:22,177 - Pronadjen poziv funkcije inkrement na liniji 73
INFO  16:16:22,178 - Pronadjen poziv funkcije sum na liniji 84
INFO  16:16:22,178 - Pronadjen poziv funkcije sum na liniji 84
INFO  16:16:22,178 - Pronadjen poziv funkcije inkrement na liniji 87
INFO  16:16:22,188 - Parsiranje uspesno zavrseno!
