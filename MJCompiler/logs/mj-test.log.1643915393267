INFO  20:08:26,536 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  20:08:26,573 - #2 program
INFO  20:08:26,574 - #16 test302
INFO  20:08:26,574 - #48 const
INFO  20:08:26,574 - #16 int
INFO  20:08:26,574 - #16 jedan
INFO  20:08:26,575 - #13 =
INFO  20:08:26,575 - #15 1
INFO  20:08:26,575 - #5 ;
INFO  20:08:26,575 - #16 int
INFO  20:08:26,576 - #16 i
INFO  20:08:26,576 - #5 ;
INFO  20:08:26,576 - #16 bool
INFO  20:08:26,577 - #16 ibool
INFO  20:08:26,577 - #5 ;
INFO  20:08:26,577 - #16 int
INFO  20:08:26,577 - #16 niz2
INFO  20:08:26,577 - #5 ;
INFO  20:08:26,577 - #49 record
INFO  20:08:26,577 - #16 Test
INFO  20:08:26,577 - #3 {
INFO  20:08:26,578 - #16 int
INFO  20:08:26,578 - #16 niz
INFO  20:08:26,578 - #50 [
INFO  20:08:26,578 - #51 ]
INFO  20:08:26,578 - #5 ;
INFO  20:08:26,578 - #16 int
INFO  20:08:26,578 - #16 a
INFO  20:08:26,578 - #5 ;
INFO  20:08:26,578 - #4 }
INFO  20:08:26,579 - #16 Test
INFO  20:08:26,579 - #16 t1
INFO  20:08:26,579 - #8 ,
INFO  20:08:26,579 - #16 t2
INFO  20:08:26,579 - #5 ;
INFO  20:08:26,580 - #3 {
INFO  20:08:26,580 - #16 int
INFO  20:08:26,581 - #16 sum
INFO  20:08:26,581 - #6 (
INFO  20:08:26,581 - #16 int
INFO  20:08:26,581 - #16 z
INFO  20:08:26,581 - #8 ,
INFO  20:08:26,581 - #16 int
INFO  20:08:26,581 - #16 d
INFO  20:08:26,581 - #7 )
INFO  20:08:26,582 - #3 {
INFO  20:08:26,583 - #10 return
INFO  20:08:26,583 - #16 z
INFO  20:08:26,583 - #11 +
INFO  20:08:26,584 - #16 d
INFO  20:08:26,585 - #5 ;
INFO  20:08:26,585 - #4 }
INFO  20:08:26,586 - #16 int
INFO  20:08:26,586 - #16 inkrement
INFO  20:08:26,586 - #6 (
INFO  20:08:26,586 - #16 int
INFO  20:08:26,586 - #16 a
INFO  20:08:26,586 - #8 ,
INFO  20:08:26,586 - #16 int
INFO  20:08:26,586 - #16 inc
INFO  20:08:26,586 - #7 )
INFO  20:08:26,586 - #16 int
INFO  20:08:26,586 - #16 pom
INFO  20:08:26,586 - #5 ;
INFO  20:08:26,587 - #3 {
INFO  20:08:26,587 - #19 if
INFO  20:08:26,587 - #6 (
INFO  20:08:26,587 - #16 inc
INFO  20:08:26,587 - #22 ==
INFO  20:08:26,591 - #16 jedan
INFO  20:08:26,591 - #7 )
INFO  20:08:26,593 - #16 pom
INFO  20:08:26,593 - #13 =
INFO  20:08:26,593 - #15 1
INFO  20:08:26,594 - #5 ;
INFO  20:08:26,594 - #20 else
INFO  20:08:26,594 - #19 if
INFO  20:08:26,594 - #6 (
INFO  20:08:26,594 - #16 inc
INFO  20:08:26,594 - #22 ==
INFO  20:08:26,594 - #15 2
INFO  20:08:26,594 - #7 )
INFO  20:08:26,594 - #16 pom
INFO  20:08:26,595 - #13 =
INFO  20:08:26,595 - #16 a
INFO  20:08:26,595 - #5 ;
INFO  20:08:26,595 - #10 return
INFO  20:08:26,596 - #16 sum
INFO  20:08:26,596 - #6 (
INFO  20:08:26,597 - #16 a
INFO  20:08:26,597 - #8 ,
INFO  20:08:26,597 - #16 pom
INFO  20:08:26,597 - #7 )
INFO  20:08:26,598 - #5 ;
INFO  20:08:26,598 - #4 }
INFO  20:08:26,598 - #16 bool
INFO  20:08:26,598 - #16 verify
INFO  20:08:26,598 - #6 (
INFO  20:08:26,598 - #7 )
INFO  20:08:26,598 - #3 {
INFO  20:08:26,599 - #9 print
INFO  20:08:26,599 - #6 (
INFO  20:08:26,599 - #17 'v'
INFO  20:08:26,599 - #7 )
INFO  20:08:26,599 - #5 ;
INFO  20:08:26,599 - #10 return
INFO  20:08:26,599 - #18 false
INFO  20:08:26,599 - #5 ;
INFO  20:08:26,599 - #4 }
INFO  20:08:26,599 - #14 void
INFO  20:08:26,599 - #16 main
INFO  20:08:26,600 - #6 (
INFO  20:08:26,600 - #7 )
INFO  20:08:26,600 - #3 {
INFO  20:08:26,600 - #19 if
INFO  20:08:26,600 - #6 (
INFO  20:08:26,600 - #15 1
INFO  20:08:26,600 - #23 !=
INFO  20:08:26,600 - #15 1
INFO  20:08:26,600 - #7 )
INFO  20:08:26,601 - #9 print
INFO  20:08:26,601 - #6 (
INFO  20:08:26,601 - #12 -
INFO  20:08:26,601 - #15 6
INFO  20:08:26,601 - #7 )
INFO  20:08:26,601 - #5 ;
INFO  20:08:26,601 - #20 else
INFO  20:08:26,601 - #9 print
INFO  20:08:26,601 - #6 (
INFO  20:08:26,601 - #15 0
INFO  20:08:26,602 - #7 )
INFO  20:08:26,602 - #5 ;
INFO  20:08:26,602 - #16 ibool
INFO  20:08:26,602 - #13 =
INFO  20:08:26,602 - #18 false
INFO  20:08:26,602 - #5 ;
INFO  20:08:26,602 - #16 i
INFO  20:08:26,602 - #13 =
INFO  20:08:26,602 - #15 0
INFO  20:08:26,602 - #5 ;
INFO  20:08:26,602 - #34 do
INFO  20:08:26,602 - #3 {
INFO  20:08:26,603 - #19 if
INFO  20:08:26,603 - #6 (
INFO  20:08:26,603 - #16 i
INFO  20:08:26,603 - #22 ==
INFO  20:08:26,603 - #15 2
INFO  20:08:26,603 - #7 )
INFO  20:08:26,603 - #16 ibool
INFO  20:08:26,603 - #13 =
INFO  20:08:26,603 - #18 true
INFO  20:08:26,603 - #5 ;
INFO  20:08:26,603 - #16 i
INFO  20:08:26,603 - #46 ++
INFO  20:08:26,603 - #5 ;
INFO  20:08:26,603 - #4 }
INFO  20:08:26,603 - #35 while
INFO  20:08:26,604 - #6 (
INFO  20:08:26,604 - #16 i
INFO  20:08:26,604 - #26 <
INFO  20:08:26,604 - #15 5
INFO  20:08:26,606 - #7 )
INFO  20:08:26,606 - #5 ;
INFO  20:08:26,606 - #19 if
INFO  20:08:26,606 - #6 (
INFO  20:08:26,606 - #16 ibool
INFO  20:08:26,606 - #7 )
INFO  20:08:26,606 - #19 if
INFO  20:08:26,606 - #6 (
INFO  20:08:26,606 - #16 i
INFO  20:08:26,606 - #22 ==
INFO  20:08:26,606 - #15 5
INFO  20:08:26,606 - #7 )
INFO  20:08:26,606 - #9 print
INFO  20:08:26,606 - #6 (
INFO  20:08:26,606 - #15 1
INFO  20:08:26,606 - #7 )
INFO  20:08:26,606 - #5 ;
INFO  20:08:26,606 - #20 else
INFO  20:08:26,606 - #9 print
INFO  20:08:26,606 - #6 (
INFO  20:08:26,606 - #12 -
INFO  20:08:26,606 - #15 1
INFO  20:08:26,607 - #7 )
INFO  20:08:26,607 - #5 ;
INFO  20:08:26,607 - #16 t1
INFO  20:08:26,607 - #13 =
INFO  20:08:26,607 - #36 new
INFO  20:08:26,607 - #16 Test
INFO  20:08:26,607 - #5 ;
INFO  20:08:26,607 - #16 t1
INFO  20:08:26,607 - #43 .
INFO  20:08:26,607 - #16 a
INFO  20:08:26,607 - #13 =
INFO  20:08:26,607 - #15 2
INFO  20:08:26,607 - #5 ;
INFO  20:08:26,607 - #16 t1
INFO  20:08:26,607 - #43 .
INFO  20:08:26,607 - #16 niz
INFO  20:08:26,607 - #13 =
INFO  20:08:26,607 - #36 new
INFO  20:08:26,607 - #16 int
INFO  20:08:26,607 - #50 [
INFO  20:08:26,607 - #15 3
INFO  20:08:26,607 - #51 ]
INFO  20:08:26,608 - #5 ;
INFO  20:08:26,608 - #16 t1
INFO  20:08:26,608 - #43 .
INFO  20:08:26,608 - #16 niz
INFO  20:08:26,608 - #50 [
INFO  20:08:26,608 - #15 0
INFO  20:08:26,608 - #51 ]
INFO  20:08:26,608 - #13 =
INFO  20:08:26,608 - #15 1
INFO  20:08:26,608 - #28 *
INFO  20:08:26,608 - #16 t1
INFO  20:08:26,609 - #43 .
INFO  20:08:26,609 - #16 a
INFO  20:08:26,609 - #5 ;
INFO  20:08:26,609 - #16 t1
INFO  20:08:26,609 - #43 .
INFO  20:08:26,609 - #16 niz
INFO  20:08:26,609 - #50 [
INFO  20:08:26,609 - #15 1
INFO  20:08:26,609 - #51 ]
INFO  20:08:26,609 - #13 =
INFO  20:08:26,609 - #15 2
INFO  20:08:26,609 - #28 *
INFO  20:08:26,609 - #16 t1
INFO  20:08:26,609 - #43 .
INFO  20:08:26,609 - #16 a
INFO  20:08:26,609 - #5 ;
INFO  20:08:26,609 - #16 t1
INFO  20:08:26,609 - #43 .
INFO  20:08:26,609 - #16 niz
INFO  20:08:26,609 - #50 [
INFO  20:08:26,609 - #15 2
INFO  20:08:26,609 - #51 ]
INFO  20:08:26,610 - #13 =
INFO  20:08:26,610 - #16 sum
INFO  20:08:26,610 - #6 (
INFO  20:08:26,610 - #16 t1
INFO  20:08:26,610 - #43 .
INFO  20:08:26,610 - #16 niz
INFO  20:08:26,610 - #50 [
INFO  20:08:26,610 - #15 1
INFO  20:08:26,610 - #51 ]
INFO  20:08:26,610 - #8 ,
INFO  20:08:26,610 - #16 t1
INFO  20:08:26,610 - #43 .
INFO  20:08:26,610 - #16 niz
INFO  20:08:26,610 - #50 [
INFO  20:08:26,610 - #15 0
INFO  20:08:26,610 - #51 ]
INFO  20:08:26,610 - #7 )
INFO  20:08:26,610 - #28 *
INFO  20:08:26,610 - #16 t1
INFO  20:08:26,610 - #43 .
INFO  20:08:26,610 - #16 a
INFO  20:08:26,610 - #11 +
INFO  20:08:26,611 - #15 1
INFO  20:08:26,611 - #5 ;
INFO  20:08:26,611 - #19 if
INFO  20:08:26,611 - #6 (
INFO  20:08:26,611 - #16 verify
INFO  20:08:26,611 - #6 (
INFO  20:08:26,611 - #7 )
ERROR 20:08:26,611 - 
Sintaksna greska na liniji 61
INFO  20:08:26,611 - #7 )
INFO  20:08:26,611 - #9 print
INFO  20:08:26,611 - #6 (
INFO  20:08:26,612 - #16 ord
ERROR 20:08:26,612 - Izvrsen oporavak do ) u liniji 61
INFO  20:08:26,612 - #6 (
INFO  20:08:26,612 - #17 'A'
INFO  20:08:26,612 - #7 )
INFO  20:08:26,612 - #7 )
INFO  20:08:26,613 - #5 ;
INFO  20:08:26,613 - #20 else
INFO  20:08:26,613 - #9 print
INFO  20:08:26,613 - #6 (
INFO  20:08:26,613 - #16 ord
INFO  20:08:26,613 - #6 (
INFO  20:08:26,613 - #17 'a'
INFO  20:08:26,613 - #7 )
INFO  20:08:26,613 - #7 )
INFO  20:08:26,613 - #5 ;
INFO  20:08:26,613 - #9 print
INFO  20:08:26,613 - #6 (
INFO  20:08:26,613 - #16 eol
INFO  20:08:26,613 - #7 )
INFO  20:08:26,613 - #5 ;
INFO  20:08:26,613 - #16 i
INFO  20:08:26,613 - #13 =
INFO  20:08:26,613 - #15 0
INFO  20:08:26,613 - #5 ;
INFO  20:08:26,613 - #34 do
INFO  20:08:26,613 - #3 {
INFO  20:08:26,613 - #19 if
INFO  20:08:26,613 - #6 (
INFO  20:08:26,613 - #16 i
INFO  20:08:26,613 - #22 ==
INFO  20:08:26,613 - #15 3
INFO  20:08:26,613 - #7 )
INFO  20:08:26,613 - #3 {
INFO  20:08:26,613 - #16 i
INFO  20:08:26,613 - #46 ++
INFO  20:08:26,613 - #5 ;
INFO  20:08:26,613 - #39 continue
INFO  20:08:26,613 - #5 ;
INFO  20:08:26,613 - #4 }
INFO  20:08:26,614 - #19 if
INFO  20:08:26,614 - #6 (
INFO  20:08:26,614 - #16 i
INFO  20:08:26,614 - #22 ==
INFO  20:08:26,614 - #15 4
INFO  20:08:26,614 - #7 )
INFO  20:08:26,614 - #31 break
INFO  20:08:26,614 - #5 ;
INFO  20:08:26,614 - #16 i
INFO  20:08:26,614 - #13 =
INFO  20:08:26,614 - #16 inkrement
INFO  20:08:26,614 - #6 (
INFO  20:08:26,615 - #16 i
INFO  20:08:26,615 - #8 ,
INFO  20:08:26,615 - #15 1
INFO  20:08:26,615 - #7 )
INFO  20:08:26,615 - #5 ;
INFO  20:08:26,615 - #4 }
INFO  20:08:26,615 - #35 while
INFO  20:08:26,615 - #6 (
INFO  20:08:26,615 - #16 i
INFO  20:08:26,615 - #26 <
INFO  20:08:26,615 - #15 10
INFO  20:08:26,615 - #7 )
INFO  20:08:26,615 - #5 ;
INFO  20:08:26,615 - #19 if
INFO  20:08:26,615 - #6 (
INFO  20:08:26,615 - #16 i
INFO  20:08:26,615 - #22 ==
INFO  20:08:26,615 - #15 3
INFO  20:08:26,615 - #44 &&
INFO  20:08:26,615 - #16 verify
INFO  20:08:26,615 - #6 (
INFO  20:08:26,615 - #7 )
ERROR 20:08:26,615 - 
Sintaksna greska na liniji 76
INFO  20:08:26,615 - #7 )
INFO  20:08:26,615 - #9 print
INFO  20:08:26,615 - #6 (
INFO  20:08:26,616 - #12 -
ERROR 20:08:26,616 - Izvrsen oporavak do ) u liniji 76
INFO  20:08:26,616 - #15 4
INFO  20:08:26,616 - #7 )
INFO  20:08:26,616 - #5 ;
INFO  20:08:26,616 - #20 else
INFO  20:08:26,616 - #9 print
INFO  20:08:26,616 - #6 (
INFO  20:08:26,616 - #15 4
INFO  20:08:26,616 - #7 )
INFO  20:08:26,616 - #5 ;
INFO  20:08:26,616 - #37 read
INFO  20:08:26,616 - #6 (
INFO  20:08:26,616 - #16 t1
INFO  20:08:26,616 - #43 .
INFO  20:08:26,616 - #16 niz
INFO  20:08:26,616 - #50 [
INFO  20:08:26,616 - #15 0
INFO  20:08:26,616 - #51 ]
INFO  20:08:26,616 - #7 )
INFO  20:08:26,616 - #5 ;
INFO  20:08:26,616 - #37 read
INFO  20:08:26,616 - #6 (
INFO  20:08:26,616 - #16 t1
INFO  20:08:26,616 - #43 .
INFO  20:08:26,616 - #16 niz
INFO  20:08:26,616 - #50 [
INFO  20:08:26,616 - #15 1
INFO  20:08:26,616 - #51 ]
INFO  20:08:26,616 - #7 )
INFO  20:08:26,616 - #5 ;
INFO  20:08:26,616 - #37 read
INFO  20:08:26,616 - #6 (
INFO  20:08:26,616 - #16 t1
INFO  20:08:26,616 - #43 .
INFO  20:08:26,616 - #16 niz
INFO  20:08:26,616 - #50 [
INFO  20:08:26,616 - #15 2
INFO  20:08:26,617 - #51 ]
INFO  20:08:26,617 - #7 )
INFO  20:08:26,617 - #5 ;
INFO  20:08:26,617 - #9 print
INFO  20:08:26,617 - #6 (
INFO  20:08:26,617 - #16 eol
INFO  20:08:26,617 - #7 )
INFO  20:08:26,617 - #5 ;
INFO  20:08:26,617 - #9 print
INFO  20:08:26,617 - #6 (
INFO  20:08:26,617 - #16 sum
INFO  20:08:26,617 - #6 (
INFO  20:08:26,617 - #16 sum
INFO  20:08:26,617 - #6 (
INFO  20:08:26,617 - #16 t1
INFO  20:08:26,617 - #43 .
INFO  20:08:26,617 - #16 niz
INFO  20:08:26,617 - #50 [
INFO  20:08:26,617 - #15 0
INFO  20:08:26,617 - #51 ]
INFO  20:08:26,617 - #8 ,
INFO  20:08:26,617 - #16 t1
INFO  20:08:26,617 - #43 .
INFO  20:08:26,617 - #16 niz
INFO  20:08:26,617 - #50 [
INFO  20:08:26,617 - #15 1
INFO  20:08:26,617 - #51 ]
INFO  20:08:26,617 - #7 )
INFO  20:08:26,617 - #8 ,
INFO  20:08:26,617 - #16 t1
INFO  20:08:26,617 - #43 .
INFO  20:08:26,617 - #16 niz
INFO  20:08:26,617 - #50 [
INFO  20:08:26,617 - #15 2
INFO  20:08:26,617 - #51 ]
INFO  20:08:26,617 - #7 )
INFO  20:08:26,617 - #7 )
INFO  20:08:26,617 - #5 ;
INFO  20:08:26,617 - #9 print
INFO  20:08:26,617 - #6 (
INFO  20:08:26,617 - #16 eol
INFO  20:08:26,617 - #7 )
INFO  20:08:26,617 - #5 ;
INFO  20:08:26,617 - #9 print
INFO  20:08:26,617 - #6 (
INFO  20:08:26,617 - #16 inkrement
INFO  20:08:26,617 - #6 (
INFO  20:08:26,617 - #16 t1
INFO  20:08:26,617 - #43 .
INFO  20:08:26,617 - #16 niz
INFO  20:08:26,618 - #50 [
INFO  20:08:26,618 - #15 2
INFO  20:08:26,618 - #51 ]
INFO  20:08:26,618 - #8 ,
INFO  20:08:26,618 - #15 2
INFO  20:08:26,618 - #7 )
INFO  20:08:26,618 - #7 )
INFO  20:08:26,618 - #5 ;
INFO  20:08:26,618 - #16 t2
INFO  20:08:26,618 - #13 =
INFO  20:08:26,618 - #36 new
INFO  20:08:26,618 - #16 Test
INFO  20:08:26,618 - #5 ;
INFO  20:08:26,618 - #16 t2
INFO  20:08:26,618 - #43 .
INFO  20:08:26,618 - #16 a
INFO  20:08:26,618 - #13 =
INFO  20:08:26,618 - #15 3
INFO  20:08:26,618 - #5 ;
INFO  20:08:26,618 - #16 t2
INFO  20:08:26,618 - #43 .
INFO  20:08:26,618 - #16 niz
INFO  20:08:26,618 - #13 =
INFO  20:08:26,618 - #36 new
INFO  20:08:26,618 - #16 int
INFO  20:08:26,618 - #50 [
INFO  20:08:26,618 - #15 3
INFO  20:08:26,618 - #51 ]
INFO  20:08:26,618 - #5 ;
INFO  20:08:26,618 - #16 i
INFO  20:08:26,618 - #13 =
INFO  20:08:26,618 - #15 0
INFO  20:08:26,618 - #5 ;
INFO  20:08:26,618 - #34 do
INFO  20:08:26,618 - #3 {
INFO  20:08:26,618 - #16 t2
INFO  20:08:26,618 - #43 .
INFO  20:08:26,618 - #16 niz
INFO  20:08:26,618 - #50 [
INFO  20:08:26,618 - #16 i
INFO  20:08:26,618 - #51 ]
INFO  20:08:26,618 - #13 =
INFO  20:08:26,618 - #16 t1
INFO  20:08:26,618 - #43 .
INFO  20:08:26,618 - #16 niz
INFO  20:08:26,618 - #50 [
INFO  20:08:26,618 - #16 i
INFO  20:08:26,618 - #51 ]
INFO  20:08:26,618 - #28 *
INFO  20:08:26,619 - #15 2
INFO  20:08:26,619 - #28 *
INFO  20:08:26,619 - #16 t2
INFO  20:08:26,619 - #43 .
INFO  20:08:26,619 - #16 a
INFO  20:08:26,619 - #5 ;
INFO  20:08:26,619 - #16 i
INFO  20:08:26,619 - #46 ++
INFO  20:08:26,619 - #5 ;
INFO  20:08:26,619 - #4 }
INFO  20:08:26,619 - #35 while
INFO  20:08:26,619 - #6 (
INFO  20:08:26,619 - #16 i
INFO  20:08:26,619 - #26 <
INFO  20:08:26,619 - #15 3
INFO  20:08:26,619 - #7 )
INFO  20:08:26,619 - #5 ;
INFO  20:08:26,620 - #9 print
INFO  20:08:26,620 - #6 (
INFO  20:08:26,623 - #16 t2
INFO  20:08:26,623 - #43 .
INFO  20:08:26,623 - #16 niz
INFO  20:08:26,623 - #50 [
INFO  20:08:26,623 - #15 0
INFO  20:08:26,623 - #51 ]
INFO  20:08:26,623 - #7 )
INFO  20:08:26,623 - #5 ;
INFO  20:08:26,623 - #9 print
INFO  20:08:26,624 - #6 (
INFO  20:08:26,624 - #16 t2
INFO  20:08:26,624 - #43 .
INFO  20:08:26,624 - #16 niz
INFO  20:08:26,624 - #50 [
INFO  20:08:26,624 - #15 1
INFO  20:08:26,624 - #51 ]
INFO  20:08:26,624 - #7 )
INFO  20:08:26,624 - #5 ;
INFO  20:08:26,624 - #9 print
INFO  20:08:26,624 - #6 (
INFO  20:08:26,624 - #16 t2
INFO  20:08:26,624 - #43 .
INFO  20:08:26,624 - #16 niz
INFO  20:08:26,624 - #50 [
INFO  20:08:26,624 - #15 2
INFO  20:08:26,624 - #51 ]
INFO  20:08:26,624 - #7 )
INFO  20:08:26,624 - #5 ;
INFO  20:08:26,624 - #9 print
INFO  20:08:26,624 - #6 (
INFO  20:08:26,624 - #16 eol
INFO  20:08:26,624 - #7 )
INFO  20:08:26,624 - #5 ;
INFO  20:08:26,624 - #16 i
INFO  20:08:26,624 - #13 =
INFO  20:08:26,624 - #15 0
INFO  20:08:26,624 - #5 ;
INFO  20:08:26,625 - #16 niz2
INFO  20:08:26,625 - #13 =
INFO  20:08:26,625 - #15 0
INFO  20:08:26,625 - #5 ;
INFO  20:08:26,625 - #34 do
INFO  20:08:26,625 - #3 {
INFO  20:08:26,625 - #16 niz2
INFO  20:08:26,625 - #13 =
INFO  20:08:26,625 - #16 niz2
INFO  20:08:26,625 - #11 +
INFO  20:08:26,625 - #16 t1
INFO  20:08:26,625 - #43 .
INFO  20:08:26,625 - #16 niz
INFO  20:08:26,625 - #50 [
INFO  20:08:26,625 - #16 i
INFO  20:08:26,625 - #51 ]
INFO  20:08:26,625 - #28 *
INFO  20:08:26,625 - #16 t2
INFO  20:08:26,625 - #43 .
INFO  20:08:26,625 - #16 niz
INFO  20:08:26,625 - #50 [
INFO  20:08:26,625 - #16 i
INFO  20:08:26,625 - #51 ]
INFO  20:08:26,625 - #5 ;
INFO  20:08:26,625 - #16 i
INFO  20:08:26,625 - #46 ++
INFO  20:08:26,625 - #5 ;
INFO  20:08:26,625 - #4 }
INFO  20:08:26,625 - #35 while
INFO  20:08:26,626 - #6 (
INFO  20:08:26,626 - #16 i
INFO  20:08:26,626 - #26 <
INFO  20:08:26,626 - #15 3
INFO  20:08:26,626 - #7 )
INFO  20:08:26,626 - #5 ;
INFO  20:08:26,626 - #9 print
INFO  20:08:26,626 - #6 (
INFO  20:08:26,626 - #16 niz2
INFO  20:08:26,626 - #7 )
INFO  20:08:26,626 - #5 ;
INFO  20:08:26,626 - #9 print
INFO  20:08:26,626 - #6 (
INFO  20:08:26,626 - #16 eol
INFO  20:08:26,626 - #7 )
INFO  20:08:26,626 - #5 ;
INFO  20:08:26,626 - #4 }
INFO  20:08:26,626 - #4 }
INFO  20:08:26,635 - Trenutan tip konstante je:  int na liniji 5
INFO  20:08:26,636 - Deklarisana promenljiva i na liniji 7
INFO  20:08:26,636 - Deklarisana promenljiva ibool na liniji 8
INFO  20:08:26,636 - Deklarisana promenljiva niz2 na liniji 10
INFO  20:08:26,636 - Deklarisana promenljiva niz na liniji 13
INFO  20:08:26,636 - Deklarisana promenljiva a na liniji 14
INFO  20:08:26,636 - Deklarisana je rekord :  Test na liniji 12
INFO  20:08:26,636 - Deklarisana promenljiva t2 na liniji 17
INFO  20:08:26,636 - Deklarisana promenljiva t1 na liniji 17
INFO  20:08:26,636 - Obradjuje se funkcija sum na liniji 21
INFO  20:08:26,636 - Naveden argument d na liniji 21
INFO  20:08:26,636 - Naveden argument z na liniji 21
INFO  20:08:26,636 - Obradjuje se funkcija inkrement na liniji 26
INFO  20:08:26,636 - Naveden argument inc na liniji 26
INFO  20:08:26,636 - Naveden argument a na liniji 26
INFO  20:08:26,636 - Deklarisana promenljiva pom na liniji 27
INFO  20:08:26,636 - Obradjuje se funkcija verify na liniji 35
INFO  20:08:26,636 - Obradjuje se funkcija main na liniji 40
ERROR 20:08:26,637 - Semanticka greska na liniji 56 nekompatibilni tipovi prilikom dodele!
ERROR 20:08:26,637 - Semanticka greska na liniji 57 nekompatibilni tipovi prilikom dodele!
ERROR 20:08:26,637 - Semanticka greska na liniji 58 nekompatibilni tipovi prilikom dodele!
ERROR 20:08:26,637 - Semanticka greska na liniji 59 nekompatibilni tipovi prilikom dodele!
ERROR 20:08:26,637 - Semanticka greska na liniji 60 nekompatibilni tipovi prilikom dodele!
ERROR 20:08:26,637 - Semanticka greska na liniji 61 print prima samo num, char ili bool!
ERROR 20:08:26,637 - Semanticka greska na liniji 62 print prima samo num, char ili bool!
ERROR 20:08:26,637 - Semanticka greska na liniji 79  t1 mora biti int, char ili bool!
ERROR 20:08:26,637 - Semanticka greska na liniji 80  t1 mora biti int, char ili bool!
ERROR 20:08:26,637 - Semanticka greska na liniji 81  t1 mora biti int, char ili bool!
ERROR 20:08:26,637 - Semanticka greska na liniji 84 print prima samo num, char ili bool!
ERROR 20:08:26,637 - Semanticka greska na liniji 87 print prima samo num, char ili bool!
ERROR 20:08:26,637 - Semanticka greska na liniji 90 nekompatibilni tipovi prilikom dodele!
ERROR 20:08:26,637 - Semanticka greska na liniji 91 nekompatibilni tipovi prilikom dodele!
ERROR 20:08:26,637 - Semanticka greska na liniji 97  t2 mora biti int, char ili bool!
ERROR 20:08:26,637 - Semanticka greska na liniji 98  t2 mora biti int, char ili bool!
ERROR 20:08:26,637 - Semanticka greska na liniji 99  t2 mora biti int, char ili bool!
ERROR 20:08:26,637 - Semanticka greska na liniji 105 nekompatibilni tipovi za aritmeticku operaciju!
ERROR 20:08:26,637 - Semanticka greska na liniji 105 nekompatibilni tipovi prilikom dodele!
ERROR 20:08:26,638 - Parsiranje NIJE uspesno zavrseno!
