INFO  00:12:16,707 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  00:12:16,736 - #2 program
INFO  00:12:16,736 - #16 test302
INFO  00:12:16,736 - #48 const
INFO  00:12:16,736 - #16 int
INFO  00:12:16,736 - #16 jedan
INFO  00:12:16,737 - #13 =
INFO  00:12:16,737 - #15 1
INFO  00:12:16,737 - #5 ;
INFO  00:12:16,737 - #16 int
INFO  00:12:16,738 - #16 i
INFO  00:12:16,738 - #5 ;
INFO  00:12:16,738 - #16 bool
INFO  00:12:16,738 - #16 ibool
INFO  00:12:16,738 - #5 ;
INFO  00:12:16,738 - #16 int
INFO  00:12:16,739 - #16 niz2
INFO  00:12:16,739 - #5 ;
INFO  00:12:16,739 - #49 record
INFO  00:12:16,739 - #16 Test
INFO  00:12:16,739 - #3 {
INFO  00:12:16,739 - #16 int
INFO  00:12:16,739 - #16 niz
INFO  00:12:16,741 - #50 [
INFO  00:12:16,741 - #51 ]
INFO  00:12:16,741 - #5 ;
INFO  00:12:16,741 - #16 int
INFO  00:12:16,741 - #16 a
INFO  00:12:16,741 - #5 ;
INFO  00:12:16,741 - #4 }
INFO  00:12:16,742 - #49 record
INFO  00:12:16,742 - #16 Test2
INFO  00:12:16,742 - #3 {
INFO  00:12:16,742 - #16 int
INFO  00:12:16,742 - #16 niz23
INFO  00:12:16,742 - #50 [
INFO  00:12:16,742 - #51 ]
INFO  00:12:16,742 - #5 ;
INFO  00:12:16,742 - #16 int
INFO  00:12:16,742 - #16 a2
INFO  00:12:16,742 - #5 ;
INFO  00:12:16,742 - #4 }
INFO  00:12:16,742 - #16 Test
INFO  00:12:16,742 - #16 t1
INFO  00:12:16,742 - #8 ,
INFO  00:12:16,743 - #16 t2
INFO  00:12:16,743 - #5 ;
INFO  00:12:16,743 - #3 {
INFO  00:12:16,743 - #16 int
INFO  00:12:16,743 - #16 sum
INFO  00:12:16,743 - #6 (
INFO  00:12:16,744 - #16 int
INFO  00:12:16,744 - #16 z
INFO  00:12:16,744 - #8 ,
INFO  00:12:16,744 - #16 int
INFO  00:12:16,744 - #16 d
INFO  00:12:16,744 - #7 )
INFO  00:12:16,745 - #3 {
INFO  00:12:16,745 - #10 return
INFO  00:12:16,745 - #16 z
INFO  00:12:16,745 - #11 +
INFO  00:12:16,746 - #16 d
INFO  00:12:16,747 - #5 ;
INFO  00:12:16,747 - #4 }
INFO  00:12:16,748 - #16 int
INFO  00:12:16,748 - #16 inkrement
INFO  00:12:16,748 - #6 (
INFO  00:12:16,748 - #16 int
INFO  00:12:16,748 - #16 a
INFO  00:12:16,751 - #8 ,
INFO  00:12:16,751 - #16 int
INFO  00:12:16,751 - #16 inc
INFO  00:12:16,751 - #7 )
INFO  00:12:16,751 - #16 int
INFO  00:12:16,751 - #16 pom
INFO  00:12:16,751 - #5 ;
INFO  00:12:16,751 - #3 {
INFO  00:12:16,751 - #19 if
INFO  00:12:16,751 - #6 (
INFO  00:12:16,751 - #16 inc
INFO  00:12:16,751 - #22 ==
INFO  00:12:16,751 - #16 jedan
INFO  00:12:16,752 - #7 )
INFO  00:12:16,753 - #16 pom
INFO  00:12:16,753 - #13 =
INFO  00:12:16,753 - #15 1
INFO  00:12:16,754 - #5 ;
INFO  00:12:16,754 - #20 else
INFO  00:12:16,754 - #19 if
INFO  00:12:16,754 - #6 (
INFO  00:12:16,754 - #16 inc
INFO  00:12:16,754 - #22 ==
INFO  00:12:16,754 - #15 2
INFO  00:12:16,754 - #7 )
INFO  00:12:16,754 - #16 pom
INFO  00:12:16,754 - #13 =
INFO  00:12:16,754 - #16 a
INFO  00:12:16,754 - #5 ;
INFO  00:12:16,754 - #16 sum
INFO  00:12:16,755 - #6 (
INFO  00:12:16,755 - #16 a
INFO  00:12:16,755 - #8 ,
INFO  00:12:16,755 - #16 pom
INFO  00:12:16,755 - #7 )
INFO  00:12:16,756 - #5 ;
INFO  00:12:16,756 - #16 sum
INFO  00:12:16,756 - #6 (
INFO  00:12:16,756 - #16 a
INFO  00:12:16,756 - #8 ,
INFO  00:12:16,756 - #16 pom
INFO  00:12:16,756 - #7 )
INFO  00:12:16,756 - #5 ;
INFO  00:12:16,756 - #16 sum
INFO  00:12:16,756 - #6 (
INFO  00:12:16,756 - #16 a
INFO  00:12:16,756 - #8 ,
INFO  00:12:16,756 - #16 pom
INFO  00:12:16,757 - #7 )
INFO  00:12:16,757 - #5 ;
INFO  00:12:16,757 - #10 return
INFO  00:12:16,757 - #15 1
INFO  00:12:16,757 - #5 ;
INFO  00:12:16,757 - #4 }
INFO  00:12:16,757 - #16 bool
INFO  00:12:16,757 - #16 verify
INFO  00:12:16,757 - #6 (
INFO  00:12:16,757 - #7 )
INFO  00:12:16,757 - #3 {
INFO  00:12:16,757 - #16 sum
INFO  00:12:16,758 - #6 (
INFO  00:12:16,758 - #15 1
INFO  00:12:16,758 - #8 ,
INFO  00:12:16,758 - #15 2
INFO  00:12:16,758 - #7 )
INFO  00:12:16,758 - #5 ;
INFO  00:12:16,758 - #9 print
INFO  00:12:16,758 - #6 (
INFO  00:12:16,758 - #17 'v'
INFO  00:12:16,758 - #7 )
INFO  00:12:16,758 - #5 ;
INFO  00:12:16,758 - #10 return
INFO  00:12:16,758 - #18 false
INFO  00:12:16,758 - #5 ;
INFO  00:12:16,758 - #4 }
INFO  00:12:16,758 - #14 void
INFO  00:12:16,758 - #16 main
INFO  00:12:16,759 - #6 (
INFO  00:12:16,759 - #7 )
INFO  00:12:16,759 - #3 {
INFO  00:12:16,759 - #19 if
INFO  00:12:16,759 - #6 (
INFO  00:12:16,759 - #15 1
INFO  00:12:16,759 - #23 !=
INFO  00:12:16,759 - #15 1
INFO  00:12:16,759 - #7 )
INFO  00:12:16,759 - #9 print
INFO  00:12:16,759 - #6 (
INFO  00:12:16,759 - #12 -
INFO  00:12:16,759 - #15 6
INFO  00:12:16,759 - #7 )
INFO  00:12:16,759 - #5 ;
INFO  00:12:16,759 - #20 else
INFO  00:12:16,759 - #9 print
INFO  00:12:16,759 - #6 (
INFO  00:12:16,759 - #15 0
INFO  00:12:16,759 - #7 )
INFO  00:12:16,759 - #5 ;
INFO  00:12:16,759 - #16 ibool
INFO  00:12:16,760 - #13 =
INFO  00:12:16,760 - #18 false
INFO  00:12:16,760 - #5 ;
INFO  00:12:16,760 - #16 i
INFO  00:12:16,760 - #13 =
INFO  00:12:16,760 - #15 0
INFO  00:12:16,760 - #5 ;
INFO  00:12:16,760 - #34 do
INFO  00:12:16,760 - #3 {
INFO  00:12:16,760 - #19 if
INFO  00:12:16,760 - #6 (
INFO  00:12:16,760 - #16 i
INFO  00:12:16,760 - #22 ==
INFO  00:12:16,760 - #15 2
INFO  00:12:16,760 - #7 )
INFO  00:12:16,760 - #16 ibool
INFO  00:12:16,760 - #13 =
INFO  00:12:16,760 - #18 true
INFO  00:12:16,760 - #5 ;
INFO  00:12:16,760 - #16 i
INFO  00:12:16,760 - #46 ++
INFO  00:12:16,761 - #5 ;
INFO  00:12:16,761 - #4 }
INFO  00:12:16,761 - #35 while
INFO  00:12:16,761 - #6 (
INFO  00:12:16,761 - #16 i
INFO  00:12:16,761 - #26 <
INFO  00:12:16,761 - #15 5
INFO  00:12:16,762 - #7 )
INFO  00:12:16,762 - #5 ;
INFO  00:12:16,762 - #19 if
INFO  00:12:16,762 - #6 (
INFO  00:12:16,762 - #16 ibool
INFO  00:12:16,762 - #7 )
INFO  00:12:16,762 - #19 if
INFO  00:12:16,762 - #6 (
INFO  00:12:16,762 - #16 i
INFO  00:12:16,762 - #22 ==
INFO  00:12:16,762 - #15 5
INFO  00:12:16,762 - #7 )
INFO  00:12:16,762 - #9 print
INFO  00:12:16,762 - #6 (
INFO  00:12:16,762 - #15 1
INFO  00:12:16,762 - #7 )
INFO  00:12:16,762 - #5 ;
INFO  00:12:16,762 - #20 else
INFO  00:12:16,762 - #9 print
INFO  00:12:16,762 - #6 (
INFO  00:12:16,762 - #12 -
INFO  00:12:16,762 - #15 1
INFO  00:12:16,762 - #7 )
INFO  00:12:16,762 - #5 ;
INFO  00:12:16,762 - #16 t1
INFO  00:12:16,762 - #13 =
INFO  00:12:16,762 - #36 new
INFO  00:12:16,762 - #16 Test
INFO  00:12:16,762 - #5 ;
INFO  00:12:16,762 - #16 t1
INFO  00:12:16,763 - #43 .
INFO  00:12:16,763 - #16 a
INFO  00:12:16,763 - #13 =
INFO  00:12:16,763 - #15 2
INFO  00:12:16,763 - #5 ;
INFO  00:12:16,763 - #16 t1
INFO  00:12:16,763 - #43 .
INFO  00:12:16,763 - #16 niz
INFO  00:12:16,763 - #13 =
INFO  00:12:16,763 - #36 new
INFO  00:12:16,763 - #16 int
INFO  00:12:16,763 - #50 [
INFO  00:12:16,763 - #15 3
INFO  00:12:16,763 - #51 ]
INFO  00:12:16,763 - #5 ;
INFO  00:12:16,763 - #16 t1
INFO  00:12:16,763 - #43 .
INFO  00:12:16,763 - #16 niz
INFO  00:12:16,763 - #50 [
INFO  00:12:16,763 - #15 0
INFO  00:12:16,763 - #51 ]
INFO  00:12:16,763 - #13 =
INFO  00:12:16,763 - #15 1
INFO  00:12:16,763 - #28 *
INFO  00:12:16,763 - #16 t1
INFO  00:12:16,764 - #43 .
INFO  00:12:16,764 - #16 a
INFO  00:12:16,764 - #5 ;
INFO  00:12:16,764 - #16 t1
INFO  00:12:16,764 - #43 .
INFO  00:12:16,764 - #16 niz
INFO  00:12:16,764 - #50 [
INFO  00:12:16,764 - #15 1
INFO  00:12:16,764 - #51 ]
INFO  00:12:16,764 - #13 =
INFO  00:12:16,764 - #15 2
INFO  00:12:16,764 - #28 *
INFO  00:12:16,765 - #16 t1
INFO  00:12:16,765 - #43 .
INFO  00:12:16,765 - #16 a
INFO  00:12:16,765 - #5 ;
INFO  00:12:16,765 - #16 t1
INFO  00:12:16,765 - #43 .
INFO  00:12:16,765 - #16 niz
INFO  00:12:16,765 - #50 [
INFO  00:12:16,765 - #15 2
INFO  00:12:16,765 - #51 ]
INFO  00:12:16,765 - #13 =
INFO  00:12:16,765 - #16 sum
INFO  00:12:16,765 - #6 (
INFO  00:12:16,765 - #16 t1
INFO  00:12:16,765 - #43 .
INFO  00:12:16,765 - #16 niz
INFO  00:12:16,765 - #50 [
INFO  00:12:16,765 - #15 1
INFO  00:12:16,765 - #51 ]
INFO  00:12:16,765 - #8 ,
INFO  00:12:16,765 - #16 t1
INFO  00:12:16,765 - #43 .
INFO  00:12:16,765 - #16 niz
INFO  00:12:16,765 - #50 [
INFO  00:12:16,765 - #15 0
INFO  00:12:16,765 - #51 ]
INFO  00:12:16,765 - #7 )
INFO  00:12:16,765 - #28 *
INFO  00:12:16,765 - #16 t1
INFO  00:12:16,765 - #43 .
INFO  00:12:16,765 - #16 a
INFO  00:12:16,766 - #11 +
INFO  00:12:16,766 - #15 1
INFO  00:12:16,766 - #5 ;
INFO  00:12:16,766 - #19 if
INFO  00:12:16,766 - #6 (
INFO  00:12:16,766 - #16 verify
INFO  00:12:16,766 - #6 (
INFO  00:12:16,766 - #7 )
INFO  00:12:16,766 - #7 )
INFO  00:12:16,766 - #9 print
INFO  00:12:16,766 - #6 (
INFO  00:12:16,766 - #16 ord
INFO  00:12:16,766 - #6 (
INFO  00:12:16,766 - #17 'A'
INFO  00:12:16,766 - #7 )
INFO  00:12:16,766 - #7 )
INFO  00:12:16,766 - #5 ;
INFO  00:12:16,766 - #20 else
INFO  00:12:16,766 - #9 print
INFO  00:12:16,766 - #6 (
INFO  00:12:16,766 - #16 ord
INFO  00:12:16,766 - #6 (
INFO  00:12:16,766 - #17 'a'
INFO  00:12:16,766 - #7 )
INFO  00:12:16,766 - #7 )
INFO  00:12:16,766 - #5 ;
INFO  00:12:16,767 - #9 print
INFO  00:12:16,767 - #6 (
INFO  00:12:16,767 - #16 eol
INFO  00:12:16,767 - #7 )
INFO  00:12:16,767 - #5 ;
INFO  00:12:16,767 - #16 i
INFO  00:12:16,767 - #13 =
INFO  00:12:16,767 - #15 0
INFO  00:12:16,767 - #5 ;
INFO  00:12:16,767 - #34 do
INFO  00:12:16,767 - #3 {
INFO  00:12:16,767 - #19 if
INFO  00:12:16,767 - #6 (
INFO  00:12:16,767 - #16 i
INFO  00:12:16,767 - #22 ==
INFO  00:12:16,767 - #15 3
INFO  00:12:16,767 - #7 )
INFO  00:12:16,767 - #3 {
INFO  00:12:16,767 - #16 i
INFO  00:12:16,767 - #46 ++
INFO  00:12:16,767 - #5 ;
INFO  00:12:16,767 - #39 continue
INFO  00:12:16,767 - #5 ;
INFO  00:12:16,767 - #4 }
INFO  00:12:16,767 - #19 if
INFO  00:12:16,767 - #6 (
INFO  00:12:16,767 - #16 i
INFO  00:12:16,768 - #22 ==
INFO  00:12:16,768 - #15 4
INFO  00:12:16,768 - #7 )
INFO  00:12:16,768 - #31 break
INFO  00:12:16,768 - #5 ;
INFO  00:12:16,768 - #16 i
INFO  00:12:16,768 - #13 =
INFO  00:12:16,768 - #16 inkrement
INFO  00:12:16,768 - #6 (
INFO  00:12:16,768 - #16 i
INFO  00:12:16,768 - #8 ,
INFO  00:12:16,768 - #15 1
INFO  00:12:16,768 - #7 )
INFO  00:12:16,768 - #5 ;
INFO  00:12:16,768 - #4 }
INFO  00:12:16,768 - #35 while
INFO  00:12:16,768 - #6 (
INFO  00:12:16,768 - #16 i
INFO  00:12:16,768 - #26 <
INFO  00:12:16,768 - #15 10
INFO  00:12:16,768 - #7 )
INFO  00:12:16,768 - #5 ;
INFO  00:12:16,768 - #19 if
INFO  00:12:16,768 - #6 (
INFO  00:12:16,768 - #16 i
INFO  00:12:16,769 - #22 ==
INFO  00:12:16,769 - #15 3
INFO  00:12:16,769 - #44 &&
INFO  00:12:16,769 - #16 verify
INFO  00:12:16,769 - #6 (
INFO  00:12:16,769 - #7 )
INFO  00:12:16,769 - #7 )
INFO  00:12:16,769 - #9 print
INFO  00:12:16,769 - #6 (
INFO  00:12:16,769 - #12 -
INFO  00:12:16,769 - #15 4
INFO  00:12:16,769 - #7 )
INFO  00:12:16,769 - #5 ;
INFO  00:12:16,769 - #20 else
INFO  00:12:16,769 - #9 print
INFO  00:12:16,769 - #6 (
INFO  00:12:16,769 - #15 4
INFO  00:12:16,769 - #7 )
INFO  00:12:16,769 - #5 ;
INFO  00:12:16,769 - #37 read
INFO  00:12:16,769 - #6 (
INFO  00:12:16,769 - #16 t1
INFO  00:12:16,769 - #43 .
INFO  00:12:16,769 - #16 niz
INFO  00:12:16,769 - #50 [
INFO  00:12:16,769 - #15 0
INFO  00:12:16,769 - #51 ]
INFO  00:12:16,769 - #7 )
INFO  00:12:16,769 - #5 ;
INFO  00:12:16,769 - #37 read
INFO  00:12:16,769 - #6 (
INFO  00:12:16,769 - #16 t1
INFO  00:12:16,769 - #43 .
INFO  00:12:16,770 - #16 niz
INFO  00:12:16,770 - #50 [
INFO  00:12:16,770 - #15 1
INFO  00:12:16,770 - #51 ]
INFO  00:12:16,770 - #7 )
INFO  00:12:16,770 - #5 ;
INFO  00:12:16,770 - #37 read
INFO  00:12:16,770 - #6 (
INFO  00:12:16,770 - #16 t1
INFO  00:12:16,770 - #43 .
INFO  00:12:16,770 - #16 niz
INFO  00:12:16,770 - #50 [
INFO  00:12:16,770 - #15 2
INFO  00:12:16,770 - #51 ]
INFO  00:12:16,770 - #7 )
INFO  00:12:16,770 - #5 ;
INFO  00:12:16,770 - #9 print
INFO  00:12:16,770 - #6 (
INFO  00:12:16,770 - #16 eol
INFO  00:12:16,770 - #7 )
INFO  00:12:16,770 - #5 ;
INFO  00:12:16,770 - #16 chr
INFO  00:12:16,770 - #6 (
INFO  00:12:16,770 - #15 3
INFO  00:12:16,770 - #7 )
INFO  00:12:16,770 - #5 ;
INFO  00:12:16,770 - #9 print
INFO  00:12:16,770 - #6 (
INFO  00:12:16,770 - #16 sum
INFO  00:12:16,770 - #6 (
INFO  00:12:16,770 - #16 sum
INFO  00:12:16,770 - #6 (
INFO  00:12:16,770 - #16 t1
INFO  00:12:16,770 - #43 .
INFO  00:12:16,770 - #16 niz
INFO  00:12:16,770 - #50 [
INFO  00:12:16,770 - #15 0
INFO  00:12:16,770 - #51 ]
INFO  00:12:16,770 - #8 ,
INFO  00:12:16,770 - #16 t1
INFO  00:12:16,770 - #43 .
INFO  00:12:16,770 - #16 niz
INFO  00:12:16,770 - #50 [
INFO  00:12:16,770 - #15 1
INFO  00:12:16,770 - #51 ]
INFO  00:12:16,770 - #7 )
INFO  00:12:16,770 - #8 ,
INFO  00:12:16,770 - #16 t1
INFO  00:12:16,770 - #43 .
INFO  00:12:16,770 - #16 niz
INFO  00:12:16,771 - #50 [
INFO  00:12:16,771 - #15 2
INFO  00:12:16,771 - #51 ]
INFO  00:12:16,771 - #7 )
INFO  00:12:16,771 - #7 )
INFO  00:12:16,771 - #5 ;
INFO  00:12:16,771 - #9 print
INFO  00:12:16,771 - #6 (
INFO  00:12:16,771 - #16 eol
INFO  00:12:16,771 - #7 )
INFO  00:12:16,771 - #5 ;
INFO  00:12:16,771 - #9 print
INFO  00:12:16,771 - #6 (
INFO  00:12:16,771 - #16 inkrement
INFO  00:12:16,771 - #6 (
INFO  00:12:16,771 - #16 t1
INFO  00:12:16,771 - #43 .
INFO  00:12:16,771 - #16 niz
INFO  00:12:16,771 - #50 [
INFO  00:12:16,771 - #15 2
INFO  00:12:16,771 - #51 ]
INFO  00:12:16,771 - #8 ,
INFO  00:12:16,771 - #15 2
INFO  00:12:16,771 - #7 )
INFO  00:12:16,771 - #7 )
INFO  00:12:16,771 - #5 ;
INFO  00:12:16,771 - #16 t2
INFO  00:12:16,771 - #13 =
INFO  00:12:16,771 - #36 new
INFO  00:12:16,771 - #16 Test
INFO  00:12:16,771 - #5 ;
INFO  00:12:16,771 - #16 t2
INFO  00:12:16,771 - #43 .
INFO  00:12:16,771 - #16 a
INFO  00:12:16,771 - #13 =
INFO  00:12:16,771 - #15 3
INFO  00:12:16,771 - #5 ;
INFO  00:12:16,771 - #16 t2
INFO  00:12:16,771 - #43 .
INFO  00:12:16,771 - #16 niz
INFO  00:12:16,772 - #13 =
INFO  00:12:16,772 - #36 new
INFO  00:12:16,772 - #16 int
INFO  00:12:16,772 - #50 [
INFO  00:12:16,772 - #15 3
INFO  00:12:16,772 - #51 ]
INFO  00:12:16,772 - #5 ;
INFO  00:12:16,772 - #16 i
INFO  00:12:16,772 - #13 =
INFO  00:12:16,772 - #15 0
INFO  00:12:16,772 - #5 ;
INFO  00:12:16,772 - #34 do
INFO  00:12:16,772 - #3 {
INFO  00:12:16,772 - #16 t2
INFO  00:12:16,772 - #43 .
INFO  00:12:16,772 - #16 niz
INFO  00:12:16,772 - #50 [
INFO  00:12:16,772 - #16 i
INFO  00:12:16,772 - #51 ]
INFO  00:12:16,773 - #13 =
INFO  00:12:16,773 - #16 t1
INFO  00:12:16,773 - #43 .
INFO  00:12:16,773 - #16 niz
INFO  00:12:16,773 - #50 [
INFO  00:12:16,773 - #16 i
INFO  00:12:16,773 - #51 ]
INFO  00:12:16,773 - #28 *
INFO  00:12:16,773 - #15 2
INFO  00:12:16,773 - #28 *
INFO  00:12:16,773 - #16 t2
INFO  00:12:16,773 - #43 .
INFO  00:12:16,773 - #16 a
INFO  00:12:16,773 - #5 ;
INFO  00:12:16,773 - #16 i
INFO  00:12:16,773 - #46 ++
INFO  00:12:16,773 - #5 ;
INFO  00:12:16,773 - #4 }
INFO  00:12:16,773 - #35 while
INFO  00:12:16,773 - #6 (
INFO  00:12:16,773 - #16 i
INFO  00:12:16,773 - #26 <
INFO  00:12:16,774 - #15 3
INFO  00:12:16,774 - #7 )
INFO  00:12:16,774 - #5 ;
INFO  00:12:16,774 - #9 print
INFO  00:12:16,774 - #6 (
INFO  00:12:16,774 - #16 t2
INFO  00:12:16,774 - #43 .
INFO  00:12:16,774 - #16 niz
INFO  00:12:16,774 - #50 [
INFO  00:12:16,774 - #15 0
INFO  00:12:16,774 - #51 ]
INFO  00:12:16,774 - #7 )
INFO  00:12:16,774 - #5 ;
INFO  00:12:16,774 - #9 print
INFO  00:12:16,774 - #6 (
INFO  00:12:16,774 - #16 t2
INFO  00:12:16,774 - #43 .
INFO  00:12:16,774 - #16 niz
INFO  00:12:16,774 - #50 [
INFO  00:12:16,774 - #15 1
INFO  00:12:16,774 - #51 ]
INFO  00:12:16,774 - #7 )
INFO  00:12:16,774 - #5 ;
INFO  00:12:16,774 - #9 print
INFO  00:12:16,774 - #6 (
INFO  00:12:16,774 - #16 t2
INFO  00:12:16,774 - #43 .
INFO  00:12:16,774 - #16 niz
INFO  00:12:16,774 - #50 [
INFO  00:12:16,774 - #15 2
INFO  00:12:16,774 - #51 ]
INFO  00:12:16,774 - #7 )
INFO  00:12:16,774 - #5 ;
INFO  00:12:16,774 - #9 print
INFO  00:12:16,774 - #6 (
INFO  00:12:16,774 - #16 eol
INFO  00:12:16,774 - #7 )
INFO  00:12:16,774 - #5 ;
INFO  00:12:16,774 - #16 i
INFO  00:12:16,775 - #13 =
INFO  00:12:16,775 - #15 0
INFO  00:12:16,775 - #5 ;
INFO  00:12:16,775 - #16 niz2
INFO  00:12:16,775 - #13 =
INFO  00:12:16,775 - #15 0
INFO  00:12:16,775 - #5 ;
INFO  00:12:16,775 - #34 do
INFO  00:12:16,775 - #3 {
INFO  00:12:16,775 - #16 niz2
INFO  00:12:16,775 - #13 =
INFO  00:12:16,775 - #16 niz2
INFO  00:12:16,775 - #11 +
INFO  00:12:16,775 - #16 t1
INFO  00:12:16,775 - #43 .
INFO  00:12:16,775 - #16 niz
INFO  00:12:16,775 - #50 [
INFO  00:12:16,775 - #16 i
INFO  00:12:16,775 - #51 ]
INFO  00:12:16,775 - #11 +
INFO  00:12:16,775 - #16 t2
INFO  00:12:16,775 - #43 .
INFO  00:12:16,775 - #16 niz
INFO  00:12:16,775 - #50 [
INFO  00:12:16,775 - #16 i
INFO  00:12:16,775 - #51 ]
INFO  00:12:16,775 - #5 ;
INFO  00:12:16,775 - #16 i
INFO  00:12:16,775 - #46 ++
INFO  00:12:16,775 - #5 ;
INFO  00:12:16,775 - #4 }
INFO  00:12:16,775 - #35 while
INFO  00:12:16,775 - #6 (
INFO  00:12:16,775 - #16 i
INFO  00:12:16,775 - #26 <
INFO  00:12:16,775 - #15 3
INFO  00:12:16,775 - #7 )
INFO  00:12:16,775 - #5 ;
INFO  00:12:16,775 - #9 print
INFO  00:12:16,775 - #6 (
INFO  00:12:16,775 - #16 niz2
INFO  00:12:16,775 - #7 )
INFO  00:12:16,775 - #5 ;
INFO  00:12:16,775 - #9 print
INFO  00:12:16,775 - #6 (
INFO  00:12:16,775 - #16 eol
INFO  00:12:16,775 - #7 )
INFO  00:12:16,775 - #5 ;
INFO  00:12:16,775 - #4 }
INFO  00:12:16,775 - #4 }
INFO  00:12:16,782 - Trenutan tip konstante je:  int na liniji 5
INFO  00:12:16,782 - Deklarisana promenljiva i na liniji 7
INFO  00:12:16,782 - Deklarisana promenljiva ibool na liniji 10
INFO  00:12:16,782 - Deklarisana promenljiva niz2 na liniji 12
INFO  00:12:16,782 - Deklarisana promenljiva niz na liniji 15
INFO  00:12:16,782 - Deklarisana promenljiva a na liniji 16
INFO  00:12:16,782 - Deklarisana je rekord :  Test na liniji 14
INFO  00:12:16,782 - Deklarisana promenljiva niz23 na liniji 20
INFO  00:12:16,782 - Deklarisana promenljiva a2 na liniji 21
INFO  00:12:16,782 - Deklarisana je rekord :  Test2 na liniji 19
INFO  00:12:16,782 - Deklarisana promenljiva t2 na liniji 24
INFO  00:12:16,782 - Deklarisana promenljiva t1 na liniji 24
INFO  00:12:16,782 - Obradjuje se funkcija sum na liniji 28
INFO  00:12:16,782 - Naveden argument d na liniji 28
INFO  00:12:16,782 - Naveden argument z na liniji 28
INFO  00:12:16,783 - Obradjuje se funkcija inkrement na liniji 34
INFO  00:12:16,783 - Naveden argument inc na liniji 34
INFO  00:12:16,783 - Naveden argument a na liniji 34
INFO  00:12:16,783 - Deklarisana promenljiva pom na liniji 35
INFO  00:12:16,783 - Pronadjen poziv funkcije sum na liniji 40
INFO  00:12:16,783 - Pronadjen poziv funkcije sum na liniji 41
INFO  00:12:16,783 - Pronadjen poziv funkcije sum na liniji 42
INFO  00:12:16,783 - Obradjuje se funkcija verify na liniji 46
INFO  00:12:16,783 - Pronadjen poziv funkcije sum na liniji 48
INFO  00:12:16,783 - Obradjuje se funkcija main na liniji 55
ERROR 00:12:16,784 - Semanticka greska na liniji 77 print prima samo num, char ili bool!
ERROR 00:12:16,784 - Semanticka greska na liniji 78 print prima samo num, char ili bool!
ERROR 00:12:16,784 - Semanticka greska na liniji 95  t1 mora biti int, char ili bool!
ERROR 00:12:16,784 - Semanticka greska na liniji 96  t1 mora biti int, char ili bool!
ERROR 00:12:16,784 - Semanticka greska na liniji 97  t1 mora biti int, char ili bool!
INFO  00:12:16,784 - Pronadjen poziv funkcije chr na liniji 100
ERROR 00:12:16,784 - Semanticka greska na liniji 102 print prima samo num, char ili bool!
ERROR 00:12:16,784 - Semanticka greska na liniji 105 print prima samo num, char ili bool!
ERROR 00:12:16,784 - Semanticka greska na liniji 115  t2 mora biti int, char ili bool!
ERROR 00:12:16,784 - Semanticka greska na liniji 116  t2 mora biti int, char ili bool!
ERROR 00:12:16,784 - Semanticka greska na liniji 117  t2 mora biti int, char ili bool!
ERROR 00:12:16,785 - Parsiranje NIJE uspesno zavrseno!
