INFO  16:10:32,698 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  16:10:32,735 - #2 program
INFO  16:10:32,735 - #16 test302
INFO  16:10:32,735 - #48 const
INFO  16:10:32,735 - #16 int
INFO  16:10:32,735 - #16 jedan
INFO  16:10:32,735 - #13 =
INFO  16:10:32,736 - #15 1
INFO  16:10:32,736 - #5 ;
INFO  16:10:32,736 - #16 int
INFO  16:10:32,737 - #16 i
INFO  16:10:32,737 - #5 ;
INFO  16:10:32,737 - #16 bool
INFO  16:10:32,737 - #16 ibool
INFO  16:10:32,737 - #5 ;
INFO  16:10:32,738 - #16 int
INFO  16:10:32,738 - #16 niz2
INFO  16:10:32,738 - #5 ;
INFO  16:10:32,738 - #49 record
INFO  16:10:32,738 - #16 Test
INFO  16:10:32,738 - #3 {
INFO  16:10:32,738 - #16 int
INFO  16:10:32,738 - #16 niz
INFO  16:10:32,738 - #50 [
INFO  16:10:32,739 - #51 ]
INFO  16:10:32,739 - #5 ;
INFO  16:10:32,739 - #16 int
INFO  16:10:32,739 - #16 a
INFO  16:10:32,739 - #5 ;
INFO  16:10:32,739 - #4 }
INFO  16:10:32,739 - #16 Test
INFO  16:10:32,740 - #16 t1
INFO  16:10:32,740 - #8 ,
INFO  16:10:32,740 - #16 t2
INFO  16:10:32,740 - #5 ;
INFO  16:10:32,740 - #3 {
INFO  16:10:32,740 - #16 int
INFO  16:10:32,741 - #16 sum
INFO  16:10:32,741 - #6 (
INFO  16:10:32,741 - #16 int
INFO  16:10:32,741 - #16 z
INFO  16:10:32,741 - #8 ,
INFO  16:10:32,741 - #16 int
INFO  16:10:32,741 - #16 d
INFO  16:10:32,741 - #7 )
INFO  16:10:32,742 - #3 {
INFO  16:10:32,742 - #10 return
INFO  16:10:32,742 - #16 z
INFO  16:10:32,742 - #11 +
INFO  16:10:32,743 - #16 d
INFO  16:10:32,744 - #5 ;
INFO  16:10:32,744 - #4 }
INFO  16:10:32,745 - #16 int
INFO  16:10:32,745 - #16 inkrement
INFO  16:10:32,745 - #6 (
INFO  16:10:32,745 - #16 int
INFO  16:10:32,745 - #16 a
INFO  16:10:32,745 - #8 ,
INFO  16:10:32,745 - #16 int
INFO  16:10:32,745 - #16 inc
INFO  16:10:32,745 - #7 )
INFO  16:10:32,745 - #16 int
INFO  16:10:32,745 - #16 pom
INFO  16:10:32,745 - #5 ;
INFO  16:10:32,745 - #3 {
INFO  16:10:32,746 - #19 if
INFO  16:10:32,746 - #6 (
INFO  16:10:32,746 - #16 inc
INFO  16:10:32,746 - #22 ==
INFO  16:10:32,749 - #16 jedan
INFO  16:10:32,750 - #7 )
INFO  16:10:32,751 - #16 pom
INFO  16:10:32,751 - #13 =
INFO  16:10:32,751 - #15 1
INFO  16:10:32,752 - #5 ;
INFO  16:10:32,752 - #20 else
INFO  16:10:32,752 - #19 if
INFO  16:10:32,752 - #6 (
INFO  16:10:32,752 - #16 inc
INFO  16:10:32,752 - #22 ==
INFO  16:10:32,752 - #15 2
INFO  16:10:32,752 - #7 )
INFO  16:10:32,752 - #16 pom
INFO  16:10:32,752 - #13 =
INFO  16:10:32,752 - #16 a
INFO  16:10:32,752 - #5 ;
INFO  16:10:32,752 - #10 return
INFO  16:10:32,753 - #16 sum
INFO  16:10:32,753 - #6 (
INFO  16:10:32,753 - #16 a
INFO  16:10:32,753 - #8 ,
INFO  16:10:32,753 - #16 pom
INFO  16:10:32,753 - #7 )
INFO  16:10:32,754 - #5 ;
INFO  16:10:32,755 - #4 }
INFO  16:10:32,755 - #16 bool
INFO  16:10:32,755 - #16 verify
INFO  16:10:32,755 - #6 (
INFO  16:10:32,755 - #7 )
INFO  16:10:32,755 - #3 {
INFO  16:10:32,755 - #9 print
INFO  16:10:32,755 - #6 (
INFO  16:10:32,755 - #17 'v'
INFO  16:10:32,755 - #7 )
INFO  16:10:32,756 - #5 ;
INFO  16:10:32,756 - #10 return
INFO  16:10:32,756 - #18 false
INFO  16:10:32,756 - #5 ;
INFO  16:10:32,756 - #4 }
INFO  16:10:32,756 - #14 void
INFO  16:10:32,756 - #16 main
INFO  16:10:32,756 - #6 (
INFO  16:10:32,756 - #7 )
INFO  16:10:32,756 - #3 {
INFO  16:10:32,756 - #19 if
INFO  16:10:32,756 - #6 (
INFO  16:10:32,756 - #15 1
INFO  16:10:32,756 - #23 !=
INFO  16:10:32,756 - #15 1
INFO  16:10:32,756 - #7 )
INFO  16:10:32,756 - #9 print
INFO  16:10:32,756 - #6 (
INFO  16:10:32,756 - #12 -
INFO  16:10:32,756 - #15 6
INFO  16:10:32,756 - #7 )
INFO  16:10:32,756 - #5 ;
INFO  16:10:32,756 - #20 else
INFO  16:10:32,756 - #9 print
INFO  16:10:32,756 - #6 (
INFO  16:10:32,756 - #15 0
INFO  16:10:32,756 - #7 )
INFO  16:10:32,756 - #5 ;
INFO  16:10:32,756 - #16 ibool
INFO  16:10:32,756 - #13 =
INFO  16:10:32,756 - #18 false
INFO  16:10:32,756 - #5 ;
INFO  16:10:32,757 - #16 i
INFO  16:10:32,757 - #13 =
INFO  16:10:32,757 - #15 0
INFO  16:10:32,757 - #5 ;
INFO  16:10:32,757 - #34 do
INFO  16:10:32,757 - #3 {
INFO  16:10:32,757 - #19 if
INFO  16:10:32,757 - #6 (
INFO  16:10:32,757 - #16 i
INFO  16:10:32,757 - #22 ==
INFO  16:10:32,757 - #15 2
INFO  16:10:32,757 - #7 )
INFO  16:10:32,757 - #16 ibool
INFO  16:10:32,757 - #13 =
INFO  16:10:32,757 - #18 true
INFO  16:10:32,757 - #5 ;
INFO  16:10:32,757 - #16 i
INFO  16:10:32,757 - #46 ++
INFO  16:10:32,757 - #5 ;
INFO  16:10:32,758 - #4 }
INFO  16:10:32,758 - #35 while
INFO  16:10:32,758 - #6 (
INFO  16:10:32,758 - #16 i
INFO  16:10:32,758 - #26 <
INFO  16:10:32,758 - #15 5
INFO  16:10:32,758 - #7 )
INFO  16:10:32,759 - #5 ;
INFO  16:10:32,759 - #19 if
INFO  16:10:32,759 - #6 (
INFO  16:10:32,759 - #16 ibool
INFO  16:10:32,759 - #7 )
INFO  16:10:32,759 - #19 if
INFO  16:10:32,759 - #6 (
INFO  16:10:32,759 - #16 i
INFO  16:10:32,759 - #22 ==
INFO  16:10:32,759 - #15 5
INFO  16:10:32,759 - #7 )
INFO  16:10:32,759 - #9 print
INFO  16:10:32,759 - #6 (
INFO  16:10:32,759 - #15 1
INFO  16:10:32,759 - #7 )
INFO  16:10:32,759 - #5 ;
INFO  16:10:32,759 - #20 else
INFO  16:10:32,759 - #9 print
INFO  16:10:32,759 - #6 (
INFO  16:10:32,759 - #12 -
INFO  16:10:32,759 - #15 1
INFO  16:10:32,759 - #7 )
INFO  16:10:32,759 - #5 ;
INFO  16:10:32,760 - #16 t1
INFO  16:10:32,760 - #13 =
INFO  16:10:32,760 - #36 new
INFO  16:10:32,760 - #16 Test
INFO  16:10:32,760 - #5 ;
INFO  16:10:32,760 - #16 t1
INFO  16:10:32,760 - #43 .
INFO  16:10:32,760 - #16 a
INFO  16:10:32,760 - #13 =
INFO  16:10:32,760 - #15 2
INFO  16:10:32,760 - #5 ;
INFO  16:10:32,760 - #16 t1
INFO  16:10:32,760 - #43 .
INFO  16:10:32,760 - #16 niz
INFO  16:10:32,760 - #13 =
INFO  16:10:32,760 - #36 new
INFO  16:10:32,760 - #16 int
INFO  16:10:32,760 - #50 [
INFO  16:10:32,760 - #15 3
INFO  16:10:32,760 - #51 ]
INFO  16:10:32,760 - #5 ;
INFO  16:10:32,760 - #16 t1
INFO  16:10:32,760 - #43 .
INFO  16:10:32,760 - #16 niz
INFO  16:10:32,760 - #50 [
INFO  16:10:32,760 - #15 0
INFO  16:10:32,761 - #51 ]
INFO  16:10:32,761 - #13 =
INFO  16:10:32,761 - #15 1
INFO  16:10:32,761 - #28 *
INFO  16:10:32,761 - #16 t1
INFO  16:10:32,761 - #43 .
INFO  16:10:32,761 - #16 a
INFO  16:10:32,761 - #5 ;
INFO  16:10:32,761 - #16 t1
INFO  16:10:32,762 - #43 .
INFO  16:10:32,762 - #16 niz
INFO  16:10:32,762 - #50 [
INFO  16:10:32,762 - #15 1
INFO  16:10:32,762 - #51 ]
INFO  16:10:32,762 - #13 =
INFO  16:10:32,762 - #15 2
INFO  16:10:32,762 - #28 *
INFO  16:10:32,762 - #16 t1
INFO  16:10:32,762 - #43 .
INFO  16:10:32,762 - #16 a
INFO  16:10:32,762 - #5 ;
INFO  16:10:32,762 - #16 t1
INFO  16:10:32,762 - #43 .
INFO  16:10:32,762 - #16 niz
INFO  16:10:32,762 - #50 [
INFO  16:10:32,762 - #15 2
INFO  16:10:32,762 - #51 ]
INFO  16:10:32,762 - #13 =
INFO  16:10:32,762 - #16 sum
INFO  16:10:32,762 - #6 (
INFO  16:10:32,762 - #16 t1
INFO  16:10:32,762 - #43 .
INFO  16:10:32,762 - #16 niz
INFO  16:10:32,762 - #50 [
INFO  16:10:32,762 - #15 1
INFO  16:10:32,762 - #51 ]
INFO  16:10:32,762 - #8 ,
INFO  16:10:32,762 - #16 t1
INFO  16:10:32,762 - #43 .
INFO  16:10:32,762 - #16 niz
INFO  16:10:32,762 - #50 [
INFO  16:10:32,762 - #15 0
INFO  16:10:32,762 - #51 ]
INFO  16:10:32,762 - #7 )
INFO  16:10:32,762 - #28 *
INFO  16:10:32,763 - #16 t1
INFO  16:10:32,763 - #43 .
INFO  16:10:32,763 - #16 a
INFO  16:10:32,763 - #11 +
INFO  16:10:32,763 - #15 1
INFO  16:10:32,763 - #5 ;
INFO  16:10:32,763 - #19 if
INFO  16:10:32,763 - #6 (
INFO  16:10:32,763 - #16 verify
INFO  16:10:32,763 - #6 (
INFO  16:10:32,763 - #7 )
INFO  16:10:32,763 - #45 ||
INFO  16:10:32,763 - #16 t1
INFO  16:10:32,763 - #43 .
INFO  16:10:32,763 - #16 niz
INFO  16:10:32,763 - #50 [
INFO  16:10:32,763 - #15 2
INFO  16:10:32,763 - #51 ]
INFO  16:10:32,763 - #22 ==
INFO  16:10:32,763 - #15 4
INFO  16:10:32,763 - #7 )
INFO  16:10:32,763 - #9 print
INFO  16:10:32,764 - #6 (
INFO  16:10:32,764 - #16 ord
INFO  16:10:32,764 - #6 (
INFO  16:10:32,764 - #17 'A'
INFO  16:10:32,764 - #7 )
INFO  16:10:32,764 - #7 )
INFO  16:10:32,764 - #5 ;
INFO  16:10:32,764 - #20 else
INFO  16:10:32,764 - #9 print
INFO  16:10:32,764 - #6 (
INFO  16:10:32,764 - #16 ord
INFO  16:10:32,764 - #6 (
INFO  16:10:32,764 - #17 'a'
INFO  16:10:32,764 - #7 )
INFO  16:10:32,764 - #7 )
INFO  16:10:32,764 - #5 ;
INFO  16:10:32,764 - #9 print
INFO  16:10:32,764 - #6 (
INFO  16:10:32,764 - #16 eol
INFO  16:10:32,764 - #7 )
INFO  16:10:32,764 - #5 ;
INFO  16:10:32,764 - #16 i
INFO  16:10:32,764 - #13 =
INFO  16:10:32,764 - #15 0
INFO  16:10:32,764 - #5 ;
INFO  16:10:32,764 - #34 do
INFO  16:10:32,764 - #3 {
INFO  16:10:32,764 - #19 if
INFO  16:10:32,764 - #6 (
INFO  16:10:32,764 - #16 i
INFO  16:10:32,764 - #22 ==
INFO  16:10:32,764 - #15 3
INFO  16:10:32,764 - #7 )
INFO  16:10:32,764 - #3 {
INFO  16:10:32,764 - #16 i
INFO  16:10:32,764 - #46 ++
INFO  16:10:32,764 - #5 ;
INFO  16:10:32,764 - #39 continue
INFO  16:10:32,764 - #5 ;
INFO  16:10:32,764 - #4 }
INFO  16:10:32,765 - #19 if
INFO  16:10:32,765 - #6 (
INFO  16:10:32,765 - #16 i
INFO  16:10:32,765 - #22 ==
INFO  16:10:32,765 - #15 4
INFO  16:10:32,765 - #7 )
INFO  16:10:32,765 - #31 break
INFO  16:10:32,765 - #5 ;
INFO  16:10:32,765 - #16 i
INFO  16:10:32,765 - #13 =
INFO  16:10:32,765 - #16 inkrement
INFO  16:10:32,765 - #6 (
INFO  16:10:32,765 - #16 i
INFO  16:10:32,765 - #8 ,
INFO  16:10:32,765 - #15 1
INFO  16:10:32,766 - #7 )
INFO  16:10:32,766 - #5 ;
INFO  16:10:32,766 - #4 }
INFO  16:10:32,766 - #35 while
INFO  16:10:32,766 - #6 (
INFO  16:10:32,766 - #16 i
INFO  16:10:32,766 - #26 <
INFO  16:10:32,766 - #15 10
INFO  16:10:32,766 - #7 )
INFO  16:10:32,766 - #5 ;
INFO  16:10:32,766 - #19 if
INFO  16:10:32,766 - #6 (
INFO  16:10:32,766 - #16 i
INFO  16:10:32,766 - #22 ==
INFO  16:10:32,766 - #15 3
INFO  16:10:32,766 - #44 &&
INFO  16:10:32,766 - #16 verify
INFO  16:10:32,766 - #6 (
INFO  16:10:32,766 - #7 )
INFO  16:10:32,766 - #7 )
INFO  16:10:32,766 - #9 print
INFO  16:10:32,766 - #6 (
INFO  16:10:32,766 - #12 -
INFO  16:10:32,766 - #15 4
INFO  16:10:32,766 - #7 )
INFO  16:10:32,766 - #5 ;
INFO  16:10:32,766 - #20 else
INFO  16:10:32,766 - #9 print
INFO  16:10:32,766 - #6 (
INFO  16:10:32,766 - #15 4
INFO  16:10:32,766 - #7 )
INFO  16:10:32,766 - #5 ;
INFO  16:10:32,766 - #9 print
INFO  16:10:32,766 - #6 (
INFO  16:10:32,766 - #16 eol
INFO  16:10:32,766 - #7 )
INFO  16:10:32,766 - #5 ;
INFO  16:10:32,766 - #9 print
INFO  16:10:32,766 - #6 (
INFO  16:10:32,766 - #16 sum
INFO  16:10:32,767 - #6 (
INFO  16:10:32,767 - #16 sum
INFO  16:10:32,767 - #6 (
INFO  16:10:32,767 - #16 t1
INFO  16:10:32,767 - #43 .
INFO  16:10:32,767 - #16 niz
INFO  16:10:32,767 - #50 [
INFO  16:10:32,767 - #15 0
INFO  16:10:32,767 - #51 ]
INFO  16:10:32,767 - #8 ,
INFO  16:10:32,767 - #16 t1
INFO  16:10:32,767 - #43 .
INFO  16:10:32,767 - #16 niz
INFO  16:10:32,767 - #50 [
INFO  16:10:32,767 - #15 1
INFO  16:10:32,767 - #51 ]
INFO  16:10:32,767 - #7 )
INFO  16:10:32,767 - #8 ,
INFO  16:10:32,767 - #16 t1
INFO  16:10:32,767 - #43 .
INFO  16:10:32,767 - #16 niz
INFO  16:10:32,767 - #50 [
INFO  16:10:32,767 - #15 2
INFO  16:10:32,767 - #51 ]
INFO  16:10:32,767 - #7 )
INFO  16:10:32,767 - #7 )
INFO  16:10:32,767 - #5 ;
INFO  16:10:32,767 - #9 print
INFO  16:10:32,767 - #6 (
INFO  16:10:32,767 - #16 eol
INFO  16:10:32,767 - #7 )
INFO  16:10:32,767 - #5 ;
INFO  16:10:32,767 - #9 print
INFO  16:10:32,767 - #6 (
INFO  16:10:32,767 - #16 inkrement
INFO  16:10:32,767 - #6 (
INFO  16:10:32,767 - #16 t1
INFO  16:10:32,767 - #43 .
INFO  16:10:32,767 - #16 niz
INFO  16:10:32,767 - #50 [
INFO  16:10:32,768 - #15 2
INFO  16:10:32,768 - #51 ]
INFO  16:10:32,768 - #8 ,
INFO  16:10:32,768 - #15 2
INFO  16:10:32,768 - #7 )
INFO  16:10:32,768 - #7 )
INFO  16:10:32,768 - #5 ;
INFO  16:10:32,768 - #16 t2
INFO  16:10:32,768 - #13 =
INFO  16:10:32,768 - #36 new
INFO  16:10:32,768 - #16 Test
INFO  16:10:32,768 - #5 ;
INFO  16:10:32,768 - #16 t2
INFO  16:10:32,768 - #43 .
INFO  16:10:32,768 - #16 a
INFO  16:10:32,768 - #13 =
INFO  16:10:32,768 - #15 3
INFO  16:10:32,768 - #5 ;
INFO  16:10:32,768 - #16 t2
INFO  16:10:32,768 - #43 .
INFO  16:10:32,768 - #16 niz
INFO  16:10:32,768 - #13 =
INFO  16:10:32,768 - #36 new
INFO  16:10:32,768 - #16 int
INFO  16:10:32,768 - #50 [
INFO  16:10:32,768 - #15 3
INFO  16:10:32,768 - #51 ]
INFO  16:10:32,768 - #5 ;
INFO  16:10:32,768 - #16 i
INFO  16:10:32,768 - #13 =
INFO  16:10:32,768 - #15 0
INFO  16:10:32,768 - #5 ;
INFO  16:10:32,768 - #34 do
INFO  16:10:32,768 - #3 {
INFO  16:10:32,768 - #16 t2
INFO  16:10:32,768 - #43 .
INFO  16:10:32,768 - #16 niz
INFO  16:10:32,768 - #50 [
INFO  16:10:32,768 - #16 i
INFO  16:10:32,768 - #51 ]
INFO  16:10:32,768 - #13 =
INFO  16:10:32,768 - #16 t1
INFO  16:10:32,768 - #43 .
INFO  16:10:32,768 - #16 niz
INFO  16:10:32,768 - #50 [
INFO  16:10:32,769 - #16 i
INFO  16:10:32,769 - #51 ]
INFO  16:10:32,769 - #28 *
INFO  16:10:32,769 - #15 2
INFO  16:10:32,769 - #28 *
INFO  16:10:32,769 - #16 t2
INFO  16:10:32,769 - #43 .
INFO  16:10:32,769 - #16 a
INFO  16:10:32,769 - #5 ;
INFO  16:10:32,769 - #16 i
INFO  16:10:32,769 - #46 ++
INFO  16:10:32,769 - #5 ;
INFO  16:10:32,769 - #4 }
INFO  16:10:32,769 - #35 while
INFO  16:10:32,769 - #6 (
INFO  16:10:32,769 - #16 i
INFO  16:10:32,769 - #26 <
INFO  16:10:32,769 - #15 3
INFO  16:10:32,769 - #7 )
INFO  16:10:32,769 - #5 ;
INFO  16:10:32,769 - #9 print
INFO  16:10:32,770 - #6 (
INFO  16:10:32,770 - #16 t2
INFO  16:10:32,770 - #43 .
INFO  16:10:32,770 - #16 niz
INFO  16:10:32,770 - #50 [
INFO  16:10:32,770 - #15 0
INFO  16:10:32,770 - #51 ]
INFO  16:10:32,770 - #7 )
INFO  16:10:32,770 - #5 ;
INFO  16:10:32,770 - #9 print
INFO  16:10:32,770 - #6 (
INFO  16:10:32,770 - #16 t2
INFO  16:10:32,770 - #43 .
INFO  16:10:32,770 - #16 niz
INFO  16:10:32,770 - #50 [
INFO  16:10:32,770 - #15 1
INFO  16:10:32,770 - #51 ]
INFO  16:10:32,770 - #7 )
INFO  16:10:32,770 - #5 ;
INFO  16:10:32,771 - #9 print
INFO  16:10:32,771 - #6 (
INFO  16:10:32,771 - #16 t2
INFO  16:10:32,771 - #43 .
INFO  16:10:32,771 - #16 niz
INFO  16:10:32,771 - #50 [
INFO  16:10:32,771 - #15 2
INFO  16:10:32,771 - #51 ]
INFO  16:10:32,771 - #7 )
INFO  16:10:32,771 - #5 ;
INFO  16:10:32,771 - #9 print
INFO  16:10:32,772 - #6 (
INFO  16:10:32,772 - #16 eol
INFO  16:10:32,772 - #7 )
INFO  16:10:32,772 - #5 ;
INFO  16:10:32,773 - #16 i
INFO  16:10:32,773 - #13 =
INFO  16:10:32,773 - #15 0
INFO  16:10:32,773 - #5 ;
INFO  16:10:32,773 - #16 niz2
INFO  16:10:32,773 - #13 =
INFO  16:10:32,773 - #15 0
INFO  16:10:32,773 - #5 ;
INFO  16:10:32,773 - #34 do
INFO  16:10:32,773 - #3 {
INFO  16:10:32,773 - #16 niz2
INFO  16:10:32,773 - #13 =
INFO  16:10:32,773 - #16 niz2
INFO  16:10:32,773 - #11 +
INFO  16:10:32,773 - #16 t1
INFO  16:10:32,773 - #43 .
INFO  16:10:32,773 - #16 niz
INFO  16:10:32,773 - #50 [
INFO  16:10:32,773 - #16 i
INFO  16:10:32,773 - #51 ]
INFO  16:10:32,773 - #28 *
INFO  16:10:32,773 - #16 t2
INFO  16:10:32,773 - #43 .
INFO  16:10:32,773 - #16 niz
INFO  16:10:32,773 - #50 [
INFO  16:10:32,773 - #16 i
INFO  16:10:32,773 - #51 ]
INFO  16:10:32,773 - #5 ;
INFO  16:10:32,773 - #16 i
INFO  16:10:32,773 - #46 ++
INFO  16:10:32,773 - #5 ;
INFO  16:10:32,773 - #4 }
INFO  16:10:32,773 - #35 while
INFO  16:10:32,773 - #6 (
INFO  16:10:32,773 - #16 i
INFO  16:10:32,773 - #26 <
INFO  16:10:32,773 - #15 3
INFO  16:10:32,773 - #7 )
INFO  16:10:32,773 - #5 ;
INFO  16:10:32,774 - #9 print
INFO  16:10:32,774 - #6 (
INFO  16:10:32,774 - #16 niz2
INFO  16:10:32,774 - #7 )
INFO  16:10:32,774 - #5 ;
INFO  16:10:32,774 - #9 print
INFO  16:10:32,774 - #6 (
INFO  16:10:32,774 - #16 eol
INFO  16:10:32,774 - #7 )
INFO  16:10:32,774 - #5 ;
INFO  16:10:32,774 - #4 }
INFO  16:10:32,774 - #4 }
INFO  16:10:32,783 - Trenutan tip konstante je:  int na liniji 5
INFO  16:10:32,783 - Deklarisana promenljiva i na liniji 7
INFO  16:10:32,783 - Deklarisana promenljiva ibool na liniji 8
INFO  16:10:32,783 - Deklarisana promenljiva niz2 na liniji 10
INFO  16:10:32,783 - Deklarisana je rekord :  Test na liniji 12
INFO  16:10:32,783 - Deklarisana promenljiva niz na liniji 13
INFO  16:10:32,783 - Deklarisana promenljiva a na liniji 14
INFO  16:10:32,783 - Deklarisana promenljiva t2 na liniji 17
INFO  16:10:32,783 - Deklarisana promenljiva t1 na liniji 17
INFO  16:10:32,784 - Obradjuje se funkcija sum na liniji 21
INFO  16:10:32,784 - Naveden argument d na liniji 21
INFO  16:10:32,784 - Naveden argument z na liniji 21
INFO  16:10:32,784 - Obradjuje se funkcija inkrement na liniji 26
INFO  16:10:32,784 - Naveden argument inc na liniji 26
INFO  16:10:32,784 - Naveden argument a na liniji 26
INFO  16:10:32,784 - Deklarisana promenljiva pom na liniji 27
INFO  16:10:32,784 - Pronadjen poziv funkcije sum na liniji 32
INFO  16:10:32,784 - Obradjuje se funkcija verify na liniji 35
INFO  16:10:32,784 - Obradjuje se funkcija main na liniji 40
INFO  16:10:32,785 - Pronadjen poziv funkcije sum na liniji 60
INFO  16:10:32,785 - Pronadjen poziv funkcije ord na liniji 61
INFO  16:10:32,785 - Pronadjen poziv funkcije ord na liniji 62
INFO  16:10:32,785 - Pronadjen poziv funkcije inkrement na liniji 73
INFO  16:10:32,785 - Pronadjen poziv funkcije sum na liniji 84
INFO  16:10:32,785 - Pronadjen poziv funkcije sum na liniji 84
INFO  16:10:32,785 - Pronadjen poziv funkcije inkrement na liniji 87
INFO  16:10:32,796 - Parsiranje uspesno zavrseno!
