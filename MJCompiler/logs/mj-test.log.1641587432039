INFO  21:12:03,072 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  21:12:03,102 - #2 program
INFO  21:12:03,102 - #16 Ime
INFO  21:12:03,102 - #48 const
INFO  21:12:03,102 - #16 tip
INFO  21:12:03,102 - #16 x
INFO  21:12:03,103 - #13 =
INFO  21:12:03,103 - #15 8
INFO  21:12:03,103 - #8 ,
INFO  21:12:03,103 - #16 y
INFO  21:12:03,103 - #13 =
INFO  21:12:03,103 - #17 'i'
INFO  21:12:03,103 - #8 ,
INFO  21:12:03,103 - #16 z
INFO  21:12:03,103 - #13 =
INFO  21:12:03,103 - #18 true
INFO  21:12:03,103 - #5 ;
INFO  21:12:03,104 - #16 int
INFO  21:12:03,104 - #16 x
INFO  21:12:03,104 - #50 [
INFO  21:12:03,104 - #51 ]
INFO  21:12:03,104 - #8 ,
INFO  21:12:03,104 - #16 y
INFO  21:12:03,105 - #8 ,
INFO  21:12:03,106 - #16 a
INFO  21:12:03,106 - #50 [
INFO  21:12:03,106 - #51 ]
INFO  21:12:03,106 - #8 ,
INFO  21:12:03,106 - #16 f
INFO  21:12:03,107 - #5 ;
INFO  21:12:03,107 - #32 class
INFO  21:12:03,107 - #16 Board
INFO  21:12:03,107 - #38 extends
INFO  21:12:03,107 - #16 Polje
INFO  21:12:03,107 - #3 {
INFO  21:12:03,107 - #16 int
INFO  21:12:03,107 - #16 a
INFO  21:12:03,107 - #5 ;
INFO  21:12:03,108 - #3 {
INFO  21:12:03,108 - #14 void
INFO  21:12:03,109 - #16 funckija
INFO  21:12:03,109 - #6 (
INFO  21:12:03,109 - #16 int
INFO  21:12:03,109 - #16 x
INFO  21:12:03,109 - #8 ,
INFO  21:12:03,109 - #16 int
INFO  21:12:03,109 - #16 zz
INFO  21:12:03,109 - #7 )
INFO  21:12:03,110 - #16 int
INFO  21:12:03,110 - #16 y
INFO  21:12:03,110 - #5 ;
INFO  21:12:03,110 - #3 {
INFO  21:12:03,110 - #3 {
INFO  21:12:03,110 - #39 continue
INFO  21:12:03,110 - #5 ;
INFO  21:12:03,110 - #10 return
INFO  21:12:03,111 - #12 -
INFO  21:12:03,111 - #15 5
INFO  21:12:03,111 - #11 +
INFO  21:12:03,112 - #15 7
INFO  21:12:03,112 - #28 *
INFO  21:12:03,112 - #15 2
INFO  21:12:03,113 - #12 -
INFO  21:12:03,113 - #6 (
INFO  21:12:03,113 - #15 13
INFO  21:12:03,113 - #28 *
INFO  21:12:03,113 - #15 7
INFO  21:12:03,113 - #7 )
INFO  21:12:03,114 - #11 +
INFO  21:12:03,116 - #36 new
INFO  21:12:03,117 - #16 int
INFO  21:12:03,117 - #50 [
INFO  21:12:03,117 - #15 5
INFO  21:12:03,117 - #51 ]
INFO  21:12:03,117 - #5 ;
INFO  21:12:03,117 - #16 a
INFO  21:12:03,117 - #43 .
INFO  21:12:03,117 - #16 b
INFO  21:12:03,117 - #50 [
INFO  21:12:03,117 - #15 3
INFO  21:12:03,117 - #51 ]
INFO  21:12:03,117 - #43 .
INFO  21:12:03,117 - #16 c
INFO  21:12:03,117 - #6 (
INFO  21:12:03,118 - #15 5
INFO  21:12:03,118 - #8 ,
INFO  21:12:03,119 - #15 17
INFO  21:12:03,119 - #7 )
INFO  21:12:03,120 - #5 ;
INFO  21:12:03,120 - #34 do
INFO  21:12:03,120 - #3 {
INFO  21:12:03,120 - #10 return
INFO  21:12:03,120 - #5 ;
INFO  21:12:03,120 - #4 }
INFO  21:12:03,121 - #35 while
INFO  21:12:03,121 - #6 (
INFO  21:12:03,121 - #15 5
INFO  21:12:03,121 - #22 ==
INFO  21:12:03,121 - #15 7
INFO  21:12:03,121 - #45 ||
INFO  21:12:03,122 - #15 5
INFO  21:12:03,122 - #27 <=
INFO  21:12:03,122 - #15 3
INFO  21:12:03,123 - #44 &&
INFO  21:12:03,123 - #15 7
INFO  21:12:03,123 - #23 !=
INFO  21:12:03,123 - #15 2
INFO  21:12:03,123 - #7 )
INFO  21:12:03,124 - #5 ;
INFO  21:12:03,124 - #19 if
INFO  21:12:03,124 - #6 (
INFO  21:12:03,124 - #15 5
INFO  21:12:03,124 - #22 ==
INFO  21:12:03,124 - #15 6
INFO  21:12:03,124 - #7 )
INFO  21:12:03,124 - #3 {
INFO  21:12:03,124 - #16 x
INFO  21:12:03,124 - #13 =
INFO  21:12:03,124 - #15 3
INFO  21:12:03,125 - #5 ;
INFO  21:12:03,125 - #4 }
INFO  21:12:03,125 - #4 }
INFO  21:12:03,125 - #4 }
INFO  21:12:03,125 - #4 }
INFO  21:12:03,125 - #4 }
INFO  21:12:03,126 - #49 record
INFO  21:12:03,126 - #16 rekord
INFO  21:12:03,126 - #3 {
INFO  21:12:03,126 - #16 int
INFO  21:12:03,126 - #16 a
INFO  21:12:03,126 - #5 ;
INFO  21:12:03,126 - #16 char
INFO  21:12:03,126 - #16 b
INFO  21:12:03,126 - #5 ;
INFO  21:12:03,126 - #4 }
INFO  21:12:03,127 - #3 {
INFO  21:12:03,127 - #4 }
