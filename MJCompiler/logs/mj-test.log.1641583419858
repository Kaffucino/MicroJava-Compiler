INFO  20:22:56,722 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  20:22:56,754 - #2 program
INFO  20:22:56,754 - #16 Ime
INFO  20:22:56,754 - #48 const
INFO  20:22:56,754 - #16 tip
INFO  20:22:56,754 - #16 x
INFO  20:22:56,755 - #13 =
INFO  20:22:56,755 - #15 8
INFO  20:22:56,755 - #8 ,
INFO  20:22:56,755 - #16 y
INFO  20:22:56,755 - #13 =
INFO  20:22:56,756 - #17 'i'
INFO  20:22:56,756 - #8 ,
INFO  20:22:56,756 - #16 z
INFO  20:22:56,756 - #13 =
INFO  20:22:56,756 - #18 true
INFO  20:22:56,756 - #5 ;
INFO  20:22:56,756 - #16 int
INFO  20:22:56,757 - #16 x
INFO  20:22:56,757 - #50 [
INFO  20:22:56,758 - #51 ]
INFO  20:22:56,758 - #8 ,
INFO  20:22:56,758 - #16 y
INFO  20:22:56,758 - #8 ,
INFO  20:22:56,759 - #16 a
INFO  20:22:56,759 - #50 [
INFO  20:22:56,760 - #51 ]
INFO  20:22:56,760 - #8 ,
INFO  20:22:56,760 - #16 f
INFO  20:22:56,760 - #5 ;
INFO  20:22:56,760 - #32 class
INFO  20:22:56,760 - #16 Board
INFO  20:22:56,760 - #38 extends
INFO  20:22:56,760 - #16 Polje
INFO  20:22:56,760 - #3 {
INFO  20:22:56,761 - #16 int
INFO  20:22:56,761 - #16 a
INFO  20:22:56,761 - #5 ;
INFO  20:22:56,761 - #3 {
INFO  20:22:56,762 - #14 void
INFO  20:22:56,763 - #16 funckija
INFO  20:22:56,763 - #6 (
INFO  20:22:56,763 - #16 bool
INFO  20:22:56,763 - #16 a
INFO  20:22:56,763 - #50 [
INFO  20:22:56,763 - #51 ]
INFO  20:22:56,763 - #8 ,
INFO  20:22:56,763 - #16 int
INFO  20:22:56,763 - #16 aa
INFO  20:22:56,763 - #8 ,
INFO  20:22:56,763 - #16 char
INFO  20:22:56,763 - #16 c
INFO  20:22:56,763 - #7 )
INFO  20:22:56,764 - #16 int
INFO  20:22:56,764 - #16 y
INFO  20:22:56,764 - #5 ;
INFO  20:22:56,764 - #3 {
INFO  20:22:56,764 - #3 {
INFO  20:22:56,764 - #39 continue
INFO  20:22:56,764 - #5 ;
INFO  20:22:56,764 - #10 return
INFO  20:22:56,765 - #12 -
INFO  20:22:56,765 - #15 5
INFO  20:22:56,765 - #11 +
INFO  20:22:56,766 - #15 7
INFO  20:22:56,766 - #28 *
INFO  20:22:56,766 - #15 2
INFO  20:22:56,767 - #12 -
INFO  20:22:56,767 - #6 (
INFO  20:22:56,770 - #15 13
INFO  20:22:56,770 - #28 *
INFO  20:22:56,770 - #15 7
INFO  20:22:56,770 - #7 )
INFO  20:22:56,771 - #11 +
INFO  20:22:56,771 - #36 new
INFO  20:22:56,771 - #16 int
INFO  20:22:56,771 - #50 [
INFO  20:22:56,771 - #15 5
INFO  20:22:56,771 - #51 ]
INFO  20:22:56,771 - #5 ;
INFO  20:22:56,771 - #16 a
INFO  20:22:56,772 - #43 .
INFO  20:22:56,772 - #16 b
INFO  20:22:56,772 - #50 [
INFO  20:22:56,773 - #15 3
INFO  20:22:56,774 - #51 ]
INFO  20:22:56,774 - #43 .
INFO  20:22:56,774 - #16 c
INFO  20:22:56,774 - #6 (
INFO  20:22:56,775 - #15 5
INFO  20:22:56,775 - #8 ,
INFO  20:22:56,775 - #15 17
INFO  20:22:56,775 - #7 )
INFO  20:22:56,776 - #5 ;
INFO  20:22:56,776 - #34 do
INFO  20:22:56,777 - #3 {
INFO  20:22:56,777 - #10 return
INFO  20:22:56,777 - #5 ;
INFO  20:22:56,777 - #4 }
INFO  20:22:56,777 - #35 while
INFO  20:22:56,779 - #6 (
INFO  20:22:56,779 - #15 5
INFO  20:22:56,779 - #22 ==
INFO  20:22:56,779 - #15 7
INFO  20:22:56,779 - #45 ||
INFO  20:22:56,780 - #15 5
INFO  20:22:56,780 - #27 <=
INFO  20:22:56,780 - #15 3
INFO  20:22:56,780 - #44 &&
INFO  20:22:56,780 - #15 7
INFO  20:22:56,781 - #23 !=
INFO  20:22:56,781 - #15 2
INFO  20:22:56,781 - #7 )
INFO  20:22:56,782 - #5 ;
INFO  20:22:56,782 - #19 if
INFO  20:22:56,782 - #6 (
INFO  20:22:56,782 - #15 5
INFO  20:22:56,782 - #22 ==
INFO  20:22:56,782 - #15 6
INFO  20:22:56,782 - #7 )
INFO  20:22:56,782 - #3 {
INFO  20:22:56,782 - #16 x
INFO  20:22:56,782 - #13 =
INFO  20:22:56,782 - #15 3
INFO  20:22:56,783 - #5 ;
INFO  20:22:56,783 - #4 }
INFO  20:22:56,783 - #4 }
INFO  20:22:56,783 - #4 }
INFO  20:22:56,783 - #4 }
INFO  20:22:56,784 - #4 }
INFO  20:22:56,784 - #49 record
INFO  20:22:56,784 - #16 rekord
INFO  20:22:56,784 - #3 {
INFO  20:22:56,784 - #16 int
INFO  20:22:56,784 - #16 a
INFO  20:22:56,784 - #5 ;
INFO  20:22:56,784 - #16 char
INFO  20:22:56,784 - #16 b
INFO  20:22:56,784 - #5 ;
INFO  20:22:56,784 - #4 }
INFO  20:22:56,785 - #3 {
INFO  20:22:56,785 - #4 }
