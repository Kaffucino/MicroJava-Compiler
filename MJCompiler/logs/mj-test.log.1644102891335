INFO  00:12:33,510 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  00:12:33,542 - #2 program
INFO  00:12:33,542 - #16 test302
INFO  00:12:33,543 - #48 const
INFO  00:12:33,543 - #16 int
INFO  00:12:33,543 - #16 jedan
INFO  00:12:33,543 - #13 =
INFO  00:12:33,543 - #15 1
INFO  00:12:33,544 - #5 ;
INFO  00:12:33,544 - #16 int
INFO  00:12:33,544 - #16 i
INFO  00:12:33,544 - #5 ;
INFO  00:12:33,545 - #16 bool
INFO  00:12:33,545 - #16 ibool
INFO  00:12:33,545 - #5 ;
INFO  00:12:33,545 - #16 int
INFO  00:12:33,545 - #16 niz2
INFO  00:12:33,545 - #5 ;
INFO  00:12:33,546 - #49 record
INFO  00:12:33,546 - #16 Test
INFO  00:12:33,546 - #3 {
INFO  00:12:33,546 - #16 int
INFO  00:12:33,546 - #16 niz
INFO  00:12:33,551 - #50 [
INFO  00:12:33,551 - #51 ]
INFO  00:12:33,551 - #5 ;
INFO  00:12:33,551 - #16 int
INFO  00:12:33,552 - #16 a
INFO  00:12:33,552 - #5 ;
INFO  00:12:33,552 - #4 }
INFO  00:12:33,552 - #16 Test
INFO  00:12:33,553 - #16 t1
INFO  00:12:33,553 - #8 ,
INFO  00:12:33,553 - #16 t2
INFO  00:12:33,553 - #5 ;
INFO  00:12:33,553 - #3 {
INFO  00:12:33,553 - #16 int
INFO  00:12:33,553 - #16 sum
INFO  00:12:33,554 - #6 (
INFO  00:12:33,554 - #16 int
INFO  00:12:33,554 - #16 z
INFO  00:12:33,554 - #8 ,
INFO  00:12:33,554 - #16 int
INFO  00:12:33,554 - #16 d
INFO  00:12:33,554 - #7 )
INFO  00:12:33,555 - #3 {
INFO  00:12:33,555 - #10 return
INFO  00:12:33,555 - #16 z
INFO  00:12:33,555 - #11 +
INFO  00:12:33,556 - #16 d
INFO  00:12:33,557 - #5 ;
INFO  00:12:33,557 - #4 }
INFO  00:12:33,558 - #16 int
INFO  00:12:33,558 - #16 inkrement
INFO  00:12:33,558 - #6 (
INFO  00:12:33,558 - #16 int
INFO  00:12:33,558 - #16 a
INFO  00:12:33,559 - #8 ,
INFO  00:12:33,559 - #16 int
INFO  00:12:33,559 - #16 inc
INFO  00:12:33,559 - #7 )
INFO  00:12:33,559 - #16 int
INFO  00:12:33,559 - #16 pom
INFO  00:12:33,559 - #5 ;
INFO  00:12:33,559 - #3 {
INFO  00:12:33,559 - #19 if
INFO  00:12:33,559 - #6 (
INFO  00:12:33,559 - #16 inc
INFO  00:12:33,559 - #22 ==
INFO  00:12:33,562 - #16 jedan
INFO  00:12:33,563 - #7 )
INFO  00:12:33,564 - #16 pom
INFO  00:12:33,564 - #13 =
INFO  00:12:33,564 - #15 1
INFO  00:12:33,564 - #5 ;
INFO  00:12:33,565 - #20 else
INFO  00:12:33,565 - #19 if
INFO  00:12:33,565 - #6 (
INFO  00:12:33,565 - #16 inc
INFO  00:12:33,565 - #22 ==
INFO  00:12:33,565 - #15 2
INFO  00:12:33,565 - #7 )
INFO  00:12:33,565 - #16 pom
INFO  00:12:33,565 - #13 =
INFO  00:12:33,565 - #16 a
INFO  00:12:33,565 - #5 ;
INFO  00:12:33,565 - #10 return
INFO  00:12:33,566 - #16 sum
INFO  00:12:33,566 - #6 (
INFO  00:12:33,566 - #16 a
INFO  00:12:33,566 - #8 ,
INFO  00:12:33,566 - #16 pom
INFO  00:12:33,566 - #7 )
INFO  00:12:33,567 - #5 ;
INFO  00:12:33,567 - #4 }
INFO  00:12:33,567 - #16 bool
INFO  00:12:33,567 - #16 verify
INFO  00:12:33,567 - #6 (
INFO  00:12:33,567 - #7 )
INFO  00:12:33,567 - #3 {
INFO  00:12:33,568 - #9 print
INFO  00:12:33,568 - #6 (
INFO  00:12:33,568 - #17 'v'
INFO  00:12:33,568 - #7 )
INFO  00:12:33,568 - #5 ;
INFO  00:12:33,568 - #10 return
INFO  00:12:33,568 - #18 false
INFO  00:12:33,568 - #5 ;
INFO  00:12:33,568 - #4 }
INFO  00:12:33,568 - #14 void
INFO  00:12:33,568 - #16 main
INFO  00:12:33,568 - #6 (
INFO  00:12:33,568 - #7 )
INFO  00:12:33,569 - #3 {
INFO  00:12:33,569 - #19 if
INFO  00:12:33,569 - #6 (
INFO  00:12:33,569 - #15 1
INFO  00:12:33,569 - #23 !=
INFO  00:12:33,569 - #15 1
INFO  00:12:33,569 - #7 )
INFO  00:12:33,569 - #9 print
INFO  00:12:33,569 - #6 (
INFO  00:12:33,569 - #12 -
INFO  00:12:33,569 - #15 6
INFO  00:12:33,569 - #7 )
INFO  00:12:33,569 - #5 ;
INFO  00:12:33,570 - #20 else
INFO  00:12:33,570 - #9 print
INFO  00:12:33,570 - #6 (
INFO  00:12:33,570 - #15 0
INFO  00:12:33,570 - #7 )
INFO  00:12:33,570 - #5 ;
INFO  00:12:33,570 - #16 ibool
INFO  00:12:33,570 - #13 =
INFO  00:12:33,570 - #18 false
INFO  00:12:33,570 - #5 ;
INFO  00:12:33,570 - #16 i
INFO  00:12:33,570 - #13 =
INFO  00:12:33,570 - #15 0
INFO  00:12:33,570 - #5 ;
INFO  00:12:33,570 - #34 do
INFO  00:12:33,570 - #3 {
INFO  00:12:33,571 - #19 if
INFO  00:12:33,571 - #6 (
INFO  00:12:33,571 - #16 i
INFO  00:12:33,571 - #22 ==
INFO  00:12:33,571 - #15 2
INFO  00:12:33,571 - #7 )
INFO  00:12:33,571 - #16 ibool
INFO  00:12:33,571 - #13 =
INFO  00:12:33,571 - #18 true
INFO  00:12:33,571 - #5 ;
INFO  00:12:33,571 - #16 i
INFO  00:12:33,571 - #46 ++
INFO  00:12:33,571 - #5 ;
INFO  00:12:33,571 - #4 }
INFO  00:12:33,571 - #35 while
INFO  00:12:33,571 - #6 (
INFO  00:12:33,571 - #16 i
INFO  00:12:33,572 - #26 <
INFO  00:12:33,572 - #15 5
INFO  00:12:33,572 - #7 )
INFO  00:12:33,572 - #5 ;
INFO  00:12:33,572 - #19 if
INFO  00:12:33,572 - #6 (
INFO  00:12:33,572 - #16 ibool
INFO  00:12:33,572 - #7 )
INFO  00:12:33,573 - #19 if
INFO  00:12:33,573 - #6 (
INFO  00:12:33,573 - #16 i
INFO  00:12:33,573 - #22 ==
INFO  00:12:33,573 - #15 5
INFO  00:12:33,573 - #7 )
INFO  00:12:33,573 - #9 print
INFO  00:12:33,573 - #6 (
INFO  00:12:33,573 - #15 1
INFO  00:12:33,573 - #7 )
INFO  00:12:33,573 - #5 ;
INFO  00:12:33,573 - #20 else
INFO  00:12:33,573 - #9 print
INFO  00:12:33,573 - #6 (
INFO  00:12:33,573 - #12 -
INFO  00:12:33,573 - #15 1
INFO  00:12:33,573 - #7 )
INFO  00:12:33,573 - #5 ;
INFO  00:12:33,573 - #16 t1
INFO  00:12:33,573 - #13 =
INFO  00:12:33,573 - #36 new
INFO  00:12:33,573 - #16 Test
INFO  00:12:33,573 - #5 ;
INFO  00:12:33,573 - #16 t1
INFO  00:12:33,574 - #43 .
INFO  00:12:33,574 - #16 a
INFO  00:12:33,574 - #13 =
INFO  00:12:33,574 - #15 2
INFO  00:12:33,574 - #5 ;
INFO  00:12:33,574 - #16 t1
INFO  00:12:33,574 - #43 .
INFO  00:12:33,574 - #16 niz
INFO  00:12:33,574 - #13 =
INFO  00:12:33,574 - #36 new
INFO  00:12:33,574 - #16 int
INFO  00:12:33,574 - #50 [
INFO  00:12:33,574 - #15 3
INFO  00:12:33,574 - #51 ]
INFO  00:12:33,574 - #5 ;
INFO  00:12:33,574 - #16 t1
INFO  00:12:33,574 - #43 .
INFO  00:12:33,574 - #16 niz
INFO  00:12:33,574 - #50 [
INFO  00:12:33,574 - #15 0
INFO  00:12:33,574 - #51 ]
INFO  00:12:33,574 - #13 =
INFO  00:12:33,574 - #15 1
INFO  00:12:33,574 - #28 *
INFO  00:12:33,574 - #16 t1
INFO  00:12:33,575 - #43 .
INFO  00:12:33,575 - #16 a
INFO  00:12:33,575 - #5 ;
INFO  00:12:33,575 - #16 t1
INFO  00:12:33,575 - #43 .
INFO  00:12:33,575 - #16 niz
INFO  00:12:33,575 - #50 [
INFO  00:12:33,575 - #15 1
INFO  00:12:33,575 - #51 ]
INFO  00:12:33,575 - #13 =
INFO  00:12:33,575 - #15 2
INFO  00:12:33,575 - #28 *
INFO  00:12:33,575 - #16 t1
INFO  00:12:33,575 - #43 .
INFO  00:12:33,575 - #16 a
INFO  00:12:33,575 - #5 ;
INFO  00:12:33,575 - #16 t1
INFO  00:12:33,576 - #43 .
INFO  00:12:33,576 - #16 niz
INFO  00:12:33,576 - #50 [
INFO  00:12:33,576 - #15 2
INFO  00:12:33,576 - #51 ]
INFO  00:12:33,576 - #13 =
INFO  00:12:33,576 - #16 sum
INFO  00:12:33,576 - #6 (
INFO  00:12:33,576 - #16 t1
INFO  00:12:33,576 - #43 .
INFO  00:12:33,576 - #16 niz
INFO  00:12:33,576 - #50 [
INFO  00:12:33,576 - #15 1
INFO  00:12:33,576 - #51 ]
INFO  00:12:33,576 - #8 ,
INFO  00:12:33,576 - #16 t1
INFO  00:12:33,576 - #43 .
INFO  00:12:33,576 - #16 niz
INFO  00:12:33,576 - #50 [
INFO  00:12:33,576 - #15 0
INFO  00:12:33,576 - #51 ]
INFO  00:12:33,576 - #7 )
INFO  00:12:33,576 - #28 *
INFO  00:12:33,576 - #16 t1
INFO  00:12:33,576 - #43 .
INFO  00:12:33,576 - #16 a
INFO  00:12:33,576 - #11 +
INFO  00:12:33,576 - #15 1
INFO  00:12:33,576 - #5 ;
INFO  00:12:33,576 - #19 if
INFO  00:12:33,576 - #6 (
INFO  00:12:33,577 - #16 verify
INFO  00:12:33,577 - #6 (
INFO  00:12:33,577 - #7 )
INFO  00:12:33,577 - #45 ||
INFO  00:12:33,577 - #16 t1
INFO  00:12:33,577 - #43 .
INFO  00:12:33,577 - #16 niz
INFO  00:12:33,577 - #50 [
INFO  00:12:33,577 - #15 2
INFO  00:12:33,577 - #51 ]
INFO  00:12:33,577 - #22 ==
INFO  00:12:33,577 - #15 4
INFO  00:12:33,577 - #7 )
INFO  00:12:33,577 - #9 print
INFO  00:12:33,577 - #6 (
INFO  00:12:33,577 - #16 ord
INFO  00:12:33,577 - #6 (
INFO  00:12:33,577 - #17 'A'
INFO  00:12:33,577 - #7 )
INFO  00:12:33,577 - #7 )
INFO  00:12:33,577 - #5 ;
INFO  00:12:33,578 - #20 else
INFO  00:12:33,578 - #9 print
INFO  00:12:33,578 - #6 (
INFO  00:12:33,578 - #16 ord
INFO  00:12:33,578 - #6 (
INFO  00:12:33,578 - #17 'a'
INFO  00:12:33,578 - #7 )
INFO  00:12:33,578 - #7 )
INFO  00:12:33,578 - #5 ;
INFO  00:12:33,578 - #9 print
INFO  00:12:33,578 - #6 (
INFO  00:12:33,578 - #16 eol
INFO  00:12:33,578 - #7 )
INFO  00:12:33,578 - #5 ;
INFO  00:12:33,578 - #16 i
INFO  00:12:33,578 - #13 =
INFO  00:12:33,578 - #15 0
INFO  00:12:33,578 - #5 ;
INFO  00:12:33,578 - #34 do
INFO  00:12:33,578 - #3 {
INFO  00:12:33,578 - #19 if
INFO  00:12:33,578 - #6 (
INFO  00:12:33,578 - #16 i
INFO  00:12:33,578 - #22 ==
INFO  00:12:33,578 - #15 3
INFO  00:12:33,578 - #7 )
INFO  00:12:33,578 - #3 {
INFO  00:12:33,578 - #16 i
INFO  00:12:33,578 - #46 ++
INFO  00:12:33,578 - #5 ;
INFO  00:12:33,578 - #39 continue
INFO  00:12:33,578 - #5 ;
INFO  00:12:33,578 - #4 }
INFO  00:12:33,579 - #19 if
INFO  00:12:33,579 - #6 (
INFO  00:12:33,579 - #16 i
INFO  00:12:33,579 - #22 ==
INFO  00:12:33,579 - #15 4
INFO  00:12:33,579 - #7 )
INFO  00:12:33,579 - #31 break
INFO  00:12:33,579 - #5 ;
INFO  00:12:33,579 - #16 i
INFO  00:12:33,579 - #13 =
INFO  00:12:33,579 - #16 inkrement
INFO  00:12:33,579 - #6 (
INFO  00:12:33,579 - #16 i
INFO  00:12:33,579 - #8 ,
INFO  00:12:33,580 - #15 1
INFO  00:12:33,580 - #7 )
INFO  00:12:33,580 - #5 ;
INFO  00:12:33,580 - #4 }
INFO  00:12:33,580 - #35 while
INFO  00:12:33,580 - #6 (
INFO  00:12:33,580 - #16 i
INFO  00:12:33,580 - #26 <
INFO  00:12:33,580 - #15 10
INFO  00:12:33,580 - #7 )
INFO  00:12:33,580 - #5 ;
INFO  00:12:33,580 - #19 if
INFO  00:12:33,580 - #6 (
INFO  00:12:33,580 - #16 i
INFO  00:12:33,580 - #22 ==
INFO  00:12:33,580 - #15 3
INFO  00:12:33,580 - #44 &&
INFO  00:12:33,580 - #16 verify
INFO  00:12:33,580 - #6 (
INFO  00:12:33,580 - #7 )
INFO  00:12:33,580 - #7 )
INFO  00:12:33,580 - #9 print
INFO  00:12:33,580 - #6 (
INFO  00:12:33,580 - #12 -
INFO  00:12:33,580 - #15 4
INFO  00:12:33,580 - #7 )
INFO  00:12:33,580 - #5 ;
INFO  00:12:33,580 - #20 else
INFO  00:12:33,580 - #9 print
INFO  00:12:33,580 - #6 (
INFO  00:12:33,580 - #15 4
INFO  00:12:33,580 - #7 )
INFO  00:12:33,580 - #5 ;
INFO  00:12:33,580 - #37 read
INFO  00:12:33,580 - #6 (
INFO  00:12:33,580 - #16 t1
INFO  00:12:33,580 - #43 .
INFO  00:12:33,580 - #16 niz
INFO  00:12:33,580 - #50 [
INFO  00:12:33,580 - #15 0
INFO  00:12:33,580 - #51 ]
INFO  00:12:33,581 - #7 )
INFO  00:12:33,581 - #5 ;
INFO  00:12:33,581 - #37 read
INFO  00:12:33,581 - #6 (
INFO  00:12:33,581 - #16 t1
INFO  00:12:33,581 - #43 .
INFO  00:12:33,581 - #16 niz
INFO  00:12:33,581 - #50 [
INFO  00:12:33,581 - #15 1
INFO  00:12:33,581 - #51 ]
INFO  00:12:33,581 - #7 )
INFO  00:12:33,581 - #5 ;
INFO  00:12:33,581 - #37 read
INFO  00:12:33,581 - #6 (
INFO  00:12:33,581 - #16 t1
INFO  00:12:33,581 - #43 .
INFO  00:12:33,581 - #16 niz
INFO  00:12:33,581 - #50 [
INFO  00:12:33,581 - #15 2
INFO  00:12:33,581 - #51 ]
INFO  00:12:33,581 - #7 )
INFO  00:12:33,581 - #5 ;
INFO  00:12:33,581 - #9 print
INFO  00:12:33,581 - #6 (
INFO  00:12:33,581 - #16 eol
INFO  00:12:33,581 - #7 )
INFO  00:12:33,581 - #5 ;
INFO  00:12:33,581 - #9 print
INFO  00:12:33,581 - #6 (
INFO  00:12:33,581 - #16 sum
INFO  00:12:33,581 - #6 (
INFO  00:12:33,581 - #16 sum
INFO  00:12:33,581 - #6 (
INFO  00:12:33,581 - #16 t1
INFO  00:12:33,581 - #43 .
INFO  00:12:33,581 - #16 niz
INFO  00:12:33,581 - #50 [
INFO  00:12:33,581 - #15 0
INFO  00:12:33,581 - #51 ]
INFO  00:12:33,581 - #8 ,
INFO  00:12:33,581 - #16 t1
INFO  00:12:33,581 - #43 .
INFO  00:12:33,581 - #16 niz
INFO  00:12:33,582 - #50 [
INFO  00:12:33,582 - #15 1
INFO  00:12:33,582 - #51 ]
INFO  00:12:33,582 - #7 )
INFO  00:12:33,582 - #8 ,
INFO  00:12:33,582 - #16 t1
INFO  00:12:33,582 - #43 .
INFO  00:12:33,582 - #16 niz
INFO  00:12:33,582 - #50 [
INFO  00:12:33,582 - #15 2
INFO  00:12:33,582 - #51 ]
INFO  00:12:33,582 - #7 )
INFO  00:12:33,582 - #7 )
INFO  00:12:33,582 - #5 ;
INFO  00:12:33,582 - #9 print
INFO  00:12:33,582 - #6 (
INFO  00:12:33,582 - #16 eol
INFO  00:12:33,582 - #7 )
INFO  00:12:33,582 - #5 ;
INFO  00:12:33,582 - #9 print
INFO  00:12:33,582 - #6 (
INFO  00:12:33,582 - #16 inkrement
INFO  00:12:33,582 - #6 (
INFO  00:12:33,582 - #16 t1
INFO  00:12:33,582 - #43 .
INFO  00:12:33,582 - #16 niz
INFO  00:12:33,582 - #50 [
INFO  00:12:33,582 - #15 2
INFO  00:12:33,582 - #51 ]
INFO  00:12:33,582 - #8 ,
INFO  00:12:33,582 - #15 2
INFO  00:12:33,582 - #7 )
INFO  00:12:33,582 - #7 )
INFO  00:12:33,582 - #5 ;
INFO  00:12:33,582 - #16 t2
INFO  00:12:33,582 - #13 =
INFO  00:12:33,582 - #36 new
INFO  00:12:33,582 - #16 Test
INFO  00:12:33,582 - #5 ;
INFO  00:12:33,582 - #16 t2
INFO  00:12:33,582 - #43 .
INFO  00:12:33,582 - #16 a
INFO  00:12:33,582 - #13 =
INFO  00:12:33,582 - #15 3
INFO  00:12:33,582 - #5 ;
INFO  00:12:33,582 - #16 t2
INFO  00:12:33,583 - #43 .
INFO  00:12:33,583 - #16 niz
INFO  00:12:33,583 - #13 =
INFO  00:12:33,583 - #36 new
INFO  00:12:33,583 - #16 int
INFO  00:12:33,583 - #50 [
INFO  00:12:33,583 - #15 3
INFO  00:12:33,583 - #51 ]
INFO  00:12:33,583 - #5 ;
INFO  00:12:33,583 - #16 i
INFO  00:12:33,583 - #13 =
INFO  00:12:33,583 - #15 0
INFO  00:12:33,583 - #5 ;
INFO  00:12:33,583 - #34 do
INFO  00:12:33,583 - #3 {
INFO  00:12:33,583 - #16 t2
INFO  00:12:33,583 - #43 .
INFO  00:12:33,583 - #16 niz
INFO  00:12:33,583 - #50 [
INFO  00:12:33,583 - #16 i
INFO  00:12:33,583 - #51 ]
INFO  00:12:33,583 - #13 =
INFO  00:12:33,583 - #16 t1
INFO  00:12:33,583 - #43 .
INFO  00:12:33,583 - #16 niz
INFO  00:12:33,583 - #50 [
INFO  00:12:33,583 - #16 i
INFO  00:12:33,583 - #51 ]
INFO  00:12:33,584 - #28 *
INFO  00:12:33,584 - #15 2
INFO  00:12:33,584 - #28 *
INFO  00:12:33,584 - #16 t2
INFO  00:12:33,584 - #43 .
INFO  00:12:33,584 - #16 a
INFO  00:12:33,584 - #5 ;
INFO  00:12:33,584 - #16 i
INFO  00:12:33,584 - #46 ++
INFO  00:12:33,584 - #5 ;
INFO  00:12:33,584 - #4 }
INFO  00:12:33,584 - #35 while
INFO  00:12:33,584 - #6 (
INFO  00:12:33,584 - #16 i
INFO  00:12:33,584 - #26 <
INFO  00:12:33,584 - #15 3
INFO  00:12:33,584 - #7 )
INFO  00:12:33,584 - #5 ;
INFO  00:12:33,585 - #9 print
INFO  00:12:33,585 - #6 (
INFO  00:12:33,585 - #16 t2
INFO  00:12:33,585 - #43 .
INFO  00:12:33,585 - #16 niz
INFO  00:12:33,585 - #50 [
INFO  00:12:33,585 - #15 0
INFO  00:12:33,585 - #51 ]
INFO  00:12:33,585 - #7 )
INFO  00:12:33,585 - #5 ;
INFO  00:12:33,585 - #9 print
INFO  00:12:33,585 - #6 (
INFO  00:12:33,586 - #16 t2
INFO  00:12:33,586 - #43 .
INFO  00:12:33,586 - #16 niz
INFO  00:12:33,586 - #50 [
INFO  00:12:33,586 - #15 1
INFO  00:12:33,586 - #51 ]
INFO  00:12:33,586 - #7 )
INFO  00:12:33,586 - #5 ;
INFO  00:12:33,586 - #9 print
INFO  00:12:33,586 - #6 (
INFO  00:12:33,586 - #16 t2
INFO  00:12:33,586 - #43 .
INFO  00:12:33,586 - #16 niz
INFO  00:12:33,586 - #50 [
INFO  00:12:33,586 - #15 2
INFO  00:12:33,586 - #51 ]
INFO  00:12:33,586 - #7 )
INFO  00:12:33,586 - #5 ;
INFO  00:12:33,586 - #9 print
INFO  00:12:33,586 - #6 (
INFO  00:12:33,586 - #16 eol
INFO  00:12:33,586 - #7 )
INFO  00:12:33,586 - #5 ;
INFO  00:12:33,586 - #16 i
INFO  00:12:33,586 - #13 =
INFO  00:12:33,586 - #15 0
INFO  00:12:33,587 - #5 ;
INFO  00:12:33,587 - #16 niz2
INFO  00:12:33,587 - #13 =
INFO  00:12:33,587 - #15 0
INFO  00:12:33,587 - #5 ;
INFO  00:12:33,587 - #34 do
INFO  00:12:33,587 - #3 {
INFO  00:12:33,587 - #16 niz2
INFO  00:12:33,587 - #13 =
INFO  00:12:33,587 - #16 niz2
INFO  00:12:33,587 - #11 +
INFO  00:12:33,587 - #16 t1
INFO  00:12:33,587 - #43 .
INFO  00:12:33,587 - #16 niz
INFO  00:12:33,587 - #50 [
INFO  00:12:33,587 - #16 i
INFO  00:12:33,587 - #51 ]
INFO  00:12:33,587 - #28 *
INFO  00:12:33,587 - #16 t2
INFO  00:12:33,587 - #43 .
INFO  00:12:33,587 - #16 niz
INFO  00:12:33,587 - #50 [
INFO  00:12:33,587 - #16 i
INFO  00:12:33,587 - #51 ]
INFO  00:12:33,587 - #5 ;
INFO  00:12:33,587 - #16 i
INFO  00:12:33,587 - #46 ++
INFO  00:12:33,587 - #5 ;
INFO  00:12:33,587 - #4 }
INFO  00:12:33,587 - #35 while
INFO  00:12:33,587 - #6 (
INFO  00:12:33,587 - #16 i
INFO  00:12:33,587 - #26 <
INFO  00:12:33,587 - #15 3
INFO  00:12:33,587 - #7 )
INFO  00:12:33,587 - #5 ;
INFO  00:12:33,587 - #9 print
INFO  00:12:33,587 - #6 (
INFO  00:12:33,587 - #16 niz2
INFO  00:12:33,587 - #7 )
INFO  00:12:33,587 - #5 ;
INFO  00:12:33,587 - #9 print
INFO  00:12:33,587 - #6 (
INFO  00:12:33,588 - #16 eol
INFO  00:12:33,588 - #7 )
INFO  00:12:33,588 - #5 ;
INFO  00:12:33,588 - #4 }
INFO  00:12:33,588 - #4 }
INFO  00:12:33,595 - Trenutan tip konstante je:  int na liniji 5
INFO  00:12:33,595 - Deklarisana promenljiva i na liniji 7
INFO  00:12:33,595 - Deklarisana promenljiva ibool na liniji 8
INFO  00:12:33,595 - Deklarisana promenljiva niz2 na liniji 10
INFO  00:12:33,595 - Deklarisana je rekord :  Test na liniji 12
INFO  00:12:33,595 - Deklarisana promenljiva niz na liniji 13
INFO  00:12:33,595 - Deklarisana promenljiva a na liniji 14
INFO  00:12:33,596 - Deklarisana promenljiva t2 na liniji 17
INFO  00:12:33,596 - Deklarisana promenljiva t1 na liniji 17
INFO  00:12:33,596 - Obradjuje se funkcija sum na liniji 21
INFO  00:12:33,596 - Naveden argument d na liniji 21
INFO  00:12:33,596 - TypeNAME: int
INFO  00:12:33,596 - Naveden argument z na liniji 21
INFO  00:12:33,596 - TypeNAME: int
INFO  00:12:33,596 - Obradjuje se funkcija inkrement na liniji 26
INFO  00:12:33,596 - Naveden argument inc na liniji 26
INFO  00:12:33,596 - TypeNAME: int
INFO  00:12:33,596 - Naveden argument a na liniji 26
INFO  00:12:33,596 - TypeNAME: int
INFO  00:12:33,596 - Deklarisana promenljiva pom na liniji 27
INFO  00:12:33,596 - Obradjuje se funkcija verify na liniji 35
INFO  00:12:33,596 - Obradjuje se funkcija main na liniji 40
INFO  00:12:33,597 - DESAVA SE POZIV FUNCKIJE:sum na liniji 84
INFO  00:12:33,605 - Parsiranje uspesno zavrseno!
