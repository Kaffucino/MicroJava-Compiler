INFO  16:50:00,002 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  16:50:00,036 - #2 program
INFO  16:50:00,036 - #16 test302
INFO  16:50:00,036 - #48 const
INFO  16:50:00,036 - #16 int
INFO  16:50:00,036 - #16 jedan
INFO  16:50:00,037 - #13 =
INFO  16:50:00,037 - #15 1
INFO  16:50:00,037 - #5 ;
INFO  16:50:00,037 - #16 int
INFO  16:50:00,038 - #16 i
INFO  16:50:00,038 - #5 ;
INFO  16:50:00,038 - #16 bool
INFO  16:50:00,039 - #16 ibool
INFO  16:50:00,039 - #5 ;
INFO  16:50:00,039 - #16 int
INFO  16:50:00,039 - #16 niz2
INFO  16:50:00,039 - #5 ;
INFO  16:50:00,039 - #49 record
INFO  16:50:00,039 - #16 Test
INFO  16:50:00,039 - #3 {
INFO  16:50:00,039 - #16 int
INFO  16:50:00,039 - #16 niz
INFO  16:50:00,039 - #50 [
INFO  16:50:00,039 - #51 ]
INFO  16:50:00,039 - #5 ;
INFO  16:50:00,039 - #16 int
INFO  16:50:00,040 - #16 a
INFO  16:50:00,040 - #5 ;
INFO  16:50:00,040 - #4 }
INFO  16:50:00,040 - #16 Test
INFO  16:50:00,040 - #16 t1
INFO  16:50:00,040 - #8 ,
INFO  16:50:00,040 - #16 t2
INFO  16:50:00,040 - #5 ;
INFO  16:50:00,041 - #3 {
INFO  16:50:00,041 - #16 int
INFO  16:50:00,041 - #16 sum
INFO  16:50:00,041 - #6 (
INFO  16:50:00,042 - #16 int
INFO  16:50:00,042 - #16 z
INFO  16:50:00,042 - #8 ,
INFO  16:50:00,042 - #16 int
INFO  16:50:00,042 - #16 d
INFO  16:50:00,042 - #7 )
INFO  16:50:00,042 - #3 {
INFO  16:50:00,043 - #10 return
INFO  16:50:00,043 - #16 z
INFO  16:50:00,043 - #11 +
INFO  16:50:00,044 - #16 d
INFO  16:50:00,044 - #5 ;
INFO  16:50:00,045 - #4 }
INFO  16:50:00,046 - #16 int
INFO  16:50:00,046 - #16 inkrement
INFO  16:50:00,046 - #6 (
INFO  16:50:00,046 - #16 int
INFO  16:50:00,046 - #16 a
INFO  16:50:00,046 - #8 ,
INFO  16:50:00,046 - #16 int
INFO  16:50:00,046 - #16 inc
INFO  16:50:00,046 - #7 )
INFO  16:50:00,046 - #16 int
INFO  16:50:00,046 - #16 pom
INFO  16:50:00,046 - #5 ;
INFO  16:50:00,046 - #3 {
INFO  16:50:00,046 - #19 if
INFO  16:50:00,046 - #6 (
INFO  16:50:00,046 - #16 inc
INFO  16:50:00,046 - #22 ==
INFO  16:50:00,050 - #16 jedan
INFO  16:50:00,051 - #7 )
INFO  16:50:00,052 - #16 pom
INFO  16:50:00,052 - #13 =
INFO  16:50:00,052 - #15 1
INFO  16:50:00,052 - #5 ;
INFO  16:50:00,052 - #20 else
INFO  16:50:00,052 - #19 if
INFO  16:50:00,053 - #6 (
INFO  16:50:00,053 - #16 inc
INFO  16:50:00,053 - #22 ==
INFO  16:50:00,053 - #15 2
INFO  16:50:00,053 - #7 )
INFO  16:50:00,053 - #16 pom
INFO  16:50:00,053 - #13 =
INFO  16:50:00,053 - #16 a
INFO  16:50:00,053 - #5 ;
INFO  16:50:00,053 - #10 return
INFO  16:50:00,054 - #16 sum
INFO  16:50:00,054 - #6 (
INFO  16:50:00,054 - #16 a
INFO  16:50:00,054 - #8 ,
INFO  16:50:00,054 - #16 pom
INFO  16:50:00,054 - #7 )
INFO  16:50:00,056 - #5 ;
INFO  16:50:00,056 - #4 }
INFO  16:50:00,057 - #16 bool
INFO  16:50:00,057 - #16 verify
INFO  16:50:00,057 - #6 (
INFO  16:50:00,057 - #7 )
INFO  16:50:00,057 - #3 {
INFO  16:50:00,057 - #9 print
INFO  16:50:00,057 - #6 (
INFO  16:50:00,058 - #17 'v'
INFO  16:50:00,058 - #7 )
INFO  16:50:00,058 - #5 ;
INFO  16:50:00,058 - #10 return
INFO  16:50:00,058 - #18 false
INFO  16:50:00,058 - #5 ;
INFO  16:50:00,058 - #4 }
INFO  16:50:00,058 - #14 void
INFO  16:50:00,058 - #16 main
INFO  16:50:00,058 - #6 (
INFO  16:50:00,058 - #7 )
INFO  16:50:00,058 - #3 {
INFO  16:50:00,058 - #19 if
INFO  16:50:00,058 - #6 (
INFO  16:50:00,059 - #15 1
INFO  16:50:00,059 - #23 !=
INFO  16:50:00,059 - #15 1
INFO  16:50:00,059 - #7 )
INFO  16:50:00,059 - #9 print
INFO  16:50:00,059 - #6 (
INFO  16:50:00,059 - #12 -
INFO  16:50:00,059 - #15 6
INFO  16:50:00,059 - #7 )
INFO  16:50:00,059 - #5 ;
INFO  16:50:00,059 - #20 else
INFO  16:50:00,059 - #9 print
INFO  16:50:00,060 - #6 (
INFO  16:50:00,060 - #15 0
INFO  16:50:00,060 - #7 )
INFO  16:50:00,060 - #5 ;
INFO  16:50:00,060 - #16 ibool
INFO  16:50:00,060 - #13 =
INFO  16:50:00,060 - #18 false
INFO  16:50:00,060 - #5 ;
INFO  16:50:00,060 - #16 i
INFO  16:50:00,060 - #13 =
INFO  16:50:00,060 - #15 0
INFO  16:50:00,060 - #5 ;
INFO  16:50:00,060 - #34 do
INFO  16:50:00,060 - #3 {
INFO  16:50:00,060 - #19 if
INFO  16:50:00,060 - #6 (
INFO  16:50:00,060 - #16 i
INFO  16:50:00,060 - #22 ==
INFO  16:50:00,061 - #15 2
INFO  16:50:00,061 - #7 )
INFO  16:50:00,061 - #16 ibool
INFO  16:50:00,061 - #13 =
INFO  16:50:00,061 - #18 true
INFO  16:50:00,061 - #5 ;
INFO  16:50:00,061 - #16 i
INFO  16:50:00,061 - #46 ++
INFO  16:50:00,061 - #5 ;
INFO  16:50:00,061 - #4 }
INFO  16:50:00,061 - #35 while
INFO  16:50:00,061 - #6 (
INFO  16:50:00,062 - #16 i
INFO  16:50:00,062 - #26 <
INFO  16:50:00,062 - #15 5
INFO  16:50:00,062 - #7 )
INFO  16:50:00,062 - #5 ;
INFO  16:50:00,062 - #19 if
INFO  16:50:00,062 - #6 (
INFO  16:50:00,063 - #16 ibool
INFO  16:50:00,063 - #7 )
INFO  16:50:00,063 - #19 if
INFO  16:50:00,063 - #6 (
INFO  16:50:00,063 - #16 i
INFO  16:50:00,063 - #22 ==
INFO  16:50:00,063 - #15 5
INFO  16:50:00,063 - #7 )
INFO  16:50:00,063 - #9 print
INFO  16:50:00,063 - #6 (
INFO  16:50:00,063 - #15 1
INFO  16:50:00,063 - #7 )
INFO  16:50:00,063 - #5 ;
INFO  16:50:00,063 - #20 else
INFO  16:50:00,063 - #9 print
INFO  16:50:00,063 - #6 (
INFO  16:50:00,063 - #12 -
INFO  16:50:00,063 - #15 1
INFO  16:50:00,063 - #7 )
INFO  16:50:00,063 - #5 ;
INFO  16:50:00,063 - #16 t1
INFO  16:50:00,064 - #13 =
INFO  16:50:00,064 - #36 new
INFO  16:50:00,064 - #16 Test
INFO  16:50:00,064 - #5 ;
INFO  16:50:00,064 - #16 t1
INFO  16:50:00,064 - #43 .
INFO  16:50:00,064 - #16 a
INFO  16:50:00,064 - #13 =
INFO  16:50:00,064 - #15 2
INFO  16:50:00,064 - #5 ;
INFO  16:50:00,064 - #16 t1
INFO  16:50:00,064 - #43 .
INFO  16:50:00,064 - #16 niz
INFO  16:50:00,064 - #13 =
INFO  16:50:00,064 - #36 new
INFO  16:50:00,064 - #16 int
INFO  16:50:00,064 - #50 [
INFO  16:50:00,064 - #15 3
INFO  16:50:00,064 - #51 ]
INFO  16:50:00,064 - #5 ;
INFO  16:50:00,064 - #16 t1
INFO  16:50:00,064 - #43 .
INFO  16:50:00,064 - #16 niz
INFO  16:50:00,064 - #50 [
INFO  16:50:00,064 - #15 0
INFO  16:50:00,064 - #51 ]
INFO  16:50:00,065 - #13 =
INFO  16:50:00,065 - #15 1
INFO  16:50:00,065 - #28 *
INFO  16:50:00,065 - #16 t1
INFO  16:50:00,066 - #43 .
INFO  16:50:00,066 - #16 a
INFO  16:50:00,066 - #5 ;
INFO  16:50:00,067 - #16 t1
INFO  16:50:00,067 - #43 .
INFO  16:50:00,067 - #16 niz
INFO  16:50:00,067 - #50 [
INFO  16:50:00,067 - #15 1
INFO  16:50:00,067 - #51 ]
INFO  16:50:00,067 - #13 =
INFO  16:50:00,067 - #15 2
INFO  16:50:00,067 - #28 *
INFO  16:50:00,067 - #16 t1
INFO  16:50:00,067 - #43 .
INFO  16:50:00,067 - #16 a
INFO  16:50:00,067 - #5 ;
INFO  16:50:00,067 - #16 t1
INFO  16:50:00,067 - #43 .
INFO  16:50:00,067 - #16 niz
INFO  16:50:00,068 - #50 [
INFO  16:50:00,068 - #15 2
INFO  16:50:00,068 - #51 ]
INFO  16:50:00,068 - #13 =
INFO  16:50:00,068 - #16 sum
INFO  16:50:00,068 - #6 (
INFO  16:50:00,068 - #16 t1
INFO  16:50:00,068 - #43 .
INFO  16:50:00,068 - #16 niz
INFO  16:50:00,068 - #50 [
INFO  16:50:00,068 - #15 1
INFO  16:50:00,068 - #51 ]
INFO  16:50:00,068 - #8 ,
INFO  16:50:00,068 - #16 t1
INFO  16:50:00,068 - #43 .
INFO  16:50:00,068 - #16 niz
INFO  16:50:00,068 - #50 [
INFO  16:50:00,068 - #15 0
INFO  16:50:00,068 - #51 ]
INFO  16:50:00,068 - #7 )
INFO  16:50:00,068 - #28 *
INFO  16:50:00,068 - #16 t1
INFO  16:50:00,068 - #43 .
INFO  16:50:00,068 - #16 a
INFO  16:50:00,068 - #11 +
INFO  16:50:00,068 - #15 1
INFO  16:50:00,068 - #5 ;
INFO  16:50:00,068 - #19 if
INFO  16:50:00,068 - #6 (
INFO  16:50:00,068 - #16 verify
INFO  16:50:00,068 - #6 (
INFO  16:50:00,068 - #7 )
ERROR 16:50:00,069 - 
Sintaksna greska na liniji 61
INFO  16:50:00,069 - #45 ||
INFO  16:50:00,069 - #16 t1
INFO  16:50:00,069 - #43 .
INFO  16:50:00,069 - #16 niz
INFO  16:50:00,069 - #50 [
INFO  16:50:00,069 - #15 2
INFO  16:50:00,069 - #51 ]
INFO  16:50:00,069 - #22 ==
INFO  16:50:00,070 - #15 4
INFO  16:50:00,070 - #7 )
INFO  16:50:00,070 - #9 print
INFO  16:50:00,070 - #6 (
INFO  16:50:00,070 - #16 ord
ERROR 16:50:00,070 - Izvrsen oporavak do ) u liniji 61
INFO  16:50:00,070 - #6 (
INFO  16:50:00,070 - #17 'A'
INFO  16:50:00,070 - #7 )
INFO  16:50:00,070 - #7 )
INFO  16:50:00,070 - #5 ;
INFO  16:50:00,070 - #20 else
INFO  16:50:00,070 - #9 print
INFO  16:50:00,070 - #6 (
INFO  16:50:00,070 - #16 ord
INFO  16:50:00,070 - #6 (
INFO  16:50:00,070 - #17 'a'
INFO  16:50:00,070 - #7 )
INFO  16:50:00,070 - #7 )
INFO  16:50:00,070 - #5 ;
INFO  16:50:00,070 - #9 print
INFO  16:50:00,070 - #6 (
INFO  16:50:00,070 - #16 eol
INFO  16:50:00,070 - #7 )
INFO  16:50:00,070 - #5 ;
INFO  16:50:00,071 - #16 i
INFO  16:50:00,071 - #13 =
INFO  16:50:00,071 - #15 0
INFO  16:50:00,071 - #5 ;
INFO  16:50:00,071 - #34 do
INFO  16:50:00,071 - #3 {
INFO  16:50:00,071 - #19 if
INFO  16:50:00,071 - #6 (
INFO  16:50:00,071 - #16 i
INFO  16:50:00,071 - #22 ==
INFO  16:50:00,071 - #15 3
INFO  16:50:00,071 - #7 )
INFO  16:50:00,071 - #3 {
INFO  16:50:00,071 - #16 i
INFO  16:50:00,071 - #46 ++
INFO  16:50:00,071 - #5 ;
INFO  16:50:00,071 - #39 continue
INFO  16:50:00,071 - #5 ;
INFO  16:50:00,071 - #4 }
INFO  16:50:00,072 - #19 if
INFO  16:50:00,072 - #6 (
INFO  16:50:00,072 - #16 i
INFO  16:50:00,072 - #22 ==
INFO  16:50:00,072 - #15 4
INFO  16:50:00,072 - #7 )
INFO  16:50:00,072 - #31 break
INFO  16:50:00,072 - #5 ;
INFO  16:50:00,072 - #16 i
INFO  16:50:00,072 - #13 =
INFO  16:50:00,073 - #16 inkrement
INFO  16:50:00,073 - #6 (
INFO  16:50:00,073 - #16 i
INFO  16:50:00,073 - #8 ,
INFO  16:50:00,073 - #15 1
INFO  16:50:00,073 - #7 )
INFO  16:50:00,073 - #5 ;
INFO  16:50:00,073 - #4 }
INFO  16:50:00,073 - #35 while
INFO  16:50:00,073 - #6 (
INFO  16:50:00,073 - #16 i
INFO  16:50:00,073 - #26 <
INFO  16:50:00,073 - #15 10
INFO  16:50:00,073 - #7 )
INFO  16:50:00,073 - #5 ;
INFO  16:50:00,073 - #19 if
INFO  16:50:00,073 - #6 (
INFO  16:50:00,073 - #16 i
INFO  16:50:00,073 - #22 ==
INFO  16:50:00,073 - #15 3
INFO  16:50:00,073 - #44 &&
INFO  16:50:00,073 - #16 verify
INFO  16:50:00,073 - #6 (
INFO  16:50:00,073 - #7 )
ERROR 16:50:00,073 - 
Sintaksna greska na liniji 76
INFO  16:50:00,073 - #7 )
INFO  16:50:00,073 - #9 print
INFO  16:50:00,073 - #6 (
INFO  16:50:00,073 - #12 -
ERROR 16:50:00,073 - Izvrsen oporavak do ) u liniji 76
INFO  16:50:00,073 - #15 4
INFO  16:50:00,073 - #7 )
INFO  16:50:00,073 - #5 ;
INFO  16:50:00,073 - #20 else
INFO  16:50:00,073 - #9 print
INFO  16:50:00,074 - #6 (
INFO  16:50:00,074 - #15 4
INFO  16:50:00,074 - #7 )
INFO  16:50:00,074 - #5 ;
INFO  16:50:00,074 - #37 read
INFO  16:50:00,074 - #6 (
INFO  16:50:00,074 - #16 t1
INFO  16:50:00,074 - #43 .
INFO  16:50:00,074 - #16 niz
INFO  16:50:00,074 - #50 [
INFO  16:50:00,074 - #15 0
INFO  16:50:00,074 - #51 ]
INFO  16:50:00,074 - #7 )
INFO  16:50:00,074 - #5 ;
INFO  16:50:00,074 - #37 read
INFO  16:50:00,074 - #6 (
INFO  16:50:00,074 - #16 t1
INFO  16:50:00,074 - #43 .
INFO  16:50:00,074 - #16 niz
INFO  16:50:00,075 - #50 [
INFO  16:50:00,075 - #15 1
INFO  16:50:00,075 - #51 ]
INFO  16:50:00,075 - #7 )
INFO  16:50:00,075 - #5 ;
INFO  16:50:00,075 - #37 read
INFO  16:50:00,075 - #6 (
INFO  16:50:00,075 - #16 t1
INFO  16:50:00,075 - #43 .
INFO  16:50:00,075 - #16 niz
INFO  16:50:00,075 - #50 [
INFO  16:50:00,075 - #15 2
INFO  16:50:00,075 - #51 ]
INFO  16:50:00,075 - #7 )
INFO  16:50:00,075 - #5 ;
INFO  16:50:00,075 - #9 print
INFO  16:50:00,075 - #6 (
INFO  16:50:00,075 - #16 eol
INFO  16:50:00,075 - #7 )
INFO  16:50:00,075 - #5 ;
INFO  16:50:00,075 - #9 print
INFO  16:50:00,075 - #6 (
INFO  16:50:00,075 - #16 sum
INFO  16:50:00,075 - #6 (
INFO  16:50:00,075 - #16 sum
INFO  16:50:00,075 - #6 (
INFO  16:50:00,075 - #16 t1
INFO  16:50:00,075 - #43 .
INFO  16:50:00,075 - #16 niz
INFO  16:50:00,075 - #50 [
INFO  16:50:00,075 - #15 0
INFO  16:50:00,075 - #51 ]
INFO  16:50:00,075 - #8 ,
INFO  16:50:00,075 - #16 t1
INFO  16:50:00,075 - #43 .
INFO  16:50:00,075 - #16 niz
INFO  16:50:00,075 - #50 [
INFO  16:50:00,075 - #15 1
INFO  16:50:00,075 - #51 ]
INFO  16:50:00,075 - #7 )
INFO  16:50:00,075 - #8 ,
INFO  16:50:00,075 - #16 t1
INFO  16:50:00,075 - #43 .
INFO  16:50:00,075 - #16 niz
INFO  16:50:00,075 - #50 [
INFO  16:50:00,075 - #15 2
INFO  16:50:00,075 - #51 ]
INFO  16:50:00,075 - #7 )
INFO  16:50:00,075 - #7 )
INFO  16:50:00,075 - #5 ;
INFO  16:50:00,075 - #9 print
INFO  16:50:00,075 - #6 (
INFO  16:50:00,075 - #16 eol
INFO  16:50:00,075 - #7 )
INFO  16:50:00,075 - #5 ;
INFO  16:50:00,076 - #9 print
INFO  16:50:00,076 - #6 (
INFO  16:50:00,076 - #16 inkrement
INFO  16:50:00,076 - #6 (
INFO  16:50:00,076 - #16 t1
INFO  16:50:00,076 - #43 .
INFO  16:50:00,076 - #16 niz
INFO  16:50:00,076 - #50 [
INFO  16:50:00,076 - #15 2
INFO  16:50:00,076 - #51 ]
INFO  16:50:00,076 - #8 ,
INFO  16:50:00,076 - #15 2
INFO  16:50:00,076 - #7 )
INFO  16:50:00,076 - #7 )
INFO  16:50:00,076 - #5 ;
INFO  16:50:00,076 - #16 t2
INFO  16:50:00,076 - #13 =
INFO  16:50:00,076 - #36 new
INFO  16:50:00,076 - #16 Test
INFO  16:50:00,076 - #5 ;
INFO  16:50:00,076 - #16 t2
INFO  16:50:00,076 - #43 .
INFO  16:50:00,076 - #16 a
INFO  16:50:00,076 - #13 =
INFO  16:50:00,076 - #15 3
INFO  16:50:00,076 - #5 ;
INFO  16:50:00,076 - #16 t2
INFO  16:50:00,076 - #43 .
INFO  16:50:00,076 - #16 niz
INFO  16:50:00,076 - #13 =
INFO  16:50:00,077 - #36 new
INFO  16:50:00,077 - #16 int
INFO  16:50:00,077 - #50 [
INFO  16:50:00,077 - #15 3
INFO  16:50:00,077 - #51 ]
INFO  16:50:00,077 - #5 ;
INFO  16:50:00,077 - #16 i
INFO  16:50:00,077 - #13 =
INFO  16:50:00,077 - #15 0
INFO  16:50:00,077 - #5 ;
INFO  16:50:00,077 - #34 do
INFO  16:50:00,077 - #3 {
INFO  16:50:00,077 - #16 t2
INFO  16:50:00,077 - #43 .
INFO  16:50:00,077 - #16 niz
INFO  16:50:00,077 - #50 [
INFO  16:50:00,077 - #16 i
INFO  16:50:00,077 - #51 ]
INFO  16:50:00,077 - #13 =
INFO  16:50:00,077 - #16 t1
INFO  16:50:00,077 - #43 .
INFO  16:50:00,077 - #16 niz
INFO  16:50:00,077 - #50 [
INFO  16:50:00,077 - #16 i
INFO  16:50:00,077 - #51 ]
INFO  16:50:00,077 - #28 *
INFO  16:50:00,077 - #15 2
INFO  16:50:00,077 - #28 *
INFO  16:50:00,077 - #16 t2
INFO  16:50:00,077 - #43 .
INFO  16:50:00,077 - #16 a
INFO  16:50:00,077 - #5 ;
INFO  16:50:00,077 - #16 i
INFO  16:50:00,077 - #46 ++
INFO  16:50:00,077 - #5 ;
INFO  16:50:00,077 - #4 }
INFO  16:50:00,077 - #35 while
INFO  16:50:00,077 - #6 (
INFO  16:50:00,077 - #16 i
INFO  16:50:00,077 - #26 <
INFO  16:50:00,077 - #15 3
INFO  16:50:00,077 - #7 )
INFO  16:50:00,077 - #5 ;
INFO  16:50:00,077 - #9 print
INFO  16:50:00,077 - #6 (
INFO  16:50:00,078 - #16 t2
INFO  16:50:00,078 - #43 .
INFO  16:50:00,080 - #16 niz
INFO  16:50:00,080 - #50 [
INFO  16:50:00,080 - #15 0
INFO  16:50:00,080 - #51 ]
INFO  16:50:00,080 - #7 )
INFO  16:50:00,080 - #5 ;
INFO  16:50:00,080 - #9 print
INFO  16:50:00,080 - #6 (
INFO  16:50:00,080 - #16 t2
INFO  16:50:00,080 - #43 .
INFO  16:50:00,080 - #16 niz
INFO  16:50:00,080 - #50 [
INFO  16:50:00,080 - #15 1
INFO  16:50:00,080 - #51 ]
INFO  16:50:00,080 - #7 )
INFO  16:50:00,080 - #5 ;
INFO  16:50:00,080 - #9 print
INFO  16:50:00,080 - #6 (
INFO  16:50:00,080 - #16 t2
INFO  16:50:00,080 - #43 .
INFO  16:50:00,080 - #16 niz
INFO  16:50:00,080 - #50 [
INFO  16:50:00,080 - #15 2
INFO  16:50:00,080 - #51 ]
INFO  16:50:00,080 - #7 )
INFO  16:50:00,080 - #5 ;
INFO  16:50:00,080 - #9 print
INFO  16:50:00,080 - #6 (
INFO  16:50:00,080 - #16 eol
INFO  16:50:00,080 - #7 )
INFO  16:50:00,080 - #5 ;
INFO  16:50:00,080 - #16 i
INFO  16:50:00,080 - #13 =
INFO  16:50:00,080 - #15 0
INFO  16:50:00,080 - #5 ;
INFO  16:50:00,081 - #16 niz2
INFO  16:50:00,081 - #13 =
INFO  16:50:00,081 - #15 0
INFO  16:50:00,081 - #5 ;
INFO  16:50:00,081 - #34 do
INFO  16:50:00,081 - #3 {
INFO  16:50:00,081 - #16 niz2
INFO  16:50:00,081 - #13 =
INFO  16:50:00,081 - #16 niz2
INFO  16:50:00,081 - #11 +
INFO  16:50:00,081 - #16 t1
INFO  16:50:00,081 - #43 .
INFO  16:50:00,081 - #16 niz
INFO  16:50:00,081 - #50 [
INFO  16:50:00,081 - #16 i
INFO  16:50:00,081 - #51 ]
INFO  16:50:00,081 - #28 *
INFO  16:50:00,081 - #16 t2
INFO  16:50:00,081 - #43 .
INFO  16:50:00,081 - #16 niz
INFO  16:50:00,081 - #50 [
INFO  16:50:00,081 - #16 i
INFO  16:50:00,081 - #51 ]
INFO  16:50:00,081 - #5 ;
INFO  16:50:00,081 - #16 i
INFO  16:50:00,081 - #46 ++
INFO  16:50:00,081 - #5 ;
INFO  16:50:00,081 - #4 }
INFO  16:50:00,082 - #35 while
INFO  16:50:00,082 - #6 (
INFO  16:50:00,082 - #16 i
INFO  16:50:00,082 - #26 <
INFO  16:50:00,082 - #15 3
INFO  16:50:00,082 - #7 )
INFO  16:50:00,082 - #5 ;
INFO  16:50:00,082 - #9 print
INFO  16:50:00,082 - #6 (
INFO  16:50:00,082 - #16 niz2
INFO  16:50:00,082 - #7 )
INFO  16:50:00,082 - #5 ;
INFO  16:50:00,082 - #9 print
INFO  16:50:00,082 - #6 (
INFO  16:50:00,082 - #16 eol
INFO  16:50:00,082 - #7 )
INFO  16:50:00,082 - #5 ;
INFO  16:50:00,082 - #4 }
INFO  16:50:00,082 - #4 }
INFO  16:50:00,088 - Trenutan tip konstante je:  int na liniji 5
INFO  16:50:00,088 - Deklarisana promenljiva i na liniji 7
INFO  16:50:00,089 - Deklarisana promenljiva ibool na liniji 8
INFO  16:50:00,089 - Deklarisana promenljiva niz2 na liniji 10
INFO  16:50:00,089 - Deklarisana promenljiva niz na liniji 13
INFO  16:50:00,089 - Deklarisana promenljiva a na liniji 14
INFO  16:50:00,089 - Deklarisana je rekord :  Test na liniji 12
INFO  16:50:00,089 - Deklarisana promenljiva t2 na liniji 17
INFO  16:50:00,089 - Deklarisana promenljiva t1 na liniji 17
INFO  16:50:00,089 - Obradjuje se funkcija sum na liniji 21
INFO  16:50:00,089 - Naveden argument d na liniji 21
INFO  16:50:00,089 - Naveden argument z na liniji 21
INFO  16:50:00,089 - Obradjuje se funkcija inkrement na liniji 26
INFO  16:50:00,089 - Naveden argument inc na liniji 26
ERROR 16:50:00,089 - Greska! Vec postoji argument sa imenom: a
INFO  16:50:00,089 - Deklarisana promenljiva pom na liniji 27
ERROR 16:50:00,089 - Greska na liniji 29 : ime inc nije deklarisano! 
ERROR 16:50:00,089 - Greska na liniji 30 : ime inc nije deklarisano! 
INFO  16:50:00,089 - Obradjuje se funkcija verify na liniji 35
INFO  16:50:00,089 - Obradjuje se funkcija main na liniji 40
ERROR 16:50:00,089 - Semanticka greska na liniji 56 nekompatibilni tipovi prilikom dodele!
ERROR 16:50:00,089 - Semanticka greska na liniji 57 nekompatibilni tipovi prilikom dodele!
ERROR 16:50:00,089 - Semanticka greska na liniji 58 nekompatibilni tipovi prilikom dodele!
ERROR 16:50:00,089 - Semanticka greska na liniji 59 nekompatibilni tipovi prilikom dodele!
ERROR 16:50:00,089 - Semanticka greska na liniji 60 nekompatibilni tipovi prilikom dodele!
ERROR 16:50:00,089 - Semanticka greska na liniji 61 print prima samo num, char ili bool!
ERROR 16:50:00,089 - Semanticka greska na liniji 62 print prima samo num, char ili bool!
ERROR 16:50:00,090 - Semanticka greska na liniji 79  t1 mora biti int, char ili bool!
ERROR 16:50:00,090 - Semanticka greska na liniji 80  t1 mora biti int, char ili bool!
ERROR 16:50:00,090 - Semanticka greska na liniji 81  t1 mora biti int, char ili bool!
ERROR 16:50:00,090 - Semanticka greska na liniji 84 print prima samo num, char ili bool!
ERROR 16:50:00,090 - Semanticka greska na liniji 87 print prima samo num, char ili bool!
ERROR 16:50:00,090 - Semanticka greska na liniji 90 nekompatibilni tipovi prilikom dodele!
ERROR 16:50:00,090 - Semanticka greska na liniji 91 nekompatibilni tipovi prilikom dodele!
ERROR 16:50:00,090 - Semanticka greska na liniji 97  t2 mora biti int, char ili bool!
ERROR 16:50:00,090 - Semanticka greska na liniji 98  t2 mora biti int, char ili bool!
ERROR 16:50:00,090 - Semanticka greska na liniji 99  t2 mora biti int, char ili bool!
ERROR 16:50:00,090 - Semanticka greska na liniji 105 nekompatibilni tipovi za aritmeticku operaciju!
ERROR 16:50:00,090 - Semanticka greska na liniji 105 nekompatibilni tipovi prilikom dodele!
ERROR 16:50:00,090 - Parsiranje NIJE uspesno zavrseno!
