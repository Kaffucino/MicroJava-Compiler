INFO  00:03:33,006 - Compiling source file: C:\pp1_domaci\workspace\MJCompiler\test\program.mj
INFO  00:03:33,034 - #2 program
INFO  00:03:33,034 - #16 test302
INFO  00:03:33,034 - #48 const
INFO  00:03:33,035 - #16 int
INFO  00:03:33,035 - #16 jedan
INFO  00:03:33,035 - #13 =
INFO  00:03:33,035 - #15 1
INFO  00:03:33,035 - #5 ;
INFO  00:03:33,036 - #16 int
INFO  00:03:33,036 - #16 i
INFO  00:03:33,036 - #5 ;
INFO  00:03:33,036 - #16 bool
INFO  00:03:33,037 - #16 ibool
INFO  00:03:33,037 - #5 ;
INFO  00:03:33,037 - #16 int
INFO  00:03:33,037 - #16 niz2
INFO  00:03:33,037 - #5 ;
INFO  00:03:33,037 - #49 record
INFO  00:03:33,037 - #16 Test
INFO  00:03:33,037 - #3 {
INFO  00:03:33,037 - #16 int
INFO  00:03:33,037 - #16 niz
INFO  00:03:33,039 - #50 [
INFO  00:03:33,039 - #51 ]
INFO  00:03:33,039 - #5 ;
INFO  00:03:33,039 - #16 int
INFO  00:03:33,040 - #16 a
INFO  00:03:33,040 - #5 ;
INFO  00:03:33,040 - #4 }
INFO  00:03:33,040 - #49 record
INFO  00:03:33,040 - #16 Test2
INFO  00:03:33,040 - #3 {
INFO  00:03:33,040 - #16 int
INFO  00:03:33,040 - #16 niz23
INFO  00:03:33,040 - #50 [
INFO  00:03:33,040 - #51 ]
INFO  00:03:33,040 - #5 ;
INFO  00:03:33,041 - #16 int
INFO  00:03:33,041 - #16 a2
INFO  00:03:33,041 - #5 ;
INFO  00:03:33,041 - #4 }
INFO  00:03:33,041 - #16 Test
INFO  00:03:33,041 - #16 t1
INFO  00:03:33,041 - #8 ,
INFO  00:03:33,041 - #16 t2
INFO  00:03:33,041 - #5 ;
INFO  00:03:33,041 - #3 {
INFO  00:03:33,041 - #16 int
INFO  00:03:33,042 - #16 sum
INFO  00:03:33,042 - #6 (
INFO  00:03:33,042 - #16 int
INFO  00:03:33,042 - #16 z
INFO  00:03:33,042 - #8 ,
INFO  00:03:33,042 - #16 int
INFO  00:03:33,042 - #16 d
INFO  00:03:33,042 - #7 )
INFO  00:03:33,043 - #3 {
INFO  00:03:33,043 - #16 sum
INFO  00:03:33,043 - #6 (
INFO  00:03:33,043 - #15 1
INFO  00:03:33,044 - #8 ,
INFO  00:03:33,044 - #15 2
INFO  00:03:33,045 - #7 )
INFO  00:03:33,045 - #5 ;
INFO  00:03:33,046 - #10 return
INFO  00:03:33,046 - #16 z
INFO  00:03:33,046 - #11 +
INFO  00:03:33,046 - #16 d
INFO  00:03:33,049 - #5 ;
INFO  00:03:33,049 - #4 }
INFO  00:03:33,050 - #16 int
INFO  00:03:33,050 - #16 inkrement
INFO  00:03:33,050 - #6 (
INFO  00:03:33,050 - #16 int
INFO  00:03:33,050 - #16 a
INFO  00:03:33,050 - #8 ,
INFO  00:03:33,050 - #16 int
INFO  00:03:33,050 - #16 inc
INFO  00:03:33,050 - #7 )
INFO  00:03:33,050 - #16 int
INFO  00:03:33,050 - #16 pom
INFO  00:03:33,050 - #5 ;
INFO  00:03:33,050 - #3 {
INFO  00:03:33,050 - #19 if
INFO  00:03:33,050 - #6 (
INFO  00:03:33,050 - #16 inc
INFO  00:03:33,050 - #22 ==
INFO  00:03:33,050 - #16 jedan
INFO  00:03:33,051 - #7 )
INFO  00:03:33,052 - #16 pom
INFO  00:03:33,052 - #13 =
INFO  00:03:33,052 - #15 1
INFO  00:03:33,053 - #5 ;
INFO  00:03:33,053 - #20 else
INFO  00:03:33,053 - #19 if
INFO  00:03:33,053 - #6 (
INFO  00:03:33,053 - #16 inc
INFO  00:03:33,053 - #22 ==
INFO  00:03:33,053 - #15 2
INFO  00:03:33,053 - #7 )
INFO  00:03:33,053 - #16 pom
INFO  00:03:33,053 - #13 =
INFO  00:03:33,053 - #16 a
INFO  00:03:33,053 - #5 ;
INFO  00:03:33,053 - #10 return
INFO  00:03:33,054 - #16 sum
INFO  00:03:33,054 - #6 (
INFO  00:03:33,054 - #16 a
INFO  00:03:33,054 - #8 ,
INFO  00:03:33,054 - #16 pom
INFO  00:03:33,054 - #7 )
INFO  00:03:33,054 - #5 ;
INFO  00:03:33,054 - #4 }
INFO  00:03:33,054 - #16 bool
INFO  00:03:33,054 - #16 verify
INFO  00:03:33,054 - #6 (
INFO  00:03:33,054 - #7 )
INFO  00:03:33,055 - #3 {
INFO  00:03:33,055 - #9 print
INFO  00:03:33,055 - #6 (
INFO  00:03:33,055 - #17 'v'
INFO  00:03:33,055 - #7 )
INFO  00:03:33,055 - #5 ;
INFO  00:03:33,055 - #10 return
INFO  00:03:33,055 - #18 false
INFO  00:03:33,055 - #5 ;
INFO  00:03:33,055 - #4 }
INFO  00:03:33,055 - #14 void
INFO  00:03:33,055 - #16 main
INFO  00:03:33,056 - #6 (
INFO  00:03:33,056 - #7 )
INFO  00:03:33,056 - #3 {
INFO  00:03:33,056 - #19 if
INFO  00:03:33,056 - #6 (
INFO  00:03:33,056 - #15 1
INFO  00:03:33,056 - #23 !=
INFO  00:03:33,056 - #15 1
INFO  00:03:33,056 - #7 )
INFO  00:03:33,056 - #9 print
INFO  00:03:33,056 - #6 (
INFO  00:03:33,056 - #12 -
INFO  00:03:33,056 - #15 6
INFO  00:03:33,056 - #7 )
INFO  00:03:33,057 - #5 ;
INFO  00:03:33,057 - #20 else
INFO  00:03:33,057 - #9 print
INFO  00:03:33,057 - #6 (
INFO  00:03:33,057 - #15 0
INFO  00:03:33,057 - #7 )
INFO  00:03:33,057 - #5 ;
INFO  00:03:33,057 - #16 ibool
INFO  00:03:33,057 - #13 =
INFO  00:03:33,057 - #18 false
INFO  00:03:33,057 - #5 ;
INFO  00:03:33,057 - #16 i
INFO  00:03:33,057 - #13 =
INFO  00:03:33,057 - #15 0
INFO  00:03:33,057 - #5 ;
INFO  00:03:33,057 - #34 do
INFO  00:03:33,057 - #3 {
INFO  00:03:33,057 - #19 if
INFO  00:03:33,057 - #6 (
INFO  00:03:33,058 - #16 i
INFO  00:03:33,058 - #22 ==
INFO  00:03:33,058 - #15 2
INFO  00:03:33,058 - #7 )
INFO  00:03:33,058 - #16 ibool
INFO  00:03:33,058 - #13 =
INFO  00:03:33,058 - #18 true
INFO  00:03:33,058 - #5 ;
INFO  00:03:33,058 - #16 i
INFO  00:03:33,058 - #46 ++
INFO  00:03:33,058 - #5 ;
INFO  00:03:33,058 - #4 }
INFO  00:03:33,058 - #35 while
INFO  00:03:33,058 - #6 (
INFO  00:03:33,058 - #16 i
INFO  00:03:33,058 - #26 <
INFO  00:03:33,058 - #15 5
INFO  00:03:33,059 - #7 )
INFO  00:03:33,059 - #5 ;
INFO  00:03:33,059 - #19 if
INFO  00:03:33,059 - #6 (
INFO  00:03:33,059 - #16 ibool
INFO  00:03:33,059 - #7 )
INFO  00:03:33,059 - #19 if
INFO  00:03:33,059 - #6 (
INFO  00:03:33,059 - #16 i
INFO  00:03:33,059 - #22 ==
INFO  00:03:33,059 - #15 5
INFO  00:03:33,059 - #7 )
INFO  00:03:33,059 - #9 print
INFO  00:03:33,059 - #6 (
INFO  00:03:33,059 - #15 1
INFO  00:03:33,059 - #7 )
INFO  00:03:33,059 - #5 ;
INFO  00:03:33,059 - #20 else
INFO  00:03:33,059 - #9 print
INFO  00:03:33,060 - #6 (
INFO  00:03:33,060 - #12 -
INFO  00:03:33,060 - #15 1
INFO  00:03:33,060 - #7 )
INFO  00:03:33,060 - #5 ;
INFO  00:03:33,060 - #16 t1
INFO  00:03:33,060 - #13 =
INFO  00:03:33,060 - #36 new
INFO  00:03:33,060 - #16 Test
INFO  00:03:33,060 - #5 ;
INFO  00:03:33,060 - #16 t1
INFO  00:03:33,060 - #43 .
INFO  00:03:33,060 - #16 a
INFO  00:03:33,060 - #13 =
INFO  00:03:33,060 - #15 2
INFO  00:03:33,060 - #5 ;
INFO  00:03:33,060 - #16 t1
INFO  00:03:33,060 - #43 .
INFO  00:03:33,060 - #16 niz
INFO  00:03:33,060 - #13 =
INFO  00:03:33,060 - #36 new
INFO  00:03:33,060 - #16 int
INFO  00:03:33,060 - #50 [
INFO  00:03:33,060 - #15 3
INFO  00:03:33,060 - #51 ]
INFO  00:03:33,060 - #5 ;
INFO  00:03:33,060 - #16 t1
INFO  00:03:33,060 - #43 .
INFO  00:03:33,060 - #16 niz
INFO  00:03:33,060 - #50 [
INFO  00:03:33,061 - #15 0
INFO  00:03:33,061 - #51 ]
INFO  00:03:33,061 - #13 =
INFO  00:03:33,061 - #15 1
INFO  00:03:33,061 - #28 *
INFO  00:03:33,061 - #16 t1
INFO  00:03:33,061 - #43 .
INFO  00:03:33,061 - #16 a
INFO  00:03:33,061 - #5 ;
INFO  00:03:33,062 - #16 t1
INFO  00:03:33,062 - #43 .
INFO  00:03:33,062 - #16 niz
INFO  00:03:33,062 - #50 [
INFO  00:03:33,062 - #15 1
INFO  00:03:33,062 - #51 ]
INFO  00:03:33,062 - #13 =
INFO  00:03:33,062 - #15 2
INFO  00:03:33,062 - #28 *
INFO  00:03:33,062 - #16 t1
INFO  00:03:33,062 - #43 .
INFO  00:03:33,062 - #16 a
INFO  00:03:33,062 - #5 ;
INFO  00:03:33,062 - #16 t1
INFO  00:03:33,062 - #43 .
INFO  00:03:33,062 - #16 niz
INFO  00:03:33,062 - #50 [
INFO  00:03:33,062 - #15 2
INFO  00:03:33,062 - #51 ]
INFO  00:03:33,062 - #13 =
INFO  00:03:33,062 - #16 sum
INFO  00:03:33,062 - #6 (
INFO  00:03:33,062 - #16 t1
INFO  00:03:33,062 - #43 .
INFO  00:03:33,062 - #16 niz
INFO  00:03:33,062 - #50 [
INFO  00:03:33,062 - #15 1
INFO  00:03:33,062 - #51 ]
INFO  00:03:33,062 - #8 ,
INFO  00:03:33,062 - #16 t1
INFO  00:03:33,062 - #43 .
INFO  00:03:33,062 - #16 niz
INFO  00:03:33,063 - #50 [
INFO  00:03:33,063 - #15 0
INFO  00:03:33,063 - #51 ]
INFO  00:03:33,063 - #7 )
INFO  00:03:33,063 - #28 *
INFO  00:03:33,063 - #16 t1
INFO  00:03:33,063 - #43 .
INFO  00:03:33,063 - #16 a
INFO  00:03:33,063 - #11 +
INFO  00:03:33,063 - #15 1
INFO  00:03:33,063 - #5 ;
INFO  00:03:33,063 - #19 if
INFO  00:03:33,063 - #6 (
INFO  00:03:33,063 - #16 verify
INFO  00:03:33,063 - #6 (
INFO  00:03:33,063 - #7 )
INFO  00:03:33,063 - #7 )
INFO  00:03:33,063 - #9 print
INFO  00:03:33,063 - #6 (
INFO  00:03:33,064 - #16 ord
INFO  00:03:33,064 - #6 (
INFO  00:03:33,064 - #17 'A'
INFO  00:03:33,064 - #7 )
INFO  00:03:33,064 - #7 )
INFO  00:03:33,064 - #5 ;
INFO  00:03:33,064 - #20 else
INFO  00:03:33,064 - #9 print
INFO  00:03:33,064 - #6 (
INFO  00:03:33,064 - #16 ord
INFO  00:03:33,064 - #6 (
INFO  00:03:33,064 - #17 'a'
INFO  00:03:33,064 - #7 )
INFO  00:03:33,064 - #7 )
INFO  00:03:33,064 - #5 ;
INFO  00:03:33,064 - #9 print
INFO  00:03:33,064 - #6 (
INFO  00:03:33,064 - #16 eol
INFO  00:03:33,064 - #7 )
INFO  00:03:33,064 - #5 ;
INFO  00:03:33,064 - #16 i
INFO  00:03:33,064 - #13 =
INFO  00:03:33,064 - #15 0
INFO  00:03:33,064 - #5 ;
INFO  00:03:33,064 - #34 do
INFO  00:03:33,064 - #3 {
INFO  00:03:33,064 - #19 if
INFO  00:03:33,064 - #6 (
INFO  00:03:33,064 - #16 i
INFO  00:03:33,064 - #22 ==
INFO  00:03:33,064 - #15 3
INFO  00:03:33,064 - #7 )
INFO  00:03:33,064 - #3 {
INFO  00:03:33,064 - #16 i
INFO  00:03:33,064 - #46 ++
INFO  00:03:33,064 - #5 ;
INFO  00:03:33,064 - #39 continue
INFO  00:03:33,064 - #5 ;
INFO  00:03:33,064 - #4 }
INFO  00:03:33,065 - #19 if
INFO  00:03:33,065 - #6 (
INFO  00:03:33,065 - #16 i
INFO  00:03:33,065 - #22 ==
INFO  00:03:33,065 - #15 4
INFO  00:03:33,065 - #7 )
INFO  00:03:33,065 - #31 break
INFO  00:03:33,065 - #5 ;
INFO  00:03:33,065 - #16 i
INFO  00:03:33,065 - #13 =
INFO  00:03:33,065 - #16 inkrement
INFO  00:03:33,065 - #6 (
INFO  00:03:33,065 - #16 i
INFO  00:03:33,065 - #8 ,
INFO  00:03:33,065 - #15 1
INFO  00:03:33,065 - #7 )
INFO  00:03:33,065 - #5 ;
INFO  00:03:33,065 - #4 }
INFO  00:03:33,065 - #35 while
INFO  00:03:33,065 - #6 (
INFO  00:03:33,066 - #16 i
INFO  00:03:33,066 - #26 <
INFO  00:03:33,066 - #15 10
INFO  00:03:33,066 - #7 )
INFO  00:03:33,066 - #5 ;
INFO  00:03:33,066 - #19 if
INFO  00:03:33,066 - #6 (
INFO  00:03:33,066 - #16 i
INFO  00:03:33,066 - #22 ==
INFO  00:03:33,066 - #15 3
INFO  00:03:33,066 - #44 &&
INFO  00:03:33,066 - #16 verify
INFO  00:03:33,066 - #6 (
INFO  00:03:33,066 - #7 )
INFO  00:03:33,066 - #7 )
INFO  00:03:33,066 - #9 print
INFO  00:03:33,066 - #6 (
INFO  00:03:33,066 - #12 -
INFO  00:03:33,066 - #15 4
INFO  00:03:33,066 - #7 )
INFO  00:03:33,066 - #5 ;
INFO  00:03:33,066 - #20 else
INFO  00:03:33,066 - #9 print
INFO  00:03:33,066 - #6 (
INFO  00:03:33,066 - #15 4
INFO  00:03:33,066 - #7 )
INFO  00:03:33,066 - #5 ;
INFO  00:03:33,066 - #37 read
INFO  00:03:33,066 - #6 (
INFO  00:03:33,066 - #16 t1
INFO  00:03:33,066 - #43 .
INFO  00:03:33,066 - #16 niz
INFO  00:03:33,066 - #50 [
INFO  00:03:33,066 - #15 0
INFO  00:03:33,066 - #51 ]
INFO  00:03:33,066 - #7 )
INFO  00:03:33,066 - #5 ;
INFO  00:03:33,066 - #37 read
INFO  00:03:33,066 - #6 (
INFO  00:03:33,066 - #16 t1
INFO  00:03:33,066 - #43 .
INFO  00:03:33,067 - #16 niz
INFO  00:03:33,067 - #50 [
INFO  00:03:33,067 - #15 1
INFO  00:03:33,067 - #51 ]
INFO  00:03:33,067 - #7 )
INFO  00:03:33,067 - #5 ;
INFO  00:03:33,067 - #37 read
INFO  00:03:33,067 - #6 (
INFO  00:03:33,067 - #16 t1
INFO  00:03:33,067 - #43 .
INFO  00:03:33,067 - #16 niz
INFO  00:03:33,067 - #50 [
INFO  00:03:33,067 - #15 2
INFO  00:03:33,067 - #51 ]
INFO  00:03:33,067 - #7 )
INFO  00:03:33,067 - #5 ;
INFO  00:03:33,067 - #9 print
INFO  00:03:33,067 - #6 (
INFO  00:03:33,067 - #16 eol
INFO  00:03:33,067 - #7 )
INFO  00:03:33,067 - #5 ;
INFO  00:03:33,067 - #16 chr
INFO  00:03:33,067 - #6 (
INFO  00:03:33,067 - #15 3
INFO  00:03:33,067 - #7 )
INFO  00:03:33,067 - #5 ;
INFO  00:03:33,067 - #9 print
INFO  00:03:33,067 - #6 (
INFO  00:03:33,067 - #16 sum
INFO  00:03:33,067 - #6 (
INFO  00:03:33,067 - #16 sum
INFO  00:03:33,067 - #6 (
INFO  00:03:33,067 - #16 t1
INFO  00:03:33,067 - #43 .
INFO  00:03:33,067 - #16 niz
INFO  00:03:33,067 - #50 [
INFO  00:03:33,067 - #15 0
INFO  00:03:33,067 - #51 ]
INFO  00:03:33,067 - #8 ,
INFO  00:03:33,067 - #16 t1
INFO  00:03:33,067 - #43 .
INFO  00:03:33,067 - #16 niz
INFO  00:03:33,067 - #50 [
INFO  00:03:33,067 - #15 1
INFO  00:03:33,067 - #51 ]
INFO  00:03:33,067 - #7 )
INFO  00:03:33,067 - #8 ,
INFO  00:03:33,067 - #16 t1
INFO  00:03:33,067 - #43 .
INFO  00:03:33,067 - #16 niz
INFO  00:03:33,067 - #50 [
INFO  00:03:33,067 - #15 2
INFO  00:03:33,067 - #51 ]
INFO  00:03:33,068 - #7 )
INFO  00:03:33,068 - #7 )
INFO  00:03:33,068 - #5 ;
INFO  00:03:33,068 - #9 print
INFO  00:03:33,068 - #6 (
INFO  00:03:33,068 - #16 eol
INFO  00:03:33,068 - #7 )
INFO  00:03:33,068 - #5 ;
INFO  00:03:33,068 - #9 print
INFO  00:03:33,068 - #6 (
INFO  00:03:33,068 - #16 inkrement
INFO  00:03:33,068 - #6 (
INFO  00:03:33,068 - #16 t1
INFO  00:03:33,068 - #43 .
INFO  00:03:33,068 - #16 niz
INFO  00:03:33,068 - #50 [
INFO  00:03:33,068 - #15 2
INFO  00:03:33,068 - #51 ]
INFO  00:03:33,068 - #8 ,
INFO  00:03:33,068 - #15 2
INFO  00:03:33,068 - #7 )
INFO  00:03:33,068 - #7 )
INFO  00:03:33,068 - #5 ;
INFO  00:03:33,068 - #16 t2
INFO  00:03:33,068 - #13 =
INFO  00:03:33,068 - #36 new
INFO  00:03:33,068 - #16 Test
INFO  00:03:33,068 - #5 ;
INFO  00:03:33,068 - #16 t2
INFO  00:03:33,068 - #43 .
INFO  00:03:33,068 - #16 a
INFO  00:03:33,068 - #13 =
INFO  00:03:33,068 - #15 3
INFO  00:03:33,068 - #5 ;
INFO  00:03:33,068 - #16 t2
INFO  00:03:33,068 - #43 .
INFO  00:03:33,068 - #16 niz
INFO  00:03:33,068 - #13 =
INFO  00:03:33,068 - #36 new
INFO  00:03:33,068 - #16 int
INFO  00:03:33,068 - #50 [
INFO  00:03:33,068 - #15 3
INFO  00:03:33,068 - #51 ]
INFO  00:03:33,068 - #5 ;
INFO  00:03:33,068 - #16 i
INFO  00:03:33,069 - #13 =
INFO  00:03:33,069 - #15 0
INFO  00:03:33,069 - #5 ;
INFO  00:03:33,069 - #34 do
INFO  00:03:33,069 - #3 {
INFO  00:03:33,069 - #16 t2
INFO  00:03:33,069 - #43 .
INFO  00:03:33,069 - #16 niz
INFO  00:03:33,069 - #50 [
INFO  00:03:33,069 - #16 i
INFO  00:03:33,069 - #51 ]
INFO  00:03:33,069 - #13 =
INFO  00:03:33,069 - #16 t1
INFO  00:03:33,069 - #43 .
INFO  00:03:33,069 - #16 niz
INFO  00:03:33,069 - #50 [
INFO  00:03:33,069 - #16 i
INFO  00:03:33,069 - #51 ]
INFO  00:03:33,069 - #28 *
INFO  00:03:33,070 - #15 2
INFO  00:03:33,071 - #28 *
INFO  00:03:33,071 - #16 t2
INFO  00:03:33,071 - #43 .
INFO  00:03:33,071 - #16 a
INFO  00:03:33,071 - #5 ;
INFO  00:03:33,072 - #16 i
INFO  00:03:33,072 - #46 ++
INFO  00:03:33,072 - #5 ;
INFO  00:03:33,072 - #4 }
INFO  00:03:33,073 - #35 while
INFO  00:03:33,073 - #6 (
INFO  00:03:33,073 - #16 i
INFO  00:03:33,073 - #26 <
INFO  00:03:33,073 - #15 3
INFO  00:03:33,073 - #7 )
INFO  00:03:33,073 - #5 ;
INFO  00:03:33,073 - #9 print
INFO  00:03:33,073 - #6 (
INFO  00:03:33,073 - #16 t2
INFO  00:03:33,073 - #43 .
INFO  00:03:33,073 - #16 niz
INFO  00:03:33,073 - #50 [
INFO  00:03:33,073 - #15 0
INFO  00:03:33,073 - #51 ]
INFO  00:03:33,073 - #7 )
INFO  00:03:33,073 - #5 ;
INFO  00:03:33,073 - #9 print
INFO  00:03:33,073 - #6 (
INFO  00:03:33,073 - #16 t2
INFO  00:03:33,073 - #43 .
INFO  00:03:33,073 - #16 niz
INFO  00:03:33,073 - #50 [
INFO  00:03:33,073 - #15 1
INFO  00:03:33,073 - #51 ]
INFO  00:03:33,073 - #7 )
INFO  00:03:33,073 - #5 ;
INFO  00:03:33,073 - #9 print
INFO  00:03:33,073 - #6 (
INFO  00:03:33,073 - #16 t2
INFO  00:03:33,073 - #43 .
INFO  00:03:33,073 - #16 niz
INFO  00:03:33,074 - #50 [
INFO  00:03:33,074 - #15 2
INFO  00:03:33,074 - #51 ]
INFO  00:03:33,074 - #7 )
INFO  00:03:33,074 - #5 ;
INFO  00:03:33,074 - #9 print
INFO  00:03:33,074 - #6 (
INFO  00:03:33,074 - #16 eol
INFO  00:03:33,074 - #7 )
INFO  00:03:33,074 - #5 ;
INFO  00:03:33,074 - #16 i
INFO  00:03:33,074 - #13 =
INFO  00:03:33,074 - #15 0
INFO  00:03:33,074 - #5 ;
INFO  00:03:33,074 - #16 niz2
INFO  00:03:33,074 - #13 =
INFO  00:03:33,074 - #15 0
INFO  00:03:33,074 - #5 ;
INFO  00:03:33,074 - #34 do
INFO  00:03:33,074 - #3 {
INFO  00:03:33,074 - #16 niz2
INFO  00:03:33,074 - #13 =
INFO  00:03:33,074 - #16 niz2
INFO  00:03:33,074 - #11 +
INFO  00:03:33,074 - #16 t1
INFO  00:03:33,074 - #43 .
INFO  00:03:33,074 - #16 niz
INFO  00:03:33,074 - #50 [
INFO  00:03:33,074 - #16 i
INFO  00:03:33,074 - #51 ]
INFO  00:03:33,074 - #11 +
INFO  00:03:33,074 - #16 t2
INFO  00:03:33,074 - #43 .
INFO  00:03:33,074 - #16 niz
INFO  00:03:33,074 - #50 [
INFO  00:03:33,074 - #16 i
INFO  00:03:33,074 - #51 ]
INFO  00:03:33,074 - #5 ;
INFO  00:03:33,074 - #16 i
INFO  00:03:33,074 - #46 ++
INFO  00:03:33,074 - #5 ;
INFO  00:03:33,074 - #4 }
INFO  00:03:33,074 - #35 while
INFO  00:03:33,074 - #6 (
INFO  00:03:33,074 - #16 i
INFO  00:03:33,074 - #26 <
INFO  00:03:33,074 - #15 3
INFO  00:03:33,074 - #7 )
INFO  00:03:33,074 - #5 ;
INFO  00:03:33,074 - #9 print
INFO  00:03:33,074 - #6 (
INFO  00:03:33,074 - #16 niz2
INFO  00:03:33,074 - #7 )
INFO  00:03:33,074 - #5 ;
INFO  00:03:33,074 - #9 print
INFO  00:03:33,074 - #6 (
INFO  00:03:33,074 - #16 eol
INFO  00:03:33,074 - #7 )
INFO  00:03:33,074 - #5 ;
INFO  00:03:33,074 - #4 }
INFO  00:03:33,074 - #4 }
INFO  00:03:33,081 - Trenutan tip konstante je:  int na liniji 5
INFO  00:03:33,081 - Deklarisana promenljiva i na liniji 7
INFO  00:03:33,082 - Deklarisana promenljiva ibool na liniji 10
INFO  00:03:33,082 - Deklarisana promenljiva niz2 na liniji 12
INFO  00:03:33,082 - Deklarisana promenljiva niz na liniji 15
INFO  00:03:33,082 - Deklarisana promenljiva a na liniji 16
INFO  00:03:33,082 - Deklarisana je rekord :  Test na liniji 14
INFO  00:03:33,082 - Deklarisana promenljiva niz23 na liniji 20
INFO  00:03:33,082 - Deklarisana promenljiva a2 na liniji 21
INFO  00:03:33,082 - Deklarisana je rekord :  Test2 na liniji 19
INFO  00:03:33,082 - Deklarisana promenljiva t2 na liniji 24
INFO  00:03:33,082 - Deklarisana promenljiva t1 na liniji 24
INFO  00:03:33,082 - Obradjuje se funkcija sum na liniji 28
INFO  00:03:33,082 - Naveden argument d na liniji 28
INFO  00:03:33,082 - Naveden argument z na liniji 28
INFO  00:03:33,082 - Pronadjen poziv funkcije sum na liniji 30
INFO  00:03:33,082 - Obradjuje se funkcija inkrement na liniji 34
INFO  00:03:33,082 - Naveden argument inc na liniji 34
INFO  00:03:33,082 - Naveden argument a na liniji 34
INFO  00:03:33,082 - Deklarisana promenljiva pom na liniji 35
INFO  00:03:33,083 - Obradjuje se funkcija verify na liniji 44
INFO  00:03:33,083 - Obradjuje se funkcija main na liniji 52
ERROR 00:03:33,083 - Semanticka greska na liniji 74 print prima samo num, char ili bool!
ERROR 00:03:33,083 - Semanticka greska na liniji 75 print prima samo num, char ili bool!
ERROR 00:03:33,083 - Semanticka greska na liniji 92  t1 mora biti int, char ili bool!
ERROR 00:03:33,083 - Semanticka greska na liniji 93  t1 mora biti int, char ili bool!
ERROR 00:03:33,083 - Semanticka greska na liniji 94  t1 mora biti int, char ili bool!
INFO  00:03:33,083 - Pronadjen poziv funkcije chr na liniji 97
ERROR 00:03:33,083 - Semanticka greska na liniji 99 print prima samo num, char ili bool!
ERROR 00:03:33,083 - Semanticka greska na liniji 102 print prima samo num, char ili bool!
ERROR 00:03:33,083 - Semanticka greska na liniji 112  t2 mora biti int, char ili bool!
ERROR 00:03:33,083 - Semanticka greska na liniji 113  t2 mora biti int, char ili bool!
ERROR 00:03:33,083 - Semanticka greska na liniji 114  t2 mora biti int, char ili bool!
ERROR 00:03:33,084 - Parsiranje NIJE uspesno zavrseno!
