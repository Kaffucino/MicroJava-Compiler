// generated with ast extension for cup
// version 0.8
// 10/1/2022 23:6:55


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(MoreVarDecl MoreVarDecl);
    public void visit(Mulop Mulop);
    public void visit(MethodDecl MethodDecl);
    public void visit(StatementsList StatementsList);
    public void visit(Relop Relop);
    public void visit(TermList TermList);
    public void visit(AllDecl AllDecl);
    public void visit(ConditionList ConditionList);
    public void visit(CondTermList CondTermList);
    public void visit(Else Else);
    public void visit(AllDeclList AllDeclList);
    public void visit(Addop Addop);
    public void visit(ClassDeclExtends ClassDeclExtends);
    public void visit(RecordDecl RecordDecl);
    public void visit(MethodDeclVariables MethodDeclVariables);
    public void visit(Factor Factor);
    public void visit(Designator Designator);
    public void visit(FormParsList FormParsList);
    public void visit(ErrorGramatika ErrorGramatika);
    public void visit(MethodDeclStatement MethodDeclStatement);
    public void visit(IfCond IfCond);
    public void visit(MethodDeclType MethodDeclType);
    public void visit(ActParsList ActParsList);
    public void visit(AnyConst AnyConst);
    public void visit(FactorActPars FactorActPars);
    public void visit(ExprList ExprList);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(DesignatorList DesignatorList);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(MethodDeclPars MethodDeclPars);
    public void visit(ClassConstructor ClassConstructor);
    public void visit(Statement Statement);
    public void visit(ClassDeclBody ClassDeclBody);
    public void visit(VarDecl VarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(SingleStatement SingleStatement);
    public void visit(FormPars FormPars);
    public void visit(LOrBegin LOrBegin);
    public void visit(ConditionListNo ConditionListNo);
    public void visit(ConditionListMore ConditionListMore);
    public void visit(Condition Condition);
    public void visit(LAndBegin LAndBegin);
    public void visit(CondTermListNo CondTermListNo);
    public void visit(CondTermListMore CondTermListMore);
    public void visit(CondTerm CondTerm);
    public void visit(ContFactTwo ContFactTwo);
    public void visit(CondFactOne CondFactOne);
    public void visit(ExprListNoMore ExprListNoMore);
    public void visit(ExprListMore ExprListMore);
    public void visit(ExprMinusTerm ExprMinusTerm);
    public void visit(ExprNoMinus ExprNoMinus);
    public void visit(ExprMinus ExprMinus);
    public void visit(TermListNo TermListNo);
    public void visit(TermListMore TermListMore);
    public void visit(Term Term);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewTypeExpr FactorNewTypeExpr);
    public void visit(FactorNewType FactorNewType);
    public void visit(FactorBool FactorBool);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNum FactorNum);
    public void visit(FactorDesignatorNoPars FactorDesignatorNoPars);
    public void visit(FactorDesignatorPars FactorDesignatorPars);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(ActParsListNo ActParsListNo);
    public void visit(ActParsListMore ActParsListMore);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatementDerived1 DesignatorStatementDerived1);
    public void visit(DesignatorStatementDMINUS DesignatorStatementDMINUS);
    public void visit(DesignatorStatementDPLUS DesignatorStatementDPLUS);
    public void visit(DesignatorStatementParsNo DesignatorStatementParsNo);
    public void visit(DesignatorStatementParsYes DesignatorStatementParsYes);
    public void visit(DesignatorStatementAssign DesignatorStatementAssign);
    public void visit(EndDesiList EndDesiList);
    public void visit(ExprDesiList ExprDesiList);
    public void visit(DotDesiList DotDesiList);
    public void visit(DesignatorTHIS DesignatorTHIS);
    public void visit(DesignatorIDENT DesignatorIDENT);
    public void visit(ElseNoNo ElseNoNo);
    public void visit(ElseNo ElseNo);
    public void visit(ElseYes ElseYes);
    public void visit(IfCondDerived1 IfCondDerived1);
    public void visit(IfCondGood IfCondGood);
    public void visit(IfEnd IfEnd);
    public void visit(ElseBegin ElseBegin);
    public void visit(IfBegin IfBegin);
    public void visit(Do Do);
    public void visit(Goto Goto);
    public void visit(SingleStatementDesignatorPRINTGOTO SingleStatementDesignatorPRINTGOTO);
    public void visit(SingleStatementDesignatorPRINTConst SingleStatementDesignatorPRINTConst);
    public void visit(SingleStatementDesignatorPRINT SingleStatementDesignatorPRINT);
    public void visit(SingleStatementDesignatorREAD SingleStatementDesignatorREAD);
    public void visit(SingleStatementDesignatorRETURNExpr SingleStatementDesignatorRETURNExpr);
    public void visit(SingleStatementDesignatorRETURN SingleStatementDesignatorRETURN);
    public void visit(SingleStatementDesignatorCONTINUE SingleStatementDesignatorCONTINUE);
    public void visit(SingleStatementDesignatorBREAK SingleStatementDesignatorBREAK);
    public void visit(SingleStatementDerived1 SingleStatementDerived1);
    public void visit(SingleStatementDOState SingleStatementDOState);
    public void visit(SingleStatementIFState SingleStatementIFState);
    public void visit(SingleStatementDesignatorState SingleStatementDesignatorState);
    public void visit(StatementsListNo StatementsListNo);
    public void visit(StatementsListMore StatementsListMore);
    public void visit(Statements Statements);
    public void visit(MoreStatements MoreStatements);
    public void visit(StatementNoLabel StatementNoLabel);
    public void visit(StatementLabel StatementLabel);
    public void visit(FormParsListNo FormParsListNo);
    public void visit(FormParsListBrackets FormParsListBrackets);
    public void visit(FormParsListNoBrackets FormParsListNoBrackets);
    public void visit(FormParsBrackets FormParsBrackets);
    public void visit(FormParsDerived1 FormParsDerived1);
    public void visit(FormParsNoBrackets FormParsNoBrackets);
    public void visit(MulProc MulProc);
    public void visit(MulDiv MulDiv);
    public void visit(MulStar MulStar);
    public void visit(OpMinus OpMinus);
    public void visit(OpPlus OpPlus);
    public void visit(RelopLE RelopLE);
    public void visit(RelopLS RelopLS);
    public void visit(RelopGE RelopGE);
    public void visit(RelopGR RelopGR);
    public void visit(RelopNEqual RelopNEqual);
    public void visit(RelopDEqual RelopDEqual);
    public void visit(Assignop Assignop);
    public void visit(Label Label);
    public void visit(Type Type);
    public void visit(MoreVarDeclNo MoreVarDeclNo);
    public void visit(MoreVarDeclMore MoreVarDeclMore);
    public void visit(RecordName RecordName);
    public void visit(RecordDecls RecordDecls);
    public void visit(VarDeclNo VarDeclNo);
    public void visit(VarDeclMoreArray VarDeclMoreArray);
    public void visit(VarDeclMore VarDeclMore);
    public void visit(VarDeclListArray VarDeclListArray);
    public void visit(VarDeclListDerived6 VarDeclListDerived6);
    public void visit(VarDeclListDerived5 VarDeclListDerived5);
    public void visit(VarDeclListDerived4 VarDeclListDerived4);
    public void visit(VarDeclListDerived3 VarDeclListDerived3);
    public void visit(VarDeclListDerived2 VarDeclListDerived2);
    public void visit(VarDeclListDerived1 VarDeclListDerived1);
    public void visit(VarDeclListNormal VarDeclListNormal);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(ConstDeclNo ConstDeclNo);
    public void visit(ConstDeclMore ConstDeclMore);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(ClassConstructorNO ClassConstructorNO);
    public void visit(ClassDeclBodyNO ClassDeclBodyNO);
    public void visit(ClassDeclBodyYes ClassDeclBodyYes);
    public void visit(ClassDeclExtendsNo ClassDeclExtendsNo);
    public void visit(ClassDeclExtendsYes ClassDeclExtendsYes);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(MethodDeclVariablesNo MethodDeclVariablesNo);
    public void visit(MethodDeclVariablesYes MethodDeclVariablesYes);
    public void visit(MethodDeclParsNo MethodDeclParsNo);
    public void visit(MethodDeclParsYes MethodDeclParsYes);
    public void visit(MethodDeclTypeOther MethodDeclTypeOther);
    public void visit(MethodDeclTypeVoid MethodDeclTypeVoid);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(MethodDeclListaNoMore MethodDeclListaNoMore);
    public void visit(MethodDeclListaMore MethodDeclListaMore);
    public void visit(ClassDeclarationsss ClassDeclarationsss);
    public void visit(RecordDeclaration RecordDeclaration);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(ProgName ProgName);
    public void visit(NoAllDeclarationList NoAllDeclarationList);
    public void visit(AllDeclarationList AllDeclarationList);
    public void visit(Program Program);

}
